{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\n\nconst TaskList = ({\n  title,\n  id,\n  taskList\n}) => {\n  console.log(taskList);\n  const style = {\n    li: {\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: '0px',\n      height: '24px',\n      listStyleType: 'none'\n    }\n  };\n  return React.createElement(\"div\", {\n    id: id,\n    className: \"task-list-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    id: id,\n    className: `${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(AddTask, {\n    idColumn: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    taskList\n  }\n}) => ({\n  taskList\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","TaskList","title","id","taskList","console","log","style","li","display","maxWidth","width","padding","height","listStyleType","toLowerCase","match","toLocaleString","replace","mapStateToProps","allTasks"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA,KAAD;AAAQC,EAAAA,EAAR;AAAYC,EAAAA;AAAZ,CAAF,KAA8B;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAGE,QAAMG,KAAK,GAAG;AACZC,IAAAA,EAAE,EAAC;AACDC,MAAAA,OAAO,EAAE,OADR;AAEDC,MAAAA,QAAQ,EAAE,OAFT;AAGDC,MAAAA,KAAK,EAAE,MAHN;AAIDC,MAAAA,OAAO,EAAE,KAJR;AAKDC,MAAAA,MAAM,EAAE,MALP;AAMDC,MAAAA,aAAa,EAAE;AANd;AADS,GAAd;AAWA,SACE;AAAK,IAAA,EAAE,EAAEX,EAAT;AAAa,IAAA,SAAS,EAAC,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CAEE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CAFF,EAGA;AAAK,IAAA,EAAE,EAAEC,EAAT;AACK,IAAA,SAAS,EAAG,GAAED,KAAK,CAACa,WAAN,GAAoBC,KAApB,CAA0B,MAA1B,EAAkCC,cAAlC,GAAmDC,OAAnD,CAA2D,UAA3D,EAAuE,GAAvE,CAA4E,sBAD/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEf,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHA,CADF,CADF,CADF;AAeD,CA9BD;;AAiCA,MAAMgB,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAC;AAAEhB,IAAAA;AAAF;AAAX,CAAD,MAA+B;AAACA,EAAAA;AAAD,CAA/B,CAAxB;;AAEA,eAAeL,OAAO,CAACoB,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,QAA/B,CAAf","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\n\nconst TaskList = ( {title, id, taskList } ) => {\nconsole.log(taskList)\n\n\n  const style = {\n    li:{\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: '0px',\n      height: '24px',\n      listStyleType: 'none',\n    }\n  }\n  \n  return (\n    <div id={id} className=\"task-list-wrapper\">\n      <div className=\"task-list\">\n        <>\n        \n          <h4 className='p-l-8'>{title}</h4>\n        <div id={id}\n             className={`${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`}>\n          \n          <AddTask idColumn={id}/>\n        </div>\n        </>\n      </div>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks:{ taskList } })=> ({taskList});\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}