{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\n\nconst TaskList = ({\n  taskItems,\n  title,\n  id,\n  taskList\n}) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false;\n  let shiftX;\n  let shiftY;\n\n  const liEnterHandler = e => {\n    e.target.className = 'taskItem active';\n  };\n\n  const liLeaveHandler = e => {\n    e.target.className = 'taskItem';\n    readyToDragFlag = false;\n  };\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true;\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function () {\n      return false;\n    };\n  };\n\n  const liMouseMoveHandler = e => {\n    if (readyToDragFlag) {\n      e.target.style.position = 'absolute';\n      e.target.style.zIndex = 1000;\n      root.appendChild(e.target);\n      moveAt(e.pageX, e.pageY);\n      console.log('lets DRAG!');\n    }\n\n    function moveAt(pageX, pageY) {\n      e.target.style.left = pageX - shiftX + 'px';\n      e.target.style.top = pageY - shiftY + 'px';\n    }\n  };\n\n  const liMouseUpHandler = e => {\n    readyToDragFlag = false;\n  };\n\n  const style = {\n    li: {\n      userSelect: 'none',\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: '0px',\n      height: '24px',\n      listStyleType: 'none'\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"task-list-wrapper\",\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    id: id,\n    className: `${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, taskItems.map((task, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      index: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: style.li,\n      index: index + 1,\n      className: \"taskItem\",\n      key: index,\n      onMouseEnter: liEnterHandler,\n      onMouseLeave: liLeaveHandler,\n      onMouseDown: liMouseDownHandler,\n      onMouseMove: liMouseMoveHandler,\n      onMouseUp: liMouseUpHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TaskItem, {\n      task: task,\n      key: task.id,\n      index: index,\n      column: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  })), React.createElement(AddTask, {\n    idColumn: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    taskList\n  }\n}) => ({\n  taskList\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","TaskList","taskItems","title","id","taskList","root","document","getElementById","readyToDragFlag","shiftX","shiftY","liEnterHandler","e","target","className","liLeaveHandler","liMouseDownHandler","clientX","getBoundingClientRect","left","clientY","top","ondragstart","liMouseMoveHandler","style","position","zIndex","appendChild","moveAt","pageX","pageY","console","log","liMouseUpHandler","li","userSelect","display","maxWidth","width","padding","height","listStyleType","toLowerCase","match","toLocaleString","replace","map","task","index","mapStateToProps","allTasks"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\n\nconst TaskList = ( { taskItems, title, id, taskList  } ) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false\n  let shiftX\n  let shiftY\n  \n  const liEnterHandler = e => {\n    e.target.className='taskItem active' \n  }\n  const liLeaveHandler = e => {\n    e.target.className='taskItem'\n    readyToDragFlag = false\n  }\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n    e.target.ondragstart = function() {\n      return false;\n    };\n  }\n\n  const liMouseMoveHandler = e => {\n    if(readyToDragFlag){\n      \n      e.target.style.position = 'absolute'\n      e.target.style.zIndex = 1000;\n      root.appendChild(e.target);\n      moveAt(e.pageX, e.pageY);\n      console.log('lets DRAG!');\n    }\n    \n    function moveAt(pageX, pageY){\n      e.target.style.left = pageX - shiftX +'px'\n      e.target.style.top = pageY - shiftY +'px'\n    }\n  }\n\n  const liMouseUpHandler = e =>{\n    readyToDragFlag = false\n  }\n  \n  const style = {\n    li:{\n      userSelect: 'none',\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: '0px',\n      height: '24px',\n      listStyleType: 'none',\n    }\n  }\n  \n  return (\n    <div className=\"task-list-wrapper\"\n          id={id}>\n      <div className=\"task-list\">\n        <>\n          <h4 className='p-l-8'>{title}</h4>\n        <div id={id}\n             className={`${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`}>\n          <ul>\n            {taskItems.map((task, index) => {\n              return (\n                <div key={index} \n                     index={index+1} \n                     >\n                  <li style={style.li}\n                      index={index+1} \n                      className='taskItem'\n                      key={index}\n                      onMouseEnter={liEnterHandler}\n                      onMouseLeave={liLeaveHandler}\n                      onMouseDown={liMouseDownHandler}\n                      onMouseMove={liMouseMoveHandler}\n                      onMouseUp={liMouseUpHandler}\n                      >\n                        <TaskItem task={task} \n                                  key={task.id} \n                                  index={index} \n                                  column={id} />\n                  </li>\n                </div>\n              )\n            })\n            }\n          </ul>\n          <AddTask idColumn={id}/>\n        </div>\n        </>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ allTasks:{ taskList } })=> ({taskList});\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}