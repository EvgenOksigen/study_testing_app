{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction App(props) {\n  if (props.celsius >= 100) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"\\u0412\\u043E\\u0434\\u0430 \\u0437\\u0430\\u043A\\u0438\\u043F\\u0438\\u0442.\");\n  }\n\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"\\u0412\\u043E\\u0434\\u0430 \\u043D\\u0435 \\u0437\\u0430\\u043A\\u0438\\u043F\\u0438\\u0442.\");\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      temperature: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    });\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Enter temperature in Celsius:\"), React.createElement(\"input\", {\n      value: temperature,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(BoilingVerdict, {\n      celsius: parseFloat(temperature),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/App.js"],"names":["React","App","props","celsius","Calculator","Component","constructor","handleChange","bind","state","temperature","e","setState","target","value","render","parseFloat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAIA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACxB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFAAP;AACD;;AAED,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACD;;AAEDH,EAAAA,YAAY,CAACI,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AAACF,MAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAML,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AACE,MAAA,KAAK,EAAEA,WADT;AAEE,MAAA,QAAQ,EAAE,KAAKH,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE,oBAAC,cAAD;AACE,MAAA,OAAO,EAAES,UAAU,CAACN,WAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAUD;;AAvBsC;;AA0BzC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nfunction App(props) {\n  if (props.celsius >= 100) {\n    return <p>Вода закипит.</p>;\n  }\n  return <p>Вода не закипит.</p>;\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {temperature: ''};\n  }\n\n  handleChange(e) {\n    this.setState({temperature: e.target.value});\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return (\n      <fieldset>\n        <legend>Enter temperature in Celsius:</legend>\n        <input\n          value={temperature}\n          onChange={this.handleChange} />\n        <BoilingVerdict\n          celsius={parseFloat(temperature)} />\n      </fieldset>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}