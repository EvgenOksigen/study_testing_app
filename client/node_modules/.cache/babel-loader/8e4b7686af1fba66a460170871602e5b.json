{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/Search/Search.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Info from \"../Info/Info\";\nimport \"./search_style.css\";\nimport { find, sort } from \"../../state/ducks/search/actions\";\n\nconst Search = ({\n  findItems,\n  sort,\n  find\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        contactName = _useState2[0],\n        setContactName = _useState2[1];\n\n  const inputHandle = e => {\n    setContactName(e.target.value);\n    find(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"contactName\",\n    placeholder: \"Contact\",\n    value: contactName,\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), findItems.map((el, index) => React.createElement(\"p\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, el)));\n};\n\nconst mapStateToProps = ({\n  search: {\n    contacts,\n    findItems\n  }\n}) => ({\n  contacts,\n  findItems\n});\n\nconst mapDispatchToProps = {\n  find,\n  sort\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/Search/Search.jsx"],"names":["React","useState","connect","Info","find","sort","Search","findItems","contactName","setContactName","inputHandle","e","target","value","map","el","index","mapStateToProps","search","contacts","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,kCAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaF,EAAAA,IAAb;AAAmBD,EAAAA;AAAnB,CAAD,KAA+B;AAAA,oBACNH,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,QACrCO,WADqC;AAAA,QACxBC,cADwB;;AAG5C,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvBF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAEAT,IAAAA,IAAI,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAJ;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAEL,WAHT;AAIE,IAAA,QAAQ,EAAEE,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWGH,SAAS,CAACO,GAAV,CAAc,CAACC,EAAD,EAAKC,KAAL,KACb;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,EAAhB,CADD,CAXH,CADF;AAiBD,CA1BD;;AA4BA,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,QAAF;AAAYZ,IAAAA;AAAZ;AAAV,CAAD,MAA0C;AAChEY,EAAAA,QADgE;AAEhEZ,EAAAA;AAFgE,CAA1C,CAAxB;;AAKA,MAAMa,kBAAkB,GAAG;AAAEhB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B;AAEA,eAAeH,OAAO,CAACe,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,MAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Info from \"../Info/Info\";\nimport \"./search_style.css\";\nimport { find, sort } from \"../../state/ducks/search/actions\";\n\nconst Search = ({ findItems, sort, find }) => {\n  const [contactName, setContactName] = useState(\"\");\n\n  const inputHandle = e => {\n    setContactName(e.target.value);\n\n    find(e.target.value);\n  };\n\n  return (\n    <div className=\"search-container\">\n      <Info />\n      <div className=\"search\">\n        <input\n          name=\"contactName\"\n          placeholder=\"Contact\"\n          value={contactName}\n          onChange={inputHandle}\n        />\n      </div>\n      <hr />\n      {findItems.map((el, index) => (\n        <p key={index}>{el}</p>\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ search: { contacts, findItems } }) => ({\n  contacts,\n  findItems\n});\n\nconst mapDispatchToProps = { find, sort };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}