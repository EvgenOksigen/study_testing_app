{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from '../../../api/contacts';\nconst initialState = {\n  contacts: initialContacts\n};\nconst startReducer = createReducer(initialState)({\n  [types.DELETE_CONTACT]: (state, {\n    id\n  }) => {\n    console.log(id);\n    const updateContacts = [...state.contacts];\n    let indexOfDelete;\n    updateContacts.forEach((contact, index) => {\n      if (contact.id === id) {\n        indexOfDelete = index;\n      }\n    });\n    updateContacts.splice(indexOfDelete, 1);\n    return _objectSpread({}, state, {\n      contacts: updateContacts\n    });\n  }\n});\nexport default startReducer;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/contacts/reducers.js"],"names":["types","createReducer","initialContacts","initialState","contacts","startReducer","DELETE_CONTACT","state","id","console","log","updateContacts","indexOfDelete","forEach","contact","index","splice"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEF;AADS,CAArB;AAIA,MAAMG,YAAY,GAAGJ,aAAa,CAACE,YAAD,CAAb,CAA4B;AAE/C,GAACH,KAAK,CAACM,cAAP,GAAwB,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAiB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEA,UAAMG,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACH,QAAV,CAAvB;AAEA,QAAIQ,aAAJ;AACAD,IAAAA,cAAc,CAACE,OAAf,CAAuB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,UAAGD,OAAO,CAACN,EAAR,KAAeA,EAAlB,EAAsB;AACpBI,QAAAA,aAAa,GAAGG,KAAhB;AACD;AACF,KAJD;AAKAJ,IAAAA,cAAc,CAACK,MAAf,CAAsBJ,aAAtB,EAAoC,CAApC;AAEA,6BACKL,KADL;AAEEH,MAAAA,QAAQ,EAAEO;AAFZ;AAID;AAnB8C,CAA5B,CAArB;AAwBA,eAAeN,YAAf","sourcesContent":["import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from '../../../api/contacts';\n\n\nconst initialState = {\n  contacts: initialContacts\n}\n\nconst startReducer = createReducer(initialState)({\n\n  [types.DELETE_CONTACT]: (state, {id}) => {\n    console.log(id);\n\n    const updateContacts = [...state.contacts];\n\n    let indexOfDelete;\n    updateContacts.forEach((contact, index) => {\n      if(contact.id === id ){\n        indexOfDelete = index;\n      }\n    })\n    updateContacts.splice(indexOfDelete,1)\n    \n    return{\n      ...state,\n      contacts: updateContacts\n    }\n  },\n\n  \n});\n\nexport default startReducer;"]},"metadata":{},"sourceType":"module"}