{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\n\nconst TaskList = ({\n  taskItems,\n  title,\n  id,\n  taskList\n}) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false;\n  let shiftX;\n  let shiftY;\n\n  const liEnterHandler = e => {\n    e.target.className = 'taskItem active';\n  };\n\n  const liLeaveHandler = e => {\n    e.target.className = 'taskItem';\n    readyToDragFlag = false;\n    console.log(readyToDragFlag);\n  };\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true;\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n    console.log(shiftX, shiftY);\n  };\n\n  const liMouseMoveHandler = e => {\n    if (readyToDragFlag) {\n      e.target.style.position = 'absolute';\n      e.target.style.zIndex = 1000;\n      root.append(e.target);\n      moveAt(e.pageX, e.pageY);\n      console.log('lets DRAG!');\n    }\n\n    function moveAt(pageX, pageY) {\n      e.target.style.left = pageX - shiftX + 'px';\n      e.target.style.top = pageY - shiftY + 'px';\n    }\n  };\n\n  const liMouseUpHandler = e => {\n    readyToDragFlag = false;\n  };\n\n  const style = {\n    li: {\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: '0px',\n      height: '24px',\n      listStyleType: 'none'\n    }\n  };\n  return React.createElement(\"div\", {\n    className: \"task-list-wrapper\",\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    id: id,\n    className: `${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, taskItems.map((task, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      index: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      style: style.li,\n      index: index + 1,\n      className: \"taskItem\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TaskItem, {\n      task: task,\n      key: task.id,\n      index: index,\n      column: id,\n      onMouseEnter: liEnterHandler,\n      onMouseLeave: liLeaveHandler,\n      onMouseDown: liMouseDownHandler,\n      onMouseMove: liMouseMoveHandler,\n      onMouseUp: liMouseUpHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  })), React.createElement(AddTask, {\n    idColumn: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    taskList\n  }\n}) => ({\n  taskList\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","TaskList","taskItems","title","id","taskList","root","document","getElementById","readyToDragFlag","shiftX","shiftY","liEnterHandler","e","target","className","liLeaveHandler","console","log","liMouseDownHandler","clientX","getBoundingClientRect","left","clientY","top","liMouseMoveHandler","style","position","zIndex","append","moveAt","pageX","pageY","liMouseUpHandler","li","display","maxWidth","width","padding","height","listStyleType","toLowerCase","match","toLocaleString","replace","map","task","index","mapStateToProps","allTasks"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\n\nconst TaskList = ( { taskItems, title, id, taskList  } ) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false\n  let shiftX\n  let shiftY\n  \n  const liEnterHandler = e => {\n    e.target.className='taskItem active' \n  }\n  const liLeaveHandler = e => {\n    e.target.className='taskItem'\n    readyToDragFlag = false\n    console.log(readyToDragFlag);\n  }\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n    console.log(shiftX, shiftY);\n  }\n\n  const liMouseMoveHandler = e => {\n    if(readyToDragFlag){\n      \n      e.target.style.position = 'absolute'\n      e.target.style.zIndex = 1000;\n      root.append(e.target);\n      moveAt(e.pageX, e.pageY);\n      console.log('lets DRAG!');\n    }\n    \n    function moveAt(pageX, pageY){\n      e.target.style.left = pageX - shiftX +'px'\n      e.target.style.top = pageY - shiftY +'px'\n    }\n  }\n\n  const liMouseUpHandler = e =>{\n    readyToDragFlag = false\n  }\n  \n  const style = {\n    li:{\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: '0px',\n      height: '24px',\n      listStyleType: 'none',\n    }\n  }\n  \n  return (\n    <div className=\"task-list-wrapper\"\n          id={id}>\n      <div className=\"task-list\">\n        <>\n          <h4 className='p-l-8'>{title}</h4>\n        <div id={id}\n             className={`${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`}>\n          <ul>\n            {taskItems.map((task, index) => {\n              return (\n                <div key={index} \n                     index={index+1} \n                     >\n                  <li style={style.li}\n                      index={index+1} \n                      className='taskItem'\n                      key={index}\n                      \n                      >\n                        <TaskItem task={task} \n                                  key={task.id} \n                                  index={index} \n                                  column={id} \n                                  onMouseEnter={liEnterHandler}\n                      onMouseLeave={liLeaveHandler}\n                      onMouseDown={liMouseDownHandler}\n                      onMouseMove={liMouseMoveHandler}\n                      onMouseUp={liMouseUpHandler}/>\n                  </li>\n                </div>\n              )\n            })\n            }\n          </ul>\n          <AddTask idColumn={id}/>\n        </div>\n        </>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ allTasks:{ taskList } })=> ({taskList});\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}