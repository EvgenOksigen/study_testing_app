{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  const scaleNames = {\n    c: 'Цельсия',\n    f: 'Фаренгейта'\n  };\n\n  function BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u043A\\u0438\\u043F\\u0438\\u0442.\");\n    }\n\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"\\u041D\\u0435-\\u0430. \\u041D\\u0435 \\u0437\\u0430\\u043A\\u0438\\u043F\\u0438\\u0442 ...\");\n  }\n\n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {\n        temperature: ''\n      };\n    }\n\n    handleChange(e) {\n      this.setState({\n        temperature: e.target.value\n      });\n    }\n\n    render() {\n      const temperature = this.state.temperature;\n      return React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"\\u0412\\u0432\\u0435\\u0434\\u0438 \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0443 \\u0432 `C :\"), React.createElement(\"input\", {\n        value: temperature,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(BoilingVerdict, {\n        celsius: parseFloat(temperature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  class TemperatureInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {\n        temperature: ''\n      };\n    }\n\n    handleChange(e) {\n      this.setState({\n        temperature: e.target.value\n      });\n    }\n\n    render() {\n      const temperature = this.state.temperature;\n      const scale = this.props.scale;\n      return React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0443 \\u0432 \\u0433\\u0440\\u0430\\u0434\\u0443\\u0441\\u0430\\u0445 \", scaleNames[scale], \":\"), React.createElement(\"input\", {\n        value: temperature,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Calculator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/App.js"],"names":["React","App","scaleNames","c","f","BoilingVerdict","props","celsius","Calculator","Component","constructor","handleChange","bind","state","temperature","e","setState","target","value","render","parseFloat","TemperatureInput","scale"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAIA,SAASC,GAAT,GAAe;AAEb,QAAMC,UAAU,GAAG;AACjBC,IAAAA,CAAC,EAAE,SADc;AAEjBC,IAAAA,CAAC,EAAE;AAFc,GAAnB;;AAKA,WAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAAP;AACD;;AAED,QAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACvCC,IAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,WAAKC,KAAL,GAAa;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAb;AACD;;AAEDH,IAAAA,YAAY,CAACI,CAAD,EAAI;AACd,WAAKC,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,OAAd;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,YAAML,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHADF,EAEE;AACE,QAAA,KAAK,EAAEA,WADT;AAEE,QAAA,QAAQ,EAAE,KAAKH,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,cAAD;AACE,QAAA,OAAO,EAAES,UAAU,CAACN,WAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAUD;;AAvBsC;;AA2BzC,QAAMO,gBAAN,SAA+BrB,KAAK,CAACS,SAArC,CAA+C;AAC7CC,IAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,YAAMA,KAAN;AACA,WAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,WAAKC,KAAL,GAAa;AAACC,QAAAA,WAAW,EAAE;AAAd,OAAb;AACD;;AAEDH,IAAAA,YAAY,CAACI,CAAD,EAAI;AACd,WAAKC,QAAL,CAAc;AAACF,QAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,OAAd;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,YAAML,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,YAAMQ,KAAK,GAAG,KAAKhB,KAAL,CAAWgB,KAAzB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mLAAwCpB,UAAU,CAACoB,KAAD,CAAlD,MADF,EAEE;AAAO,QAAA,KAAK,EAAER,WAAd;AACO,QAAA,QAAQ,EAAE,KAAKH,YADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOD;;AArB4C;;AAwB/C,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\n  const scaleNames = {\n    c: 'Цельсия',\n    f: 'Фаренгейта'\n  };\n\n  function BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n      return <p>Закипит.</p>;\n    }\n    return <p>Не-а. Не закипит ...</p>;\n  }\n\n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {temperature: ''};\n    }\n  \n    handleChange(e) {\n      this.setState({temperature: e.target.value});\n    }\n  \n    render() {\n      const temperature = this.state.temperature;\n      return (\n        <fieldset>\n          <legend>Введи температуру в `C :</legend>\n          <input\n            value={temperature}\n            onChange={this.handleChange} />\n          <BoilingVerdict\n            celsius={parseFloat(temperature)} />\n        </fieldset>\n      );\n    }\n  }\n\n  \n  class TemperatureInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.state = {temperature: ''};\n    }\n  \n    handleChange(e) {\n      this.setState({temperature: e.target.value});\n    }\n  \n    render() {\n      const temperature = this.state.temperature;\n      const scale = this.props.scale;\n      return (\n        <fieldset>\n          <legend>Введите температуру в градусах {scaleNames[scale]}:</legend>\n          <input value={temperature}\n                 onChange={this.handleChange} />\n        </fieldset>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Calculator></Calculator>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}