{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport api from '../../../api'; // like api\n\nexport const userSignIn = ({\n  token\n}) => {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\nexport const setMe = user => {\n  return {\n    type: types.SET_ME,\n    user: _objectSpread({}, user)\n  };\n};\nexport const me = () => dispatch => {\n  const data = JSON.parse(localStorage.getItem('user'));\n  sin(api.users, 0).then(() => {\n    api.users.forEach(user => {\n      if (user.password === data.password && (user.nameOrMail === data.username || user.nameOrMail === data.email)) {\n        dispatch(setMe(user));\n      }\n    });\n  });\n};\nexport const signIn = credentials => dispatch => api.users.signin(credentials).then(d => d ? dispatch(userSignIn(d)) : d);\nexport const signOut = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/client/src/state/ducks/user/actions.js"],"names":["types","api","userSignIn","token","localStorage","setItem","JSON","stringify","user","type","SIGN_IN","setMe","SET_ME","me","dispatch","data","parse","getItem","sin","users","then","forEach","password","nameOrMail","username","email","signIn","credentials","signin","d","signOut","removeItem","SIGN_OUT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAAgC;;AAGhC,OAAO,MAAMC,UAAU,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAEvC,MAAIA,KAAJ,EAAW;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAET,KAAK,CAACU,OADP;AAELP,MAAAA;AAFK,KAAP;AAID;AACF,CAbM;AAeP,OAAO,MAAMQ,KAAK,GAAGH,IAAI,IAAG;AAC5B,SAAQ;AAENC,IAAAA,IAAI,EAAET,KAAK,CAACY,MAFN;AAGNJ,IAAAA,IAAI,oBACCA,IADD;AAHE,GAAR;AAQC,CATM;AAWP,OAAO,MAAMK,EAAE,GAAG,MAAMC,QAAQ,IAAI;AAElC,QAAMC,IAAI,GAAGT,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,MAArB,CAAX,CAAb;AAGEC,EAAAA,GAAG,CAACjB,GAAG,CAACkB,KAAL,EAAY,CAAZ,CAAH,CAAkBC,IAAlB,CAAuB,MAAM;AAC3BnB,IAAAA,GAAG,CAACkB,KAAJ,CAAUE,OAAV,CAAmBb,IAAD,IAAQ;AACxB,UAAGA,IAAI,CAACc,QAAL,KAAkBP,IAAI,CAACO,QAAvB,KACAd,IAAI,CAACe,UAAL,KAAoBR,IAAI,CAACS,QAAzB,IAAsChB,IAAI,CAACe,UAAL,KAAoBR,IAAI,CAACU,KAD/D,CAAH,EAC0E;AACxEX,QAAAA,QAAQ,CAACH,KAAK,CAACH,IAAD,CAAN,CAAR;AACD;AACF,KALD;AAOH,GARC;AASH,CAdM;AAgBP,OAAO,MAAMkB,MAAM,GAAIC,WAAD,IAAiBb,QAAQ,IAC/Cb,GAAG,CAACkB,KAAJ,CAAUS,MAAV,CAAiBD,WAAjB,EAA8BP,IAA9B,CAAmCS,CAAC,IAAIA,CAAC,GAAGf,QAAQ,CAACZ,UAAU,CAAC2B,CAAD,CAAX,CAAX,GAA2BA,CAApE,CADO;AAIP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B1B,EAAAA,YAAY,CAAC2B,UAAb,CAAwB,MAAxB;AAEA,SAAO;AACLtB,IAAAA,IAAI,EAAET,KAAK,CAACgC;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\nimport api from '../../../api'; // like api\n\n\nexport const userSignIn = ( {token} ) => { \n  \n  if (token) {\n    \n    localStorage.setItem(\"token\", token);\n     \n    localStorage.setItem(\"user\", JSON.stringify(user));\n\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = user =>{\nreturn ({\n  \n  type: types.SET_ME,\n  user: {\n    ...user,\n    // permissions: user.allPermissions\n  }\n})\n}\n\nexport const me = () => dispatch => {\n\n  const data = JSON.parse(localStorage.getItem('user'))\n    \n    \n    sin(api.users, 0).then(() => {\n      api.users.forEach((user)=>{\n        if(user.password === data.password &&\n          (user.nameOrMail === data.username  || user.nameOrMail === data.email)) {\n          dispatch(setMe(user))\n        }\n      }\n    )\n  })\n}\n\nexport const signIn = (credentials) => dispatch => \napi.users.signin(credentials).then(d=> (d ? dispatch(userSignIn(d)):d))\n  \n\nexport const signOut = () => {\n  localStorage.removeItem(\"user\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}