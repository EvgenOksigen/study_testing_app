{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/Log.jsx\";\nimport React, { Component } from \"react\";\nimport { reduxForm, Field, getFormValues } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      console.log(\"hi\");\n      console.log(this.props.form);\n      const _this$props = this.props,\n            handleSubmit = _this$props.handleSubmit,\n            signIn = _this$props.signIn; // let LoginForm = ({ handleSubmit, submitting }) => {\n      //\n\n      showResults = values => {\n        window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n      };\n\n      handleSubmit(showResults());\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      autoComplete: \"off\",\n      className: \"login-form paper\" // onSubmit={handleSubmit(showResults)}\n      ,\n      onSubmit: this.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" User name \"), React.createElement(Field, {\n      name: \"username\",\n      component: \"input\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Password \"), React.createElement(Field, {\n      name: \"password\",\n      component: \"input\",\n      type: \"password\",\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Email \"), React.createElement(Field, {\n      name: \"email\",\n      component: \"input\",\n      type: \"text\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Button, {\n      disabled: submitting,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Sign in\"));\n  }\n\n} // LoginForm = reduxForm({\n//   form: \"login\",\n//   destroyOnUnmount: false\n// })(LoginForm);\n\n\nconst mapStateToProps = state => ({\n  initialValues: state.formInitialValues,\n  formValues: getFormValues(\"login\")(state)\n});\n\nconst mapDispatchToProps = {}; //signIn\n\nconst enhance = compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: \"login\"\n}));\nexport default enhance(LoginForm);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/Log.jsx"],"names":["React","Component","reduxForm","Field","getFormValues","Button","Form","connect","compose","LoginForm","formSubmit","e","preventDefault","console","log","props","form","handleSubmit","signIn","showResults","values","window","alert","JSON","stringify","render","submitting","mapStateToProps","state","initialValues","formInitialValues","formValues","mapDispatchToProps","enhance"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { reduxForm, Field, getFormValues } from \"redux-form\";\n\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass LoginForm extends Component {\n  formSubmit = e => {\n    e.preventDefault();\n\n    console.log(\"hi\");\n\n    console.log(this.props.form);\n    const { handleSubmit, signIn } = this.props;\n\n    // let LoginForm = ({ handleSubmit, submitting }) => {\n    //\n\n    showResults = values => {\n      window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n    };\n\n    handleSubmit(showResults());\n  };\n\n  render() {\n    return (\n      <Form\n        autoComplete=\"off\"\n        className=\"login-form paper\"\n        // onSubmit={handleSubmit(showResults)}\n        onSubmit={this.formSubmit}\n      >\n        {/* <form className=\"login-form paper\" onSubmit={handleSubmit(showResults)}> */}\n        <h1>Log in</h1>\n\n        <div className=\"auth-form-field\">\n          <label> User name </label>\n          <Field\n            name=\"username\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"First Name\"\n          />\n        </div>\n        <div className=\"auth-form-field\">\n          <label> Password </label>\n          <Field\n            name=\"password\"\n            component=\"input\"\n            type=\"password\"\n            placeholder=\"Last Name\"\n          />\n        </div>\n        <div className=\"auth-form-field\">\n          <label> Email </label>\n          <Field\n            name=\"email\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Email\"\n          />\n        </div>\n        <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n          Sign in\n        </Button>\n        {/* </form> */}\n      </Form>\n    );\n  }\n}\n\n// LoginForm = reduxForm({\n//   form: \"login\",\n//   destroyOnUnmount: false\n// })(LoginForm);\n\nconst mapStateToProps = state => ({\n  initialValues: state.formInitialValues,\n  formValues: getFormValues(\"login\")(state)\n});\n\nconst mapDispatchToProps = {}; //signIn\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  reduxForm({ form: \"login\" })\n);\n\nexport default enhance(LoginForm);\n"]},"metadata":{},"sourceType":"module"}