{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from '../../../api/contacts';\nconst initialState = {\n  contacts: initialContacts,\n  findItems: initialContacts.map(item => item.name)\n};\nconst startReducer = createReducer(initialState)({\n  [types.SORT]: (state, {\n    payload\n  }) => {\n    return _objectSpread({}, state, {\n      contacts: payload\n    });\n  },\n  [types.FIND]: (state, {\n    payload\n  }) => {\n    const findItems = [];\n    state.contacts.forEach(item => {\n      if (item.name.match(/`${payload}`/gi)) {\n        findItems.push(item);\n      }\n    });\n    return _objectSpread({}, state, {\n      findItems\n    });\n  }\n});\nexport default startReducer;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/search/reducers.js"],"names":["types","createReducer","initialContacts","initialState","contacts","findItems","map","item","name","startReducer","SORT","state","payload","FIND","forEach","match","push"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEF,eADS;AAEnBG,EAAAA,SAAS,EAAEH,eAAe,CAACI,GAAhB,CAAoBC,IAAI,IAAIA,IAAI,CAACC,IAAjC;AAFQ,CAArB;AAKA,MAAMC,YAAY,GAAGR,aAAa,CAACE,YAAD,CAAb,CAA4B;AAE/C,GAACH,KAAK,CAACU,IAAP,GAAc,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAClC,6BACKD,KADL;AAEEP,MAAAA,QAAQ,EAAEQ;AAFZ;AAID,GAP8C;AAS/C,GAACZ,KAAK,CAACa,IAAP,GAAc,CAACF,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AACpC,UAAMP,SAAS,GAAG,EAAlB;AAEEM,IAAAA,KAAK,CAACP,QAAN,CAAeU,OAAf,CAAuBP,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACC,IAAL,CAAUO,KAAV,CAAgB,gBAAhB,CAAJ,EAAuC;AACrCV,QAAAA,SAAS,CAACW,IAAV,CAAeT,IAAf;AACD;AACF,KAJD;AAMA,6BACKI,KADL;AAEEN,MAAAA;AAFF;AAID;AAtB8C,CAA5B,CAArB;AA0BA,eAAeI,YAAf","sourcesContent":["import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from '../../../api/contacts';\n\n\nconst initialState = {\n  contacts: initialContacts,\n  findItems: initialContacts.map(item => item.name)\n}\n\nconst startReducer = createReducer(initialState)({\n\n  [types.SORT]: (state, {payload}) => {\n    return{\n      ...state,\n      contacts: payload\n    }\n  },\n\n  [types.FIND]: (state, {payload}) => {\n  const findItems = []\n\n    state.contacts.forEach(item => {\n      if (item.name.match(/`${payload}`/gi)) {\n        findItems.push(item);\n      }\n    });\n\n    return{\n      ...state,\n      findItems\n    }\n  }\n\n});\n\nexport default startReducer;"]},"metadata":{},"sourceType":"module"}