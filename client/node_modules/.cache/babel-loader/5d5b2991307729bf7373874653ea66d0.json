{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/LogIn.jsx\";\nimport React, { Component } from \"react\";\nimport { reduxForm, Field, formValues, getFormValues } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Input } from \"antd\";\nimport { compose } from \"redux\"; // import { required } from \"../../../helpers/validate\";\n// import { throwFormErrorJournal } from \"../../../helpers/throwFormError\";\n// import { signIn } from \"../../../state/ducks/user/actions\";\n\nimport \"./LogIn.css\"; // import \"../../../styles/components.less\";\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      console.log(this.props.formValues);\n      const _this$props = this.props,\n            handleSubmit = _this$props.handleSubmit,\n            signIn = _this$props.signIn;\n      handleSubmit(values => {\n        console.log(values); // this.setState({ loading: true });\n        // return signIn(values);\n        //   .then(() => {\n        //     this.setState({ loading: false });\n        //     message.success(\"Ви успішно увійшли у систему E-Consul\");\n        //   })\n        //   .catch(err => {\n        //     this.setState({ loading: false });\n        //     throwFormErrorJournal(err);\n        //     message.error(\"Щось пішло не так. Повторіть запит знову.\");\n        //   });\n      })();\n    };\n  }\n\n  render() {\n    // const { loading } = this.state;\n    // const { dirty, invalid } = this.props;\n    return React.createElement(Form, {\n      autoComplete: \"off\",\n      className: \"login-form paper\",\n      onSubmit: this.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0456\\u044F\"), React.createElement(\"div\", {\n      className: \"split-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"username\",\n      component: Input,\n      type: \"text\",\n      label: \"\\u0406\\u043C'\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u0456\\u043C'\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\" // validate={[required]}\n      ,\n      icon: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\" // validate={[required]}\n      ,\n      icon: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Log in\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  initialValues: state.formInitialValues,\n  formValues: getFormValues(\"create\")(state)\n});\n\nconst mapDispatchToProps = {}; //signIn\n\nconst enhance = compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: \"login\"\n}));\nexport default enhance(LogIn);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/LogIn.jsx"],"names":["React","Component","reduxForm","Field","formValues","getFormValues","connect","Form","Button","Input","compose","LogIn","state","loading","formSubmit","e","preventDefault","console","log","props","handleSubmit","signIn","values","render","mapStateToProps","initialValues","formInitialValues","mapDispatchToProps","enhance","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,UAA3B,EAAuCC,aAAvC,QAA4D,YAA5D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;AACA;AACA;;AAEA,OAAO,aAAP,C,CACA;;AAEA,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BW,KAD4B,GACpB;AACNC,MAAAA,OAAO,EAAE;AADH,KADoB;;AAAA,SAK5BC,UAL4B,GAKfC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWf,UAAvB;AAFgB,0BAGiB,KAAKe,KAHtB;AAAA,YAGRC,YAHQ,eAGRA,YAHQ;AAAA,YAGMC,MAHN,eAGMA,MAHN;AAKhBD,MAAAA,YAAY,CAACE,MAAM,IAAI;AACrBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EADqB,CAGrB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACD,OAlBW,CAAZ;AAmBD,KA7B2B;AAAA;;AA+B5BC,EAAAA,MAAM,GAAG;AACP;AAEA;AAEA,WACE,oBAAC,IAAD;AACE,MAAA,YAAY,EAAC,KADf;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,QAAQ,EAAE,KAAKT,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EATF,EAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAaE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEL,KAFb;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,wFAJR;AAKE,MAAA,WAAW,EAAC,mIALd,CAME;AANF;AAOE,MAAA,IAAI,EAAC,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAuBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEA,KAFb;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAC,sCAJR;AAKE,MAAA,WAAW,EAAC,iFALd,CAME;AANF;AAOE,MAAA,IAAI,EAAC,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EAiCE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCF,CADF;AAqCD;;AAzE2B;;AA4E9B,MAAMe,eAAe,GAAGZ,KAAK,KAAK;AAChCa,EAAAA,aAAa,EAAEb,KAAK,CAACc,iBADW;AAEhCtB,EAAAA,UAAU,EAAEC,aAAa,CAAC,QAAD,CAAb,CAAwBO,KAAxB;AAFoB,CAAL,CAA7B;;AAKA,MAAMe,kBAAkB,GAAG,EAA3B,C,CAA+B;;AAE/B,MAAMC,OAAO,GAAGlB,OAAO,CACrBJ,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CADc,EAErBzB,SAAS,CAAC;AAAE2B,EAAAA,IAAI,EAAE;AAAR,CAAD,CAFY,CAAvB;AAKA,eAAeD,OAAO,CAACjB,KAAD,CAAtB","sourcesContent":["import React, { Component } from \"react\";\nimport { reduxForm, Field, formValues, getFormValues } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { Form, Button, Input } from \"antd\";\nimport { compose } from \"redux\";\n\n// import { required } from \"../../../helpers/validate\";\n// import { throwFormErrorJournal } from \"../../../helpers/throwFormError\";\n// import { signIn } from \"../../../state/ducks/user/actions\";\n\nimport \"./LogIn.css\";\n// import \"../../../styles/components.less\";\n\nclass LogIn extends Component {\n  state = {\n    loading: false\n  };\n\n  formSubmit = e => {\n    e.preventDefault();\n    console.log(this.props.formValues);\n    const { handleSubmit, signIn } = this.props;\n\n    handleSubmit(values => {\n      console.log(values);\n\n      // this.setState({ loading: true });\n\n      // return signIn(values);\n      //   .then(() => {\n      //     this.setState({ loading: false });\n\n      //     message.success(\"Ви успішно увійшли у систему E-Consul\");\n      //   })\n      //   .catch(err => {\n      //     this.setState({ loading: false });\n\n      //     throwFormErrorJournal(err);\n\n      //     message.error(\"Щось пішло не так. Повторіть запит знову.\");\n      //   });\n    })();\n  };\n\n  render() {\n    // const { loading } = this.state;\n\n    // const { dirty, invalid } = this.props;\n\n    return (\n      <Form\n        autoComplete=\"off\"\n        className=\"login-form paper\"\n        onSubmit={this.formSubmit}\n      >\n        {/* <div className=\"logo\">\n          <img src={logo} alt=\"minua\" />\n        </div> */}\n\n        <h1>Авторизація</h1>\n\n        <div className=\"split-line\" />\n\n        <Field\n          name=\"username\"\n          component={Input}\n          type=\"text\"\n          label=\"Ім'я користувача\"\n          placeholder=\"Введіть ім'я користувача\"\n          // validate={[required]}\n          icon=\"user\"\n        />\n\n        <Field\n          name=\"password\"\n          component={Input}\n          type=\"password\"\n          label=\"Пароль\"\n          placeholder=\"Введіть пароль\"\n          // validate={[required]}\n          icon=\"lock\"\n        />\n\n        <Button htmlType=\"submit\">Log in</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  initialValues: state.formInitialValues,\n  formValues: getFormValues(\"create\")(state)\n});\n\nconst mapDispatchToProps = {}; //signIn\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  reduxForm({ form: \"login\" })\n);\n\nexport default enhance(LogIn);\n"]},"metadata":{},"sourceType":"module"}