{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\"; // import api from \"../../../api\";\n\nimport users from '../../../api/users';\nexport const userSignIn = ({\n  token\n}) => {\n  //let take users by timeout\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: _objectSpread({}, user, {\n    permissions: user.allPermissions\n  })\n});\nexport const signIn = data => dispatch => {\n  const apiUser = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  console.log(data);\n  console.log(users);\n  apiUser().then(data => console.log(data));\n}; // export const signIn = credentials => dispatch =>\n// api.user\n//   .signin(credentials)\n//   .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n// export const me = () => dispatch =>\n//   api.user.me().then(data => {\n//     dispatch(setMe(data));\n//   });\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/user/actions.js"],"names":["types","users","userSignIn","token","localStorage","setItem","type","SIGN_IN","setMe","user","SET_ME","permissions","allPermissions","signIn","data","dispatch","apiUser","ms","Promise","resolve","setTimeout","console","log","then","signOut","removeItem","SIGN_OUT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAE;AACzC,MAAIA,KAAJ,EAAW;AACTC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEN,KAAK,CAACO,OADP;AAELJ,MAAAA;AAFK,KAAP;AAID;AACF,CATM;AAWP,OAAO,MAAMK,KAAK,GAAGC,IAAI,KAAK;AAC5BH,EAAAA,IAAI,EAAEN,KAAK,CAACU,MADgB;AAE5BD,EAAAA,IAAI,oBACCA,IADD;AAEFE,IAAAA,WAAW,EAAEF,IAAI,CAACG;AAFhB;AAFwB,CAAL,CAAlB;AAQP,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAC1C,QAAMC,OAAO,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAGC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAhC,CAAtB;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYrB,KAAZ;AACAe,EAAAA,OAAO,GAAGO,IAAV,CAAeT,IAAI,IAAIO,OAAO,CAACC,GAAR,CAAYR,IAAZ,CAAvB;AAGD,CAPM,C,CASP;AACE;AACA;AACA;AAGF;AACA;AACA;AACA;;AAEA,OAAO,MAAMU,OAAO,GAAG,MAAM;AAC3BpB,EAAAA,YAAY,CAACqB,UAAb,CAAwB,OAAxB;AAEA,SAAO;AACLnB,IAAAA,IAAI,EAAEN,KAAK,CAAC0B;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\n// import api from \"../../../api\";\nimport users from '../../../api/users';\n\nexport const userSignIn = ({ token }) => { //let take users by timeout\n  if (token) {\n    localStorage.setItem(\"token\", token);\n\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    permissions: user.allPermissions\n  }\n});\n\nexport const signIn = (data) => dispatch => {\n  const apiUser = ms => new Promise(resolve=> setTimeout(resolve, ms));\n  console.log(data);\n  console.log(users);\n  apiUser().then(data => console.log(data))\n  \n  \n}\n\n// export const signIn = credentials => dispatch =>\n  // api.user\n  //   .signin(credentials)\n  //   .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n  \n\n// export const me = () => dispatch =>\n//   api.user.me().then(data => {\n//     dispatch(setMe(data));\n//   });\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}