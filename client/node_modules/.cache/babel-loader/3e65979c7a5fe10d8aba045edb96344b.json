{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getWeather } from '../state/ducks/forms/actions';\n\nconst ReduxTest = ({\n  getWeather\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        cityvalue = _useState2[0],\n        setCityValue = _useState2[1];\n\n  const _useState3 = _slicedToArray(useState, 2),\n        data = _useState3[0],\n        setData = _useState3[1];\n\n  const inputHandle = e => {\n    setCityValue(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" redux test in console\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"city\",\n    value: cityvalue,\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => getWeather(cityvalue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Get Weater\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = ({\n  forms\n}) => ({\n  isShow: forms.isShowing,\n  city: forms.name\n});\n\nconst mapDispatchToProps = {\n  getWeather\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxTest);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js"],"names":["React","useState","connect","getWeather","ReduxTest","cityvalue","setCityValue","data","setData","inputHandle","e","target","value","mapStateToProps","forms","isShow","isShowing","city","name","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAkB;AAAA,oBAEAF,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,QAE3BI,SAF2B;AAAA,QAEhBC,YAFgB;;AAAA,oCAIXL,QAJW;AAAA,QAI5BM,IAJ4B;AAAA,QAItBC,OAJsB;;AAOlC,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBJ,IAAAA,YAAY,CAAEI,CAAC,CAACC,MAAF,CAASC,KAAX,CAAZ;AACD,GAFD;;AAMA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACA,IAAA,KAAK,EAAEP,SADP;AAEO,IAAA,QAAQ,EAAEI,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAQ,IAAA,OAAO,EAAE,MAAIN,UAAU,CAACE,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADK,CAAP;AAcD,CA3BD;;AA6BA,MAAMQ,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAgB;AACtCC,EAAAA,MAAM,EAAED,KAAK,CAACE,SADwB;AAEtCC,EAAAA,IAAI,EAAEH,KAAK,CAACI;AAF0B,CAAhB,CAAxB;;AAKA,MAAMC,kBAAkB,GAAG;AAAEhB,EAAAA;AAAF,CAA3B;AAIA,eAAeD,OAAO,CAACW,eAAD,EAAkBM,kBAAlB,CAAP,CAA8Cf,SAA9C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport {connect} from 'react-redux';\nimport { getWeather } from '../state/ducks/forms/actions';\n\n\nconst ReduxTest = ({getWeather })=> {\n\n  const [cityvalue, setCityValue] = useState(\"\");\n\n  const[data, setData] = useState\n\n\n  const inputHandle = (e) => {\n    setCityValue( e.target.value );\n  }\n\n\n\n  return <div> redux test in console\n    <div>\n      <input name='city' \n      value={cityvalue}\n             onChange={inputHandle}\n             >\n      </input>\n      <button onClick={()=>getWeather(cityvalue)}>\n        Get Weater\n      </button>\n      <div>\n      </div>\n    </div>\n  </div>\n}\n\nconst mapStateToProps = ({ forms }) => ({\n  isShow: forms.isShowing,\n  city: forms.name\n})\n\nconst mapDispatchToProps = { getWeather };\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps )(ReduxTest);"]},"metadata":{},"sourceType":"module"}