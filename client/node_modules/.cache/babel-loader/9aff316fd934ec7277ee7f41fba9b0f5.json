{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\n\nconst TaskList = ({\n  allTasks\n}) => {\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"taskListHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Unfinished tasks\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Finished tasks\")), React.createElement(\"div\", {\n    className: \"taskList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"not-finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, allTasks.map((task, index) => {\n    if (!task.completed) {\n      return React.createElement(\"li\", {\n        className: \"taskItem\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(TaskItem, {\n        task: task,\n        key: task.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }))), React.createElement(\"div\", {\n    className: \"finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, allTasks.map((task, index) => {\n    if (task.completed) {\n      return React.createElement(\"li\", {\n        className: \"taskItem\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(TaskItem, {\n        task: task,\n        key: task.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  })))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks\n  }\n}) => ({\n  allTasks\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","TaskList","allTasks","map","task","index","completed","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAkB;AAEjC,SACI,0CACA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADA,EAMA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,QAAG,CAACD,IAAI,CAACE,SAAT,EAAmB;AAClB,aAAO;AAAI,QAAA,SAAS,EAAC,UAAd;AACI,QAAA,GAAG,EAAED,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAhB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAhC;AAAoC,QAAA,KAAK,EAAEF,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,CAAP;AAIA;AACF,GAPA,CADH,CADA,CAFF,EAeE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,QAAGD,IAAI,CAACE,SAAR,EAAkB;AAChB,aAAO;AAAI,QAAA,SAAS,EAAC,UAAd;AACI,QAAA,GAAG,EAAED,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEL,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAhB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAhC;AAAoC,QAAA,KAAK,EAAEF,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,CAAP;AAID;AACF,GAPA,CADH,CADF,CAfF,CANA,CADJ;AAsCD,CAxCD;;AA2CA,MAAMG,eAAe,GAAG,CAAC;AAAEN,EAAAA,QAAQ,EAAE;AAACA,IAAAA;AAAD;AAAZ,CAAD,MAA8B;AAACA,EAAAA;AAAD,CAA9B,CAAxB;;AAEA,eAAeF,OAAO,CAACQ,eAAD,EAAkB,IAAlB,CAAP,CAA+BP,QAA/B,CAAf","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\n\nconst TaskList = ( {allTasks} ) => {\n  \n  return(\n      <>\n      <div className='taskListHeader'>\n        <label>Unfinished tasks</label>\n        <label>Finished tasks</label>\n      </div>\n      \n      <div className=\"taskList\">\n        \n        <div className='not-finished'>\n        <ul>\n          {allTasks.map((task, index) => {\n            if(!task.completed){\n             return <li className='taskItem'\n                        key={index}>\n                <TaskItem task={task} key={task.id} index={index} />\n              </li>\n            }\n          })\n          }\n        </ul>\n        </div>\n        <div className='finished'>\n          <ul>\n            {allTasks.map((task, index) => {\n              if(task.completed){\n                return <li className='taskItem'\n                           key={index}>\n                  <TaskItem task={task} key={task.id} index={index} />\n                  </li>\n              }\n            })\n            }\n          </ul>\n        </div>\n    </div>\n    </>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks: {allTasks} })=> ({allTasks});\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}