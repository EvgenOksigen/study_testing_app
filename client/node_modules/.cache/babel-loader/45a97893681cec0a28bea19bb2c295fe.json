{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\n\nconst TaskList = ({\n  allTasks\n}) => {\n  return React.createElement(\"div\", {\n    className: \"taskList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"not-finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, allTasks.map((task, index) => {\n    if (!task.completed) {\n      return React.createElement(TaskItem, {\n        task: task,\n        key: task.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    }\n  }))), React.createElement(\"div\", {\n    className: \"finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, allTasks.map((task, index) => {\n    if (task.completed) {\n      return React.createElement(TaskItem, {\n        task: task,\n        key: task.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks\n  }\n}) => ({\n  allTasks\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","TaskList","allTasks","map","task","index","completed","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAiB;AAIhC,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,QAAG,CAACD,IAAI,CAACE,SAAT,EAAmB;AAClB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAhC;AAAoC,QAAA,KAAK,EAAEF,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;AACF,GAJA,CADH,CADA,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACC,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC5B,QAAGD,IAAI,CAACE,SAAR,EAAkB;AAChB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAhC;AAAoC,QAAA,KAAK,EAAEF,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GAJA,CADH,CADF,CAXF,CADF;AAwBD,CA5BD;;AA+BA,MAAMG,eAAe,GAAG,CAAC;AAAEN,EAAAA,QAAQ,EAAE;AAAEA,IAAAA;AAAF;AAAZ,CAAD,MAAiC;AAAEA,EAAAA;AAAF,CAAjC,CAAxB;;AAEA,eAAeF,OAAO,CAACQ,eAAD,EAAkB,IAAlB,CAAP,CAA+BP,QAA/B,CAAf","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\n\nconst TaskList = ( {allTasks}) => {\n\n  \n\n  return(\n    <div className=\"taskList\">\n      <div className='not-finished'>\n      <ul>\n        {allTasks.map((task, index) => {\n          if(!task.completed){\n           return <TaskItem task={task} key={task.id} index={index} />\n          }\n        })\n        }\n      </ul>\n      </div>\n      <div className='finished'>\n        <ul>\n          {allTasks.map((task, index)=> {\n            if(task.completed){\n              return <TaskItem task={task} key={task.id} index={index} />\n            }\n          })\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks: { allTasks } }) => ({ allTasks });\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}