{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js\";\nimport React, { useEffect, setState, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { show, hide, getWeather, setCity } from '../state/ducks/forms/actions';\n\nconst ReduxTest = ({\n  city,\n  show,\n  getWeather,\n  forms,\n  setCity\n}) => {\n  const state = useState({\n    city: \"Berlin\"\n  });\n\n  const inputHandle = e => {\n    setState(({\n      city\n    }) => ({\n      city: e.target.value\n    }));\n    console.log(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" redux test in console\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"city\",\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => getWeather(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Get Weater\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, getWeather().name))));\n};\n\nconst mapStateToProps = ({\n  forms\n}) => ({\n  isShow: forms.isShowing,\n  city: forms.name\n});\n\nconst mapDispatchToProps = {\n  show,\n  hide,\n  getWeather,\n  setCity\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxTest);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js"],"names":["React","useEffect","setState","useState","connect","show","hide","getWeather","setCity","ReduxTest","city","forms","state","inputHandle","e","target","value","console","log","name","mapStateToProps","isShow","isShowing","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,8BAAhD;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOL,EAAAA,IAAP;AAAaE,EAAAA,UAAb;AAAyBI,EAAAA,KAAzB;AAAgCH,EAAAA;AAAhC,CAAD,KAA6C;AAE7D,QAAMI,KAAK,GAAGT,QAAQ,CAAE;AAACO,IAAAA,IAAI,EAAE;AAAP,GAAF,CAAtB;;AAGA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACzBZ,IAAAA,QAAQ,CAAE,CAAC;AAACQ,MAAAA;AAAD,KAAD,MAAW;AACnBA,MAAAA,IAAI,EAAEI,CAAC,CAACC,MAAF,CAASC;AADI,KAAX,CAAF,CAAR;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;AACD,GALD;;AAOA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,QAAQ,EAAEH,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAIN,UAAU,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,UAAU,GAAGY,IAAjB,CADF,CARF,CADK,CAAP;AAcD,CA1BD;;AA4BA,MAAMC,eAAe,GAAG,CAAC;AAACT,EAAAA;AAAD,CAAD,MAAc;AACpCU,EAAAA,MAAM,EAAEV,KAAK,CAACW,SADsB;AAEpCZ,EAAAA,IAAI,EAAEC,KAAK,CAACQ;AAFwB,CAAd,CAAxB;;AAKA,MAAMI,kBAAkB,GAAG;AAAClB,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAA3B;AAIA,eAAeJ,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA8Cd,SAA9C,CAAf","sourcesContent":["import React, { useEffect, setState, useState } from 'react';\nimport {connect} from 'react-redux';\nimport { show, hide, getWeather, setCity } from '../state/ducks/forms/actions';\n\n\nconst ReduxTest = ({city, show, getWeather, forms, setCity})=> {\n\n  const state = useState(({city: \"Berlin\"}));\n\n\n  const inputHandle = (e) => {\n    setState( ({city})=>({\n      city: e.target.value\n    }))\n    console.log(e.target.value);\n  }\n\n  return <div> redux test in console\n    <div>\n      <input name='city' \n             onChange={inputHandle}\n             >\n      </input>\n      <button onClick={()=>getWeather()}>\n        Get Weater\n      </button>\n      <div>\n        <p>{getWeather().name}</p>\n      </div>\n    </div>\n  </div>\n}\n\nconst mapStateToProps = ({forms}) => ({\n  isShow: forms.isShowing,\n  city: forms.name\n})\n\nconst mapDispatchToProps = {show, hide, getWeather, setCity};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps )(ReduxTest);"]},"metadata":{},"sourceType":"module"}