{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/Log.jsx\";\nimport React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { signIn } from \"../../../state/ducks/user/actions\";\nimport Input from \"../../components/FormsComponent/SignInput/SignInput\"; // import Input from \"../../components/FormsComponent/SignInput/SignInput\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      const _this$props = this.props,\n            handleSubmit = _this$props.handleSubmit,\n            signIn = _this$props.signIn;\n      handleSubmit(values => {\n        //\n        this.setState({\n          loading: false\n        });\n        return signIn(values).then(() => {\n          this.setState({\n            loading: false\n          });\n          message.success(\"Вы успешно вошли\");\n        }); // TODO came from api\n        // .catch(err => {\n        //   this.setState({ loading: false });\n        //   message.error(\"Что-то пошло не так\");\n        // });\n      })();\n    };\n\n    this.showResults = user => {\n      console.log(user);\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      autoComplete: \"off\",\n      className: \"login-form paper\",\n      onSubmit: this.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Email / name \"), React.createElement(Field, {\n      name: \"nameOrMail\",\n      component: Input,\n      type: \"text\",\n      placeholder: \"Email or username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Password \"), React.createElement(Field, {\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Button, {\n      disabled: false,\n      htmlType: \"submit\",\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sign in\"));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nconst mapDispatchToProps = {\n  signIn\n};\nconst enhance = compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: \"login\"\n}));\nexport default enhance(LoginForm);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/Log.jsx"],"names":["React","Component","reduxForm","Field","Button","Form","message","connect","compose","signIn","Input","LoginForm","state","loading","formSubmit","e","preventDefault","props","handleSubmit","values","setState","then","success","showResults","user","console","log","render","mapStateToProps","mapDispatchToProps","enhance","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { signIn } from \"../../../state/ducks/user/actions\";\nimport Input from \"../../components/FormsComponent/SignInput/SignInput\";\n// import Input from \"../../components/FormsComponent/SignInput/SignInput\";\n\nclass LoginForm extends Component {\n  //\n  state = {\n    loading: false\n  };\n\n  formSubmit = e => {\n    e.preventDefault();\n\n    const { handleSubmit, signIn } = this.props;\n\n    handleSubmit(values => {\n      //\n      this.setState({ loading: false });\n\n      return signIn(values).then(() => {\n        this.setState({ loading: false });\n        message.success(\"Вы успешно вошли\");\n      });\n      // TODO came from api\n      // .catch(err => {\n      //   this.setState({ loading: false });\n      //   message.error(\"Что-то пошло не так\");\n      // });\n    })();\n  };\n\n  showResults = user => {\n    console.log(user);\n  };\n\n  render() {\n    return (\n      <Form\n        autoComplete=\"off\"\n        className=\"login-form paper\"\n        onSubmit={this.formSubmit}\n      >\n        <h1>Log in</h1>\n\n        <div className=\"auth-form-field\">\n          <label> Email / name </label>\n          <Field\n            name=\"nameOrMail\"\n            component={Input}\n            type=\"text\"\n            placeholder=\"Email or username\"\n          />\n        </div>\n\n        <div className=\"auth-form-field\">\n          <label> Password </label>\n          <Field\n            name=\"password\"\n            component={Input}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <Button disabled={false} htmlType=\"submit\" type=\"primary\">\n          Sign in\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst mapDispatchToProps = { signIn };\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  reduxForm({ form: \"login\" })\n);\n\nexport default enhance(LoginForm);\n"]},"metadata":{},"sourceType":"module"}