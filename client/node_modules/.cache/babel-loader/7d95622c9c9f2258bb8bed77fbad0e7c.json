{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js\";\nimport React, { useState, useEffect } from 'react';\nimport TaskList from './TaskList';\nimport './trello.css';\nimport AddTask from './AddTask';\nimport Loader from './Loader';\nimport { connect } from 'react-redux';\nimport { initTask } from '../../../state/ducks/task/actions';\n\nconst Trello = ({\n  initTask\n}) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCount('Timeout called!');\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const sleep = ms => new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n    clearTimeout(sleep);\n    clearTimeout(resolve);\n  });\n\n  sleep(2800).then(() => {\n    setLoading(false);\n    initTask();\n    clearTimeout(sleep);\n  });\n  console.log('sukwa');\n  return React.createElement(\"div\", {\n    className: \"tasks-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Hello in TrELLO! \"), React.createElement(\"p\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Create a task: \"), React.createElement(AddTask, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(TaskList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nconst mapDispatchToProps = {\n  initTask\n};\nexport default connect(null, mapDispatchToProps)(Trello);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js"],"names":["React","useState","useEffect","TaskList","AddTask","Loader","connect","initTask","Trello","timer","setTimeout","setCount","clearTimeout","loading","setLoading","sleep","ms","Promise","resolve","then","console","log","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,mCAAzB;;AAIA,MAAMC,MAAM,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAgB;AAC7BL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BC,MAAAA,QAAQ,CAAC,iBAAD,CAAR;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAGA,WAAO,MAAMC,YAAY,CAACH,KAAD,CAAzB;AACD,GALQ,EAKN,EALM,CAAT;;AAD6B,oBAQCR,QAAQ,CAAC,IAAD,CART;AAAA;AAAA,QAQtBY,OARsB;AAAA,QAQbC,UARa;;AAU7B,QAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAE;AACvCR,IAAAA,UAAU,CAAC,MAAM;AAACQ,MAAAA,OAAO;AAAG,KAAlB,EAAoBF,EAApB,CAAV;AACAJ,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACAH,IAAAA,YAAY,CAACM,OAAD,CAAZ;AACD,GAJmB,CAApB;;AAMAH,EAAAA,KAAK,CAAC,IAAD,CAAL,CAAYI,IAAZ,CAAiB,MAAI;AACnBL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,IAAAA,QAAQ;AACRK,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACD,GAJD;AAQAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,OAAO,GAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GACN,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,IAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFJ,CADF;AAYD,CAxCD;;AA4CA,MAAMS,kBAAkB,GAAG;AAAEf,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCd,MAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TaskList from './TaskList'\nimport './trello.css'\nimport AddTask from './AddTask'\nimport Loader from './Loader'\nimport { connect } from 'react-redux'\nimport { initTask } from '../../../state/ducks/task/actions'\n\n\n\nconst Trello = ({initTask}) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCount('Timeout called!');\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const [loading, setLoading] = useState(true)\n\n  const sleep = ms => new Promise(resolve=>{\n    setTimeout(() => {resolve()}, ms);\n    clearTimeout(sleep)\n    clearTimeout(resolve)\n  })\n\n  sleep(2800).then(()=>{\n    setLoading(false)\n    initTask()\n    clearTimeout(sleep)\n  }\n);\n\n  \n  console.log('sukwa');\n  \n\n\n  return (\n    <div className=\"tasks-dashboard\">\n      {loading ?  <Loader/> : (\n        <>\n          <h3> Hello in TrELLO! </h3>\n          <p className=\"\">Create a task: </p>\n          <AddTask/>\n          <TaskList/>\n        </>\n      )}\n    </div>\n  )\n}\n\n\n\nconst mapDispatchToProps = { initTask};\n\nexport default connect(null, mapDispatchToProps)(Trello);"]},"metadata":{},"sourceType":"module"}