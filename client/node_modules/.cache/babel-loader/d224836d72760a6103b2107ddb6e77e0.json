{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\"; // import api from \"../../../api\";\n\nimport users from '../../../api/users';\nexport const userSignIn = ({\n  token\n}) => {\n  //let take users by timeout\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: _objectSpread({}, user, {\n    permissions: user.allPermissions\n  })\n});\nexport const signIn = data => dispatch => {\n  const apiUser = ms => new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\n  async function sin(data, ms) {\n    await apiUser(ms).then(() => console.log(data));\n  }\n\n  console.log(data);\n  sin(users, 1500).then(() => {\n    data.username === users;\n  });\n}; // export const signIn = credentials => dispatch =>\n// api.user\n//   .signin(credentials)\n//   .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n// export const me = () => dispatch =>\n//   api.user.me().then(data => {\n//     dispatch(setMe(data));\n//   });\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/user/actions.js"],"names":["types","users","userSignIn","token","localStorage","setItem","type","SIGN_IN","setMe","user","SET_ME","permissions","allPermissions","signIn","data","dispatch","apiUser","ms","Promise","resolve","setTimeout","sin","then","console","log","username","signOut","removeItem","SIGN_OUT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAE;AACzC,MAAIA,KAAJ,EAAW;AACTC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEN,KAAK,CAACO,OADP;AAELJ,MAAAA;AAFK,KAAP;AAID;AACF,CATM;AAWP,OAAO,MAAMK,KAAK,GAAGC,IAAI,KAAK;AAC5BH,EAAAA,IAAI,EAAEN,KAAK,CAACU,MADgB;AAE5BD,EAAAA,IAAI,oBACCA,IADD;AAEFE,IAAAA,WAAW,EAAEF,IAAI,CAACG;AAFhB;AAFwB,CAAL,CAAlB;AAQP,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAE1C,QAAMC,OAAO,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAG;AAACC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AAAyB,GAAhD,CAAtB;;AAEA,iBAAeI,GAAf,CAAmBP,IAAnB,EAAyBG,EAAzB,EAA6B;AAC3B,UAAMD,OAAO,CAACC,EAAD,CAAP,CAAYK,IAAZ,CAAiB,MAAKC,OAAO,CAACC,GAAR,CAAYV,IAAZ,CAAtB,CAAN;AACD;;AAEDS,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAO,EAAAA,GAAG,CAACpB,KAAD,EAAQ,IAAR,CAAH,CAAiBqB,IAAjB,CAAsB,MAAK;AACzBR,IAAAA,IAAI,CAACW,QAAL,KAAkBxB,KAAlB;AACD,GAFD;AAKD,CAdM,C,CAgBP;AACE;AACA;AACA;AAGF;AACA;AACA;AACA;;AAEA,OAAO,MAAMyB,OAAO,GAAG,MAAM;AAC3BtB,EAAAA,YAAY,CAACuB,UAAb,CAAwB,OAAxB;AAEA,SAAO;AACLrB,IAAAA,IAAI,EAAEN,KAAK,CAAC4B;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\n// import api from \"../../../api\";\nimport users from '../../../api/users';\n\nexport const userSignIn = ({ token }) => { //let take users by timeout\n  if (token) {\n    localStorage.setItem(\"token\", token);\n\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    permissions: user.allPermissions\n  }\n});\n\nexport const signIn = (data) => dispatch => {\n\n  const apiUser = ms => new Promise(resolve=> {setTimeout(resolve, ms);});\n\n  async function sin(data, ms) {\n    await apiUser(ms).then(()=> console.log(data))\n  }\n\n  console.log(data);\n  sin(users, 1500).then(()=> {\n    data.username === users\n  })\n  \n  \n}\n\n// export const signIn = credentials => dispatch =>\n  // api.user\n  //   .signin(credentials)\n  //   .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n  \n\n// export const me = () => dispatch =>\n//   api.user.me().then(data => {\n//     dispatch(setMe(data));\n//   });\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}