{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\"; // import api from \"../../../api\";\n\nimport users from '../../../api/users';\nexport const userSignIn = ({\n  user\n}) => {\n  //let take users by timeout\n  if (user) {\n    localStorage.setItem(\"user\", user);\n    return {\n      type: types.SIGN_IN,\n      user\n    };\n  }\n};\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: _objectSpread({}, user, {\n    permissions: user.allPermissions\n  })\n});\nexport const signIn = data => dispatch => {\n  sin(users, 1500).then(() => users.forEach(user => {\n    if (user.password === data.password && (user.nameOrMail === data.username || user.nameOrMail === data.email)) {\n      console.log('log in ');\n      dispatch(userSignIn);\n    } else return;\n  }));\n\n  const apiUser = ms => new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\n  async function sin(data, ms) {\n    await apiUser(ms).then(() => data);\n  }\n}; // export const signIn = credentials => dispatch =>\n// api.user\n//   .signin(credentials)\n//   .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n// export const me = () => dispatch =>\n//   api.user.me().then(data => {\n//     dispatch(setMe(data));\n//   });\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/user/actions.js"],"names":["types","users","userSignIn","user","localStorage","setItem","type","SIGN_IN","setMe","SET_ME","permissions","allPermissions","signIn","data","dispatch","sin","then","forEach","password","nameOrMail","username","email","console","log","apiUser","ms","Promise","resolve","setTimeout","signOut","removeItem","SIGN_OUT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAE;AACxC,MAAIA,IAAJ,EAAU;AACRC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,IAA7B;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEN,KAAK,CAACO,OADP;AAELJ,MAAAA;AAFK,KAAP;AAID;AACF,CATM;AAWP,OAAO,MAAMK,KAAK,GAAGL,IAAI,KAAK;AAC5BG,EAAAA,IAAI,EAAEN,KAAK,CAACS,MADgB;AAE5BN,EAAAA,IAAI,oBACCA,IADD;AAEFO,IAAAA,WAAW,EAAEP,IAAI,CAACQ;AAFhB;AAFwB,CAAL,CAAlB;AAQP,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAE1CC,EAAAA,GAAG,CAACd,KAAD,EAAQ,IAAR,CAAH,CAAiBe,IAAjB,CAAsB,MACpBf,KAAK,CAACgB,OAAN,CAAed,IAAD,IAAQ;AACpB,QAAGA,IAAI,CAACe,QAAL,KAAgBL,IAAI,CAACK,QAArB,KAAkCf,IAAI,CAACgB,UAAL,KAAkBN,IAAI,CAACO,QAAvB,IAAoCjB,IAAI,CAACgB,UAAL,KAAkBN,IAAI,CAACQ,KAA7F,CAAH,EAAwG;AACtGC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,MAAAA,QAAQ,CAACZ,UAAD,CAAR;AACC,KAHH,MAGQ;AACP,GALH,CADF;;AASA,QAAMsB,OAAO,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAG;AAACC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AAAyB,GAAhD,CAAtB;;AAEA,iBAAeV,GAAf,CAAmBF,IAAnB,EAAyBY,EAAzB,EAA6B;AAC3B,UAAMD,OAAO,CAACC,EAAD,CAAP,CAAYT,IAAZ,CAAiB,MAAKH,IAAtB,CAAN;AACD;AACF,CAhBM,C,CAkBP;AACE;AACA;AACA;AAGF;AACA;AACA;AACA;;AAEA,OAAO,MAAMgB,OAAO,GAAG,MAAM;AAC3BzB,EAAAA,YAAY,CAAC0B,UAAb,CAAwB,OAAxB;AAEA,SAAO;AACLxB,IAAAA,IAAI,EAAEN,KAAK,CAAC+B;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\n// import api from \"../../../api\";\nimport users from '../../../api/users';\n\nexport const userSignIn = ({ user }) => { //let take users by timeout\n  if (user) {\n    localStorage.setItem(\"user\", user);\n\n    return {\n      type: types.SIGN_IN,\n      user\n    };\n  }\n};\n\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    permissions: user.allPermissions\n  }\n});\n\nexport const signIn = (data) => dispatch => {\n\n  sin(users, 1500).then(()=> \n    users.forEach((user)=>{\n      if(user.password===data.password && (user.nameOrMail===data.username  || user.nameOrMail===data.email) ){\n        console.log('log in ')\n        dispatch(userSignIn)\n        }else return;\n      }\n    )\n  ) \n  const apiUser = ms => new Promise(resolve=> {setTimeout(resolve, ms);});\n\n  async function sin(data, ms) {\n    await apiUser(ms).then(()=> data)\n  }\n}\n\n// export const signIn = credentials => dispatch =>\n  // api.user\n  //   .signin(credentials)\n  //   .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n  \n\n// export const me = () => dispatch =>\n//   api.user.me().then(data => {\n//     dispatch(setMe(data));\n//   });\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}