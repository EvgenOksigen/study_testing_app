{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport { sort, deleteContact, edit, saveEdit } from \"../../state/ducks/search/actions\";\n\nconst ContactList = ({\n  data,\n  deleteContact,\n  edit,\n  saveEdit\n}) => {\n  //\n  const EditContact = ({\n    contact\n  }) => {\n    //\n    const nameInputHandler = e => {\n      saveEdit(e.target.value);\n    };\n\n    const phoneInputHandler = e = () => {\n      contact.phoneNumber = e.target.value;\n    };\n\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      name: \"name\",\n      onChange: nameInputHandler,\n      value: contact.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"phone\",\n      onChange: phoneInputHandler,\n      value: contact.phoneNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"contactList-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Contact List\"), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, data.map((contact, index) => React.createElement(\"div\", {\n    key: index,\n    className: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, !contact.edit && React.createElement(\"p\", {\n    key: contact.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, index + 1, \" \", contact.name, \" : \", contact.phoneNumber), contact.edit && React.createElement(EditContact, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"contact-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      contact.edit ? edit(contact.id) : edit(contact.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, contact.edit ? React.createElement(\"i\", {\n    className: \"fas fa-save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => {\n      deleteContact(contact.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))))));\n};\n\nconst mapStateToProps = ({\n  contacts: {\n    data\n  }\n}) => ({\n  data\n});\n\nconst mapDispatchToProps = {\n  sort,\n  deleteContact,\n  edit,\n  saveEdit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx"],"names":["React","connect","sort","deleteContact","edit","saveEdit","ContactList","data","EditContact","contact","nameInputHandler","e","target","value","phoneInputHandler","phoneNumber","name","map","index","id","mapStateToProps","contacts","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport {\n  sort,\n  deleteContact,\n  edit,\n  saveEdit\n} from \"../../state/ducks/search/actions\";\n\nconst ContactList = ({ data, deleteContact, edit, saveEdit }) => {\n  //\n  const EditContact = ({ contact }) => {\n    //\n\n    const nameInputHandler = e => {\n      saveEdit(e.target.value);\n    };\n\n    const phoneInputHandler = (e = () => {\n      contact.phoneNumber = e.target.value;\n    });\n\n    return (\n      <>\n        <input\n          name=\"name\"\n          onChange={nameInputHandler}\n          value={contact.name}\n        ></input>\n        <input\n          name=\"phone\"\n          onChange={phoneInputHandler}\n          value={contact.phoneNumber}\n        ></input>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"contactList-container\">\n      <h3> Contact List</h3>\n      <div className=\"\">\n        {data.map((contact, index) => (\n          <div key={index} className=\"contact\">\n            {!contact.edit && (\n              <p key={contact.id}>\n                {index + 1} {contact.name} : {contact.phoneNumber}\n              </p>\n            )}\n\n            {contact.edit && <EditContact contact={contact} />}\n\n            <div className=\"contact-buttons\">\n              <button\n                onClick={() => {\n                  contact.edit ? edit(contact.id) : edit(contact.id);\n                }}\n              >\n                {contact.edit ? (\n                  <i className=\"fas fa-save\"></i>\n                ) : (\n                  <i className=\"fas fa-edit\"></i>\n                )}\n              </button>\n              <button\n                onClick={() => {\n                  deleteContact(contact.id);\n                }}\n              >\n                <i className=\"fas fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { data } }) => ({ data });\n\nconst mapDispatchToProps = { sort, deleteContact, edit, saveEdit };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}