{"ast":null,"code":"import * as types from \"./types\";\nimport axios from 'axios';\nimport { API_KEY } from '../../../App';\nexport const show = () => ({\n  type: types.SHOW\n});\nexport const hide = () => ({\n  type: types.HIDE\n});\nexport const getWeth = () => ({\n  type: types.GET_WEATHER,\n  payload: res.data\n});\nexport const getWeather = value => dispatch => {\n  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${API_KEY}`).then(res => {\n    dispatch(getWeth());\n  });\n};\nexport const setCity = () => ({\n  type: types.SET_CITY\n});","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/forms/actions.js"],"names":["types","axios","API_KEY","show","type","SHOW","hide","HIDE","getWeth","GET_WEATHER","payload","res","data","getWeather","value","dispatch","get","then","setCity","SET_CITY"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAEA,OAAO,MAAMC,IAAI,GAAG,OAAO;AACzBC,EAAAA,IAAI,EAAGJ,KAAK,CAACK;AADY,CAAP,CAAb;AAKP,OAAO,MAAMC,IAAI,GAAG,OAAO;AACzBF,EAAAA,IAAI,EAAGJ,KAAK,CAACO;AADY,CAAP,CAAb;AAIP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BJ,EAAAA,IAAI,EAAGJ,KAAK,CAACS,WADe;AAE5BC,EAAAA,OAAO,EAAGC,GAAG,CAACC;AAFc,CAAP,CAAhB;AAKP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAWC,QAAQ,IAAG;AAC9Cd,EAAAA,KAAK,CAACe,GAAN,CAAW,qDAAoDF,KAAM,UAASZ,OAAQ,EAAtF,EACGe,IADH,CACQN,GAAG,IAAI;AACXI,IAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACD,GAHH;AAID,CALM;AAOP,OAAO,MAAMU,OAAO,GAAG,OAAO;AAC5Bd,EAAAA,IAAI,EAAEJ,KAAK,CAACmB;AADgB,CAAP,CAAhB","sourcesContent":["import * as types from \"./types\";\nimport axios from 'axios'\nimport {API_KEY} from '../../../App';\n\nexport const show = () =>( {\n  type : types.SHOW\n});\n\n\nexport const hide = () => ({\n  type : types.HIDE\n});\n\nexport const getWeth = () => ({\n  type : types.GET_WEATHER,\n  payload : res.data\n});\n\nexport const getWeather = (value) => dispatch =>{\n  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${API_KEY}`)\n    .then(res => {\n      dispatch(getWeth())\n    })  \n};\n\nexport const setCity = () => ({\n  type :types.SET_CITY\n})"]},"metadata":{},"sourceType":"module"}