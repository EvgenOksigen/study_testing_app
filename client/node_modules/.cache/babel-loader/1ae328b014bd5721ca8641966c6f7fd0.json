{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { taskComplete } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({\n  task,\n  index,\n  taskComplete\n}) => {\n  const dragNDrop = e => {\n    const dragItem = e.target;\n\n    dragItem.ondragstart = function () {\n      return false;\n    }; // let currentDroppable = null;\n\n\n    dragItem.onmousedown = e => {\n      dragItem.style.position = 'absolute';\n      dragItem.style.zIndex = 1000;\n      let shiftX = e.clientX - dragItem.getBoundingClientRect().left;\n      let shiftY = e.clientY - dragItem.getBoundingClientRect().top;\n      document.body.append(dragItem);\n      moveAt(e.pageX, e.pageY);\n\n      function moveAt(pageX, pageY) {\n        dragItem.style.left = pageX - shiftX + 'px';\n        dragItem.style.top = pageY - shiftY + 'px';\n      }\n\n      function onMouseMove(e) {\n        moveAt(e.pageX, e.pageY); // console.log(currentDroppable);\n\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        if (!elemBelow) return; // let droppableBelow = elemBelow.closest('.finished');\n        // if (currentDroppable !== droppableBelow) {\n        //   if (currentDroppable) {\n        //     leaveDroppable(currentDroppable);\n        //   }\n        //   currentDroppable = droppableBelow;\n        //   if (currentDroppable) {\n        //     enterDroppable(currentDroppable);\n        //   }\n        // } \n      }\n\n      document.addEventListener('mousemove', onMouseMove);\n\n      dragItem.onmouseup = e => {\n        //\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        let droppableBelow = elemBelow.closest(`#${dragItem.id}`);\n        console.log(elemBelow); // let droppableBelow = elemBelow.closest('.finished');\n        // let droppableBelowBak = elemBelow.closest('.not-finished')\n        // if(currentDroppable === elemBelow && currentDroppable === droppableBelow){\n        //   taskComplete(dragItem.id)\n        //   dragItem.remove();\n        // }\n        // if(elemBelow === droppableBelowBak){\n        //   taskComplete(dragItem.id)\n        //   dragItem.remove();\n        // }\n\n        document.removeEventListener('mousemove', onMouseMove);\n        dragItem.onmouseup = null;\n      };\n    }; // function enterDroppable(elem) {\n    //   elem.style.background = '#afe892';\n    // }\n    // function enterDroppableBack(elem) {\n    //   elem.style.background = 'pink';\n    // }\n    // function leaveDroppable(elem) {\n    //   elem.style.background = '';\n    // }\n\n  };\n\n  const style = {\n    span: {\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%',\n      padding: 0,\n      listStyleType: 'none',\n      textAlign: 'left'\n    }\n  };\n  return React.createElement(\"span\", {\n    className: \"taskItem\",\n    style: style.span,\n    onMouseOver: dragNDrop,\n    id: task.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, task.title);\n};\n\nconst mapDispatchToProps = {\n  taskComplete\n};\nexport default connect(null, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js"],"names":["React","connect","taskComplete","TaskItem","task","index","dragNDrop","e","dragItem","target","ondragstart","onmousedown","style","position","zIndex","shiftX","clientX","getBoundingClientRect","left","shiftY","clientY","top","document","body","append","moveAt","pageX","pageY","onMouseMove","hidden","elemBelow","elementFromPoint","addEventListener","onmouseup","droppableBelow","closest","id","console","log","removeEventListener","span","display","maxWidth","width","padding","listStyleType","textAlign","title","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport {taskComplete} from '../../../state/ducks/task/actions'\n\nconst TaskItem = ({task, index, taskComplete}) =>{\n  const dragNDrop = (e) => {\n    const dragItem = e.target;\n    \n    dragItem.ondragstart = function() {\n      return false;\n    };\n    // let currentDroppable = null;\n    \n    dragItem.onmousedown = e => {\n\n      dragItem.style.position = 'absolute'\n      dragItem.style.zIndex = 1000;\n      \n      let shiftX = e.clientX - dragItem.getBoundingClientRect().left;\n      let shiftY = e.clientY - dragItem.getBoundingClientRect().top;\n      \n      document.body.append(dragItem);\n\n      moveAt(e.pageX, e.pageY);\n      \n      function moveAt(pageX, pageY){\n        dragItem.style.left = pageX - shiftX +'px'\n        dragItem.style.top = pageY - shiftY +'px'\n      }\n  \n      function onMouseMove(e) {\n        moveAt(e.pageX, e.pageY);\n        // console.log(currentDroppable);\n  \n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n  \n        if (!elemBelow) return;\n  \n        // let droppableBelow = elemBelow.closest('.finished');\n  \n  \n        // if (currentDroppable !== droppableBelow) {\n        //   if (currentDroppable) {\n        //     leaveDroppable(currentDroppable);\n        //   }\n        //   currentDroppable = droppableBelow;\n        //   if (currentDroppable) {\n        //     enterDroppable(currentDroppable);\n        //   }\n        // } \n       \n\n      }\n  \n      document.addEventListener('mousemove', onMouseMove);\n  \n      dragItem.onmouseup = (e) => {\n        //\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        \n        let droppableBelow = elemBelow.closest(`#${dragItem.id}`);\n\n        console.log(elemBelow);\n        \n        // let droppableBelow = elemBelow.closest('.finished');\n        // let droppableBelowBak = elemBelow.closest('.not-finished')\n        \n        // if(currentDroppable === elemBelow && currentDroppable === droppableBelow){\n        //   taskComplete(dragItem.id)\n        //   dragItem.remove();\n        // }\n        // if(elemBelow === droppableBelowBak){\n        //   taskComplete(dragItem.id)\n        //   dragItem.remove();\n        // }\n  \n          document.removeEventListener('mousemove', onMouseMove);\n          dragItem.onmouseup = null;\n  \n      };\n    }\n    \n    // function enterDroppable(elem) {\n    //   elem.style.background = '#afe892';\n    // }\n  \n    // function enterDroppableBack(elem) {\n    //   elem.style.background = 'pink';\n    // }\n    \n    // function leaveDroppable(elem) {\n    //   elem.style.background = '';\n    // }\n\n  }\n\n  \n  const style = {\n    span:{\n      display: 'block',\n      maxWidth:'250px',\n      width:'100%',\n      padding:0 ,\n      listStyleType:'none',\n      textAlign:'left'\n    }\n  }\n  \n  return(\n  <span className='taskItem'\n      style={style.span}\n      onMouseOver={dragNDrop}\n      id={task.id}>\n        {task.title}\n  </span>\n    )\n}\n\n\nconst mapDispatchToProps = { taskComplete};\n\nexport default connect(null, mapDispatchToProps)(TaskItem);"]},"metadata":{},"sourceType":"module"}