{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport { sort } from \"../../state/ducks/search/actions\";\n\nconst ContactList = ({\n  contacts\n}) => {\n  console.log(contacts);\n  const sortedContacts = contacts.sort((a, b) => a.name !== b.name ? a.name < b.name ? -1 : 1 : 0);\n  return React.createElement(\"div\", {\n    className: \"contactList-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" Contact List\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, sortedContacts.map(el => React.createElement(\"p\", {\n    key: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, el.id, \" \", el.name, \" : \", el.phoneNumber))));\n};\n\nconst mapStateToProps = ({\n  contacts\n}) => ({\n  contacts\n});\n\nconst mapDispatchToProps = {\n  sort\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx"],"names":["React","useState","connect","sort","ContactList","contacts","console","log","sortedContacts","a","b","name","map","el","id","phoneNumber","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,yBAAP;AACA,SAASC,IAAT,QAAqB,kCAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMG,cAAc,GAAGH,QAAQ,CAACF,IAAT,CAAc,CAACM,CAAD,EAAIC,CAAJ,KACnCD,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAb,GAAqBF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAA5C,GAAiD,CAD5B,CAAvB;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,cAAc,CAACI,GAAf,CAAmBC,EAAE,IACpB;AAAG,IAAA,GAAG,EAAEA,EAAE,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,EAAE,CAACC,EADN,OACWD,EAAE,CAACF,IADd,SACuBE,EAAE,CAACE,WAD1B,CADD,CADH,CAFF,CADF;AAYD,CAlBD;;AAoBA,MAAMC,eAAe,GAAG,CAAC;AAAEX,EAAAA;AAAF,CAAD,MAAmB;AAAEA,EAAAA;AAAF,CAAnB,CAAxB;;AAEA,MAAMY,kBAAkB,GAAG;AAAEd,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cb,WAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport { sort } from \"../../state/ducks/search/actions\";\n\nconst ContactList = ({ contacts }) => {\n  console.log(contacts);\n  const sortedContacts = contacts.sort((a, b) =>\n    a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0\n  );\n\n  return (\n    <div className=\"contactList-container\">\n      <h3> Contact List</h3>\n      <div>\n        {sortedContacts.map(el => (\n          <p key={el.id}>\n            {el.id} {el.name} : {el.phoneNumber}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => ({ contacts });\n\nconst mapDispatchToProps = { sort };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}