{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport { sort } from \"../../state/ducks/search/actions\";\nimport { deleteContact } from \"../../state/ducks/contacts/actions\";\n\nconst ContactList = ({\n  contacts,\n  sort,\n  deleteContact\n}) => {\n  sort(contacts);\n\n  const deleteContactById = () => {};\n\n  return React.createElement(\"div\", {\n    className: \"contactList-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" Contact List\"), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, contacts.map((el, index) => React.createElement(\"div\", {\n    key: index,\n    className: \"d-fx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    key: el.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, index + 1, \" \", el.name, \" : \", el.phoneNumber), React.createElement(\"button\", {\n    onClick: () => deleteContact(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Delete\")))));\n};\n\nconst mapStateToProps = ({\n  search: {\n    contacts\n  }\n}) => ({\n  contacts\n});\n\nconst mapDispatchToProps = {\n  sort,\n  deleteContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx"],"names":["React","connect","sort","deleteContact","ContactList","contacts","deleteContactById","map","el","index","id","name","phoneNumber","mapStateToProps","search","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,yBAAP;AACA,SAASC,IAAT,QAAqB,kCAArB;AACA,SAASC,aAAT,QAA8B,oCAA9B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYH,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAuC;AACzDD,EAAAA,IAAI,CAACG,QAAD,CAAJ;;AAEA,QAAMC,iBAAiB,GAAG,MAAM,CAAE,CAAlC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,KACZ;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,GAAG,EAAED,EAAE,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,GAAG,CADX,OACeD,EAAE,CAACG,IADlB,SAC2BH,EAAE,CAACI,WAD9B,CADF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMT,aAAa,CAACM,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADD,CADH,CAFF,CADF;AAeD,CApBD;;AAsBA,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAET,IAAAA;AAAF;AAAV,CAAD,MAA+B;AAAEA,EAAAA;AAAF,CAA/B,CAAxB;;AAEA,MAAMU,kBAAkB,GAAG;AAAEb,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B;AAEA,eAAeF,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,WAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport { sort } from \"../../state/ducks/search/actions\";\nimport { deleteContact } from \"../../state/ducks/contacts/actions\";\n\nconst ContactList = ({ contacts, sort, deleteContact }) => {\n  sort(contacts);\n\n  const deleteContactById = () => {};\n\n  return (\n    <div className=\"contactList-container\">\n      <h3> Contact List</h3>\n      <div className=\"\">\n        {contacts.map((el, index) => (\n          <div key={index} className=\"d-fx\">\n            <p key={el.id}>\n              {index + 1} {el.name} : {el.phoneNumber}\n            </p>\n            <button onClick={() => deleteContact(index)}>Delete</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ search: { contacts } }) => ({ contacts });\n\nconst mapDispatchToProps = { sort, deleteContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}