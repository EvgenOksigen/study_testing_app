{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/routes/index.js\";\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\"; // import { connect } from \"react-redux\";\n\nimport Auth from \"../views/pages/Auth/Auth\";\nimport DefaultRoute from './default';\nimport PhoneBook from '../PhoneBook';\nimport GuestRoute from './hoc/GuestRoute';\nimport { me, setMe } from \"../state/ducks/user/actions\";\nimport { connect } from 'react-redux';\nimport PrivateRoute from './hoc/PrivateRoute';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      resources: []\n    };\n\n    this.getMe = async () => {\n      const me = this.props.me;\n      const user = localStorage.getItem(\"user\");\n\n      if (user) {\n        await me();\n        this.setState({\n          loading: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMe();\n  }\n\n  render() {\n    const loading = this.state.loading;\n    return React.createElement(React.Fragment, null, !loading && React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: DefaultRoute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(GuestRoute, {\n      path: \"/login\",\n      exact: true,\n      component: Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/home\",\n      exact: true,\n      component: PhoneBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nconst mapDispatchToProps = {\n  me,\n  setMe\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/routes/index.js"],"names":["React","Route","Switch","Auth","DefaultRoute","PhoneBook","GuestRoute","me","setMe","connect","PrivateRoute","App","Component","state","loading","resources","getMe","props","user","localStorage","getItem","setState","componentDidMount","render","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA,SAASC,EAAT,EAAaC,KAAb,QAA0B,6BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,SAAS,EAAE;AAFL,KADwB;;AAAA,SAUhCC,KAVgC,GAUxB,YAAY;AAAA,YACVT,EADU,GACH,KAAKU,KADF,CACVV,EADU;AAGlB,YAAMW,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;;AAEC,UAAIF,IAAJ,EAAU;AACT,cAAMX,EAAE,EAAR;AACA,aAAKc,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;;AACD,WAAKO,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AAEF,KArB+B;AAAA;;AAMhCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL;AACD;;AAeDO,EAAAA,MAAM,GAAI;AAAA,UACDT,OADC,GACS,KAAKD,KADd,CACDC,OADC;AAER,WACE,0CACG,CAACA,OAAD,IACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEV,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,QAAjB;AAA0B,MAAA,KAAK,MAA/B;AAAgC,MAAA,SAAS,EAAED,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,KAAK,MAAhC;AAAiC,MAAA,SAAS,EAAEE,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAFJ,CADF;AAeD;;AAxC+B;;AA2ClC,MAAMmB,eAAe,GAAG,CAAC;AAAEN,EAAAA;AAAF,CAAD,MAAe;AAAEA,EAAAA;AAAF,CAAf,CAAxB;;AAEA,MAAMO,kBAAkB,GAAG;AAAElB,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAA3B;AAEA,eAAeC,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\nimport Auth from \"../views/pages/Auth/Auth\";\nimport DefaultRoute from './default'\nimport PhoneBook from '../PhoneBook'\nimport GuestRoute from './hoc/GuestRoute';\n\nimport { me, setMe } from \"../state/ducks/user/actions\";\nimport { connect } from 'react-redux';\nimport PrivateRoute from './hoc/PrivateRoute';\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    resources: []\n  };\n\n  componentDidMount() {\n    this.getMe();\n  }\n\n  getMe = async () => {\n    const { me } = this.props;\n\n    const user = localStorage.getItem(\"user\");\n\n     if (user) {\n      await me();\n      this.setState({ loading: false });\n     }\n     this.setState({ loading: false });\n\n  };\n\n  render () { \n    const {loading}= this.state;\n    return(\n      <>\n        {!loading && (\n          <Switch>\n            <Route path=\"/\" exact component={DefaultRoute} />\n\n            <GuestRoute path=\"/login\" exact component={Auth} />\n\n            <PrivateRoute path=\"/home\" exact component={PhoneBook}/>\n          </Switch>\n          )\n        \n        }\n      </>\n     ) \n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst mapDispatchToProps = { me, setMe };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}