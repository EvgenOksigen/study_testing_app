{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/App.js\";\nimport React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/Weather';\nimport './App.css';\nconst API_KEY = \"9ea6825b8b5dae9d2dafb3fa6056126c\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      if (city) {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n        const data = await api_url.json();\n        let sunset = data.sys.sunset;\n        let date = new Date();\n        let sunset_time = `${date.getHours()} : ${date.getMinutes()} : ${date.getSeconds()}`;\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          error: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","sunset_time","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,IAAI,EAAGC,SADD;AAENC,MAAAA,IAAI,EAAGD,SAFD;AAGNE,MAAAA,OAAO,EAAGF,SAHJ;AAING,MAAAA,OAAO,EAAGH,SAJJ;AAKNI,MAAAA,MAAM,EAAGJ,SALH;AAMNK,MAAAA,KAAK,EAAGL;AANF,KAFuB;;AAAA,SAW/BM,cAX+B,GAWd,MAAMC,CAAN,IAAY;AAC3B,UAAGN,IAAH,EAAQ;AAGNM,QAAAA,CAAC,CAACC,cAAF;AACA,cAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,cAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,qDAAoDZ,IAAK,UAASN,OAAQ,EAA5E,CAA3B;AACA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAGA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,YAAIC,WAAW,GAAI,GAAEF,IAAI,CAACG,QAAL,EAAgB,MAAKH,IAAI,CAACI,UAAL,EAAkB,MAAKJ,IAAI,CAACK,UAAL,EAAkB,EAAnF;AAEA,aAAKC,QAAL,CAAc;AACZxB,UAAAA,IAAI,EAAEe,IAAI,CAACU,IAAL,CAAUzB,IADJ;AAEZE,UAAAA,IAAI,EAAGa,IAAI,CAACW,IAFA;AAGZvB,UAAAA,OAAO,EAAGY,IAAI,CAACE,GAAL,CAASd,OAHP;AAIZC,UAAAA,OAAO,EAAGW,IAAI,CAACE,GAAL,CAASb,OAJP;AAKZC,UAAAA,MAAM,EAAGU,IAAI,CAACE,GAAL,CAASZ,MALN;AAMZC,UAAAA,KAAK,EAAG;AANI,SAAd;AAQD;AAIF,KArC8B;AAAA;;AAwC/BqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKpB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IAA1B;AACS,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAD1B;AAES,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAF7B;AAGS,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAH7B;AAIS,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MAJ5B;AAKS,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAaD;;AAtD8B;;AAyDjC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/Weather';\n\nimport './App.css';\n\nconst API_KEY = \"9ea6825b8b5dae9d2dafb3fa6056126c\";\n\nclass App extends React.Component{\n\n  state = {\n    temp : undefined,\n    city : undefined,\n    country : undefined ,\n    sunrise : undefined,\n    sunset : undefined,\n    error : undefined\n  }\n\n  gettingWeather = async(e) => {\n    if(city){\n      \n      \n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n      const data = await api_url.json();\n    \n     \n      let sunset = data.sys.sunset\n      let date = new Date();\n      let sunset_time = `${date.getHours()} : ${date.getMinutes()} : ${date.getSeconds()}`\n      \n      this.setState({\n        temp: data.main.temp,\n        city : data.name,\n        country : data.sys.country ,\n        sunrise : data.sys.sunrise,\n        sunset : data.sys.sunset,\n        error : ''\n      })\n    }\n\n    \n\n  }\n\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Info/>\n        <Form getWeather={this.gettingWeather} />\n        <Weather temp={this.state.temp}\n                 city={this.state.city}\n                 country={this.state.country}\n                 sunrise={this.state.sunrise}\n                 sunset={this.state.sunset}\n                 error={this.state.error}\n                 />\n      </div>\n    )\n  }\n}\n\nexport default App;\n  "]},"metadata":{},"sourceType":"module"}