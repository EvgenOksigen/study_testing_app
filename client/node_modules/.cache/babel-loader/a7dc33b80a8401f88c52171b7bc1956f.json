{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from '../../../api/contacts';\nconst initialState = {\n  contacts: initialContacts\n};\nconst startReducer = createReducer(initialState)({\n  [types.SORT]: (state, {\n    payload\n  }) => {\n    return _objectSpread({}, state, {\n      contacts: payload\n    });\n  },\n  [types.FIND]: (state, {\n    payload\n  }) => {\n    const findItems = [];\n    state.contacts.forEach(item => {\n      if (item.name && item.name.includes(`${payload}`)) {\n        findItems.push(item.name);\n      }\n    });\n    return _objectSpread({}, state, {\n      contacts: state.contacts\n    });\n  }\n});\nexport default startReducer;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/search/reducers.js"],"names":["types","createReducer","initialContacts","initialState","contacts","startReducer","SORT","state","payload","FIND","findItems","forEach","item","name","includes","push"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAEF;AADS,CAArB;AAIA,MAAMG,YAAY,GAAGJ,aAAa,CAACE,YAAD,CAAb,CAA4B;AAE/C,GAACH,KAAK,CAACM,IAAP,GAAc,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAClC,6BACKD,KADL;AAEEH,MAAAA,QAAQ,EAAEI;AAFZ;AAID,GAP8C;AAS/C,GAACR,KAAK,CAACS,IAAP,GAAc,CAACF,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAClC,UAAME,SAAS,GAAC,EAAhB;AACAH,IAAAA,KAAK,CAACH,QAAN,CAAeO,OAAf,CAAuBC,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAoB,GAAEN,OAAQ,EAA9B,CAAjB,EAAmD;AACjDE,QAAAA,SAAS,CAACK,IAAV,CAAeH,IAAI,CAACC,IAApB;AACD;AAEF,KALD;AAOA,6BACKN,KADL;AAEEH,MAAAA,QAAQ,EAAEG,KAAK,CAACH;AAFlB;AAID;AAtB8C,CAA5B,CAArB;AA0BA,eAAeC,YAAf","sourcesContent":["import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from '../../../api/contacts';\n\n\nconst initialState = {\n  contacts: initialContacts\n}\n\nconst startReducer = createReducer(initialState)({\n\n  [types.SORT]: (state, {payload}) => {\n    return{\n      ...state,\n      contacts: payload\n    }\n  },\n\n  [types.FIND]: (state, {payload}) => {\n    const findItems=[]\n    state.contacts.forEach(item => {\n      if (item.name && item.name.includes(`${payload}`)) {\n        findItems.push(item.name);\n      }\n      \n    });\n\n    return{\n      ...state,\n      contacts: state.contacts\n    }\n  }\n\n});\n\nexport default startReducer;"]},"metadata":{},"sourceType":"module"}