{"ast":null,"code":"import _objectWithoutProperties from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js\";\nimport React, { useEffect, setState } from 'react';\nimport { connect } from 'react-redux';\nimport { show, hide, getWeather, setCity } from '../state/ducks/forms/actions';\n\nconst ReduxTest = (_ref) => {\n  let isShow = _ref.isShow,\n      show = _ref.show,\n      getWeather = _ref.getWeather,\n      forms = _ref.forms,\n      setCity = _ref.setCity,\n      props = _objectWithoutProperties(_ref, [\"isShow\", \"show\", \"getWeather\", \"forms\", \"setCity\"]);\n\n  useEffect(() => {\n    getWeather();\n  });\n  const propsOfCountry = getWeather();\n  console.log(propsOfCountry);\n\n  function inputHandle(e) {\n    const city = e.target.value;\n    props.setState({\n      city\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" redux test in console\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"city\",\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => getWeather(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Get Weater\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, getWeather().name))));\n};\n\nconst mapStateToProps = ({\n  forms\n}) => ({\n  isShow: forms.isShowing,\n  city: forms.name\n});\n\nconst mapDispatchToProps = {\n  show,\n  hide,\n  getWeather,\n  setCity\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxTest);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js"],"names":["React","useEffect","setState","connect","show","hide","getWeather","setCity","ReduxTest","isShow","forms","props","propsOfCountry","console","log","inputHandle","e","city","target","value","name","mapStateToProps","isShowing","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,8BAAhD;;AAGA,MAAMC,SAAS,GAAG,UAA0D;AAAA,MAAxDC,MAAwD,QAAxDA,MAAwD;AAAA,MAAhDL,IAAgD,QAAhDA,IAAgD;AAAA,MAA1CE,UAA0C,QAA1CA,UAA0C;AAAA,MAA9BI,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBH,OAAuB,QAAvBA,OAAuB;AAAA,MAAVI,KAAU;;AAC1EV,EAAAA,SAAS,CAAE,MAAM;AACfK,IAAAA,UAAU;AACX,GAFQ,CAAT;AAGA,QAAMM,cAAc,GAAGN,UAAU,EAAjC;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;;AAEA,WAASG,WAAT,CAAqBC,CAArB,EAAuB;AACrB,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AACAR,IAAAA,KAAK,CAACT,QAAN,CAAe;AAACe,MAAAA;AAAD,KAAf;AAED;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,QAAQ,EAAEF,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAIT,UAAU,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,UAAU,GAAGc,IAAjB,CADF,CARF,CADK,CAAP;AAcD,CA5BD;;AA8BA,MAAMC,eAAe,GAAG,CAAC;AAACX,EAAAA;AAAD,CAAD,MAAc;AACpCD,EAAAA,MAAM,EAAEC,KAAK,CAACY,SADsB;AAEpCL,EAAAA,IAAI,EAAEP,KAAK,CAACU;AAFwB,CAAd,CAAxB;;AAKA,MAAMG,kBAAkB,GAAG;AAACnB,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAA3B;AAIA,eAAeJ,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA8Cf,SAA9C,CAAf","sourcesContent":["import React, { useEffect, setState } from 'react';\nimport {connect} from 'react-redux';\nimport { show, hide, getWeather, setCity } from '../state/ducks/forms/actions';\n\n\nconst ReduxTest = ({isShow, show, getWeather, forms, setCity , ...props})=> {\n  useEffect( () => {\n    getWeather();\n  })\n  const propsOfCountry = getWeather();\n\n  console.log(propsOfCountry);\n  \n  function inputHandle(e){\n    const city = e.target.value;\n    props.setState({city})\n    \n  }\n\n  return <div> redux test in console\n    <div>\n      <input name='city' \n             onChange={inputHandle}\n             >\n      </input>\n      <button onClick={()=>getWeather()}>\n        Get Weater\n      </button>\n      <div>\n        <p>{getWeather().name}</p>\n      </div>\n    </div>\n  </div>\n}\n\nconst mapStateToProps = ({forms}) => ({\n  isShow: forms.isShowing,\n  city: forms.name\n})\n\nconst mapDispatchToProps = {show, hide, getWeather, setCity};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps )(ReduxTest);"]},"metadata":{},"sourceType":"module"}