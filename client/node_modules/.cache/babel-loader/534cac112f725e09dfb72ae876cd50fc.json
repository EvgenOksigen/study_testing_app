{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React, { useEffect } from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\n\nconst TaskList = ({\n  allTasks\n}) => {\n  useEffect(() => {\n    const rerend = setTimeout(() => {\n      allTasks = JSON.parse(localStorage.getItem('tasks'));\n    }, 100);\n    return () => clearTimeout(rerend);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"taskList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, allTasks.map((task, index) => {\n    return React.createElement(TaskItem, {\n      task: task,\n      key: task.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  })));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks\n  }\n}) => ({\n  allTasks\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","useEffect","TaskItem","connect","TaskList","allTasks","rerend","setTimeout","JSON","parse","localStorage","getItem","clearTimeout","map","task","index","id","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAiB;AAChCJ,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMK,MAAM,GAAGC,UAAU,CAAC,MAAM;AAC9BF,MAAAA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AACD,KAFwB,EAGvB,GAHuB,CAAzB;AAIA,WAAO,MAAMC,YAAY,CAACN,MAAD,CAAzB;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACQ,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,WAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAED,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACE,EAAhC;AAAoC,MAAA,KAAK,EAAED,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,CADF,CADF;AASD,CAlBD;;AAqBA,MAAME,eAAe,GAAG,CAAC;AAAEZ,EAAAA,QAAQ,EAAE;AAAEA,IAAAA;AAAF;AAAZ,CAAD,MAAiC;AAAEA,EAAAA;AAAF,CAAjC,CAAxB;;AAEA,eAAeF,OAAO,CAACc,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,QAA/B,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\n\nconst TaskList = ( {allTasks}) => {\n  useEffect(()=>{\n    const rerend = setTimeout(() => {\n      allTasks = JSON.parse(localStorage.getItem('tasks'))\n    }\n    , 100);\n    return () => clearTimeout(rerend);\n  }, []);\n\n  return(\n    <div className=\"taskList\">\n      <ul>\n        {allTasks.map((task, index) => {\n          return <TaskItem task={task} key={task.id} index={index} />\n        })}\n      </ul>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks: { allTasks } }) => ({ allTasks });\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}