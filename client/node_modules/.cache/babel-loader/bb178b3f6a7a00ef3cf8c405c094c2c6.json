{"ast":null,"code":"import * as types from \"./types\";\nimport api from '../../../api'; // like api\n\nexport const userSignIn = ({\n  token\n}) => {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\nexport const setMe = user => {\n  return {\n    type: types.SET_ME,\n    user: { ...user // permissions: user.allPermissions\n\n    }\n  };\n};\nexport const signIn = credentials => dispatch => api.users.signin(credentials).then(d => d ? dispatch(userSignIn(d.data)) : d);\nexport const me = () => dispatch => api.users.me().then(data => dispatch(setMe(data)));\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/client/src/state/ducks/user/actions.js"],"names":["types","api","userSignIn","token","localStorage","setItem","type","SIGN_IN","setMe","user","SET_ME","signIn","credentials","dispatch","users","signin","then","d","data","me","signOut","removeItem","SIGN_OUT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAAgC;;AAGhC,OAAO,MAAMC,UAAU,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAe;AAEvC,MAAIA,KAAJ,EAAW;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEN,KAAK,CAACO,OADP;AAELJ,MAAAA;AAFK,KAAP;AAID;AACF,CAXM;AAaP,OAAO,MAAMK,KAAK,GAAGC,IAAI,IAAG;AAE5B,SAAQ;AACNH,IAAAA,IAAI,EAAEN,KAAK,CAACU,MADN;AAEND,IAAAA,IAAI,EAAE,EACJ,GAAGA,IADC,CAEJ;;AAFI;AAFA,GAAR;AAOC,CATM;AAWP,OAAO,MAAME,MAAM,GAAIC,WAAD,IAAiBC,QAAQ,IAC7CZ,GAAG,CAACa,KAAJ,CAAUC,MAAV,CAAiBH,WAAjB,EAA8BI,IAA9B,CAAmCC,CAAC,IAAKA,CAAC,GAAGJ,QAAQ,CAACX,UAAU,CAACe,CAAC,CAACC,IAAH,CAAX,CAAX,GAAgCD,CAA1E,CADK;AAIP,OAAO,MAAME,EAAE,GAAG,MAAMN,QAAQ,IAChCZ,GAAG,CAACa,KAAJ,CAAUK,EAAV,GAAeH,IAAf,CAAoBE,IAAI,IAAIL,QAAQ,CAACL,KAAK,CAACU,IAAD,CAAN,CAApC,CADO;AAGP,OAAO,MAAME,OAAO,GAAG,MAAM;AAC3BhB,EAAAA,YAAY,CAACiB,UAAb,CAAwB,OAAxB;AAEA,SAAO;AACLf,IAAAA,IAAI,EAAEN,KAAK,CAACsB;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\nimport api from '../../../api'; // like api\n\n\nexport const userSignIn = ( {token} ) => { \n  \n  if (token) {\n    \n    localStorage.setItem(\"token\", token);\n     \n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = user =>{\n\nreturn ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    // permissions: user.allPermissions\n  }\n})\n}\n\nexport const signIn = (credentials) => dispatch =>\n  api.users.signin(credentials).then(d => (d ? dispatch(userSignIn(d.data)):d))\n\n \nexport const me = () => dispatch => \napi.users.me().then(data => dispatch(setMe(data)));\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}