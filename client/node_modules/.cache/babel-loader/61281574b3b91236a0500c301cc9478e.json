{"ast":null,"code":"import * as types from \"./types\";\nimport axios from 'axios';\nimport { API_KEY } from \"../../../helpers\";\nexport const show = () => ({\n  type: types.SHOW\n});\nexport const hide = () => ({\n  type: types.HIDE\n});\nexport const getWeth = data => ({\n  type: types.GET_WEATHER,\n  payload: data\n});\nexport const getWeather = value => dispatch => {\n  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${API_KEY}`).then(res => {\n    dispatch(getWeth(res.data));\n  });\n};\nexport const setCity = () => ({\n  type: types.SET_CITY\n});","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/forms/actions.js"],"names":["types","axios","API_KEY","show","type","SHOW","hide","HIDE","getWeth","data","GET_WEATHER","payload","getWeather","value","dispatch","get","then","res","setCity","SET_CITY"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,IAAI,GAAG,OAAO;AACzBC,EAAAA,IAAI,EAAGJ,KAAK,CAACK;AADY,CAAP,CAAb;AAKP,OAAO,MAAMC,IAAI,GAAG,OAAO;AACzBF,EAAAA,IAAI,EAAGJ,KAAK,CAACO;AADY,CAAP,CAAb;AAIP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCL,EAAAA,IAAI,EAAGJ,KAAK,CAACU,WADmB;AAEhCC,EAAAA,OAAO,EAAGF;AAFsB,CAAX,CAAhB;AAKP,OAAO,MAAMG,UAAU,GAAIC,KAAD,IAAWC,QAAQ,IAAG;AAC9Cb,EAAAA,KAAK,CAACc,GAAN,CAAW,qDAAoDF,KAAM,UAASX,OAAQ,EAAtF,EACGc,IADH,CACQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAACN,OAAO,CAACS,GAAG,CAACR,IAAL,CAAR,CAAR;AACD,GAHH;AAID,CALM;AAOP,OAAO,MAAMS,OAAO,GAAG,OAAO;AAC5Bd,EAAAA,IAAI,EAAEJ,KAAK,CAACmB;AADgB,CAAP,CAAhB","sourcesContent":["import * as types from \"./types\";\nimport axios from 'axios'\nimport { API_KEY } from \"../../../helpers\";\n\nexport const show = () =>( {\n  type : types.SHOW\n});\n\n\nexport const hide = () => ({\n  type : types.HIDE\n});\n\nexport const getWeth = (data) => ({\n  type : types.GET_WEATHER,\n  payload : data\n});\n\nexport const getWeather = (value) => dispatch =>{\n  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${API_KEY}`)\n    .then(res => {\n      dispatch(getWeth(res.data))\n    })  \n};\n\nexport const setCity = () => ({\n  type :types.SET_CITY\n})"]},"metadata":{},"sourceType":"module"}