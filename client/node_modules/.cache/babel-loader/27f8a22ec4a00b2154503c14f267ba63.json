{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { dragItemToColumn } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({\n  task,\n  column,\n  allTasks,\n  taskList,\n  dragItemToColumn\n}) => {\n  const dragNDrop = e => {\n    // const dragItem = e.target.parentNode;\n    const dragItem = e.target.cloneNode(true);\n\n    dragItem.ondragstart = function () {\n      return false;\n    };\n\n    dragItem.onmousedown = e => {\n      const currentDroppableId = dragItem.attributes['column'].value;\n      dragItem.style.position = 'absolute';\n      dragItem.style.zIndex = 1000;\n      let shiftX = e.clientX - dragItem.getBoundingClientRect().left;\n      let shiftY = e.clientY - dragItem.getBoundingClientRect().top;\n      document.body.append(dragItem);\n      moveAt(e.pageX, e.pageY);\n\n      function moveAt(pageX, pageY) {\n        dragItem.style.left = pageX - shiftX + 'px';\n        dragItem.style.top = pageY - shiftY + 'px';\n      }\n\n      function onMouseMove(e) {\n        moveAt(e.pageX, e.pageY);\n        dragItem.style.transform = 'rotate(3deg)';\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        if (!elemBelow) return;\n      }\n\n      document.addEventListener('mousemove', onMouseMove);\n\n      dragItem.onmouseup = e => {\n        //\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false; // let droppableBelow = elemBelow.closest(`.${dragItem.id}`);\n\n        if (elemBelow.id === currentDroppableId) {\n          if (elemBelow.className === 'task-list-wrapper') {\n            dragItem.style.position = '';\n            dragItem.style.left = '';\n            dragItem.style.top = '';\n            dragItem.style.zIndex = '';\n            dragItem.style.transform = '';\n            elemBelow.children[0].children[1].children[0].append(dragItem);\n          }\n        } else {\n          if (elemBelow.id !== currentDroppableId) {\n            console.log(dragItem.firstChild.id);\n            let targetTask;\n            allTasks.map(task => {\n              if (task.id === parseInt(dragItem.firstChild.id)) {\n                task.status = parseInt(elemBelow.id);\n                targetTask = task;\n              }\n            });\n            console.log(targetTask);\n            dragItem.style.position = '';\n            dragItem.style.left = '';\n            dragItem.style.top = '';\n            dragItem.style.zIndex = '';\n            dragItem.style.transform = '';\n            elemBelow.children[0].children[1].children[0].append(dragItem);\n            taskList[elemBelow.id].tasks.push(targetTask);\n            console.log(taskList[elemBelow.id].tasks); // HATE THIS !\n            // dragItemToColumn(elemBelow.id, dragItem.firstChild.id)\n          }\n        }\n\n        document.removeEventListener('mousemove', onMouseMove);\n        dragItem.onmouseup = null;\n      };\n    }; // function enterDroppable(elem) {\n    //   elem.style.background = '#afe892';\n    // }\n    // function enterDroppableBack(elem) {\n    //   elem.style.background = 'pink';\n    // }\n    // function leaveDroppable(elem) {\n    //   elem.style.background = '';\n    // }\n\n  };\n\n  const style = {\n    span: {\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%'\n    }\n  };\n  return React.createElement(\"span\", {\n    className: \"task-item\",\n    style: style.span,\n    onMouseOver: dragNDrop,\n    id: task.id,\n    column: column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, task.title);\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks,\n    taskList\n  }\n}) => ({\n  allTasks,\n  taskList\n});\n\nconst mapDispatchToProps = {\n  dragItemToColumn\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js"],"names":["React","connect","dragItemToColumn","TaskItem","task","column","allTasks","taskList","dragNDrop","e","dragItem","target","cloneNode","ondragstart","onmousedown","currentDroppableId","attributes","value","style","position","zIndex","shiftX","clientX","getBoundingClientRect","left","shiftY","clientY","top","document","body","append","moveAt","pageX","pageY","onMouseMove","transform","hidden","elemBelow","elementFromPoint","addEventListener","onmouseup","id","className","children","console","log","firstChild","targetTask","map","parseInt","status","tasks","push","removeEventListener","span","display","maxWidth","width","title","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { dragItemToColumn } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({task, column, allTasks, taskList, dragItemToColumn}) =>{\n  const dragNDrop = (e) => {\n    // const dragItem = e.target.parentNode;\n    const dragItem = e.target.cloneNode(true);\n    \n    \n    dragItem.ondragstart = function() {\n      return false;\n    };\n    \n    dragItem.onmousedown = e => {\n      const currentDroppableId = dragItem.attributes['column'].value;\n      \n      dragItem.style.position = 'absolute'\n      dragItem.style.zIndex = 1000;\n      \n      let shiftX = e.clientX - dragItem.getBoundingClientRect().left;\n      let shiftY = e.clientY - dragItem.getBoundingClientRect().top;\n      \n      document.body.append(dragItem);\n\n      moveAt(e.pageX, e.pageY);\n      \n      function moveAt(pageX, pageY){\n        dragItem.style.left = pageX - shiftX +'px'\n        dragItem.style.top = pageY - shiftY +'px'\n      }\n  \n      function onMouseMove(e) {\n        moveAt(e.pageX, e.pageY);\n        dragItem.style.transform = 'rotate(3deg)'\n\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n  \n        if (!elemBelow) return;\n        \n      }\n  \n      document.addEventListener('mousemove', onMouseMove);\n  \n      dragItem.onmouseup = (e) => {\n        //\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        \n        // let droppableBelow = elemBelow.closest(`.${dragItem.id}`);\n\n        if (elemBelow.id === currentDroppableId) {\n          if(elemBelow.className === 'task-list-wrapper') {\n            dragItem.style.position = ''\n            dragItem.style.left = ''\n            dragItem.style.top = ''\n            dragItem.style.zIndex = '';\n            dragItem.style.transform = ''\n            elemBelow.children[0].children[1].children[0].append(dragItem)\n          }\n        } else { \n          if(elemBelow.id !== currentDroppableId){\n            console.log(dragItem.firstChild.id);\n            \n            let targetTask\n            \n            allTasks.map(task=>{ \n              if(task.id === parseInt(dragItem.firstChild.id)){\n                task.status = parseInt(elemBelow.id)\n                targetTask = task                \n              }\n            });\n\n            console.log(targetTask);\n\n            dragItem.style.position = ''\n            dragItem.style.left = ''\n            dragItem.style.top = ''\n            dragItem.style.zIndex = '';\n            dragItem.style.transform = ''\n            elemBelow.children[0].children[1].children[0].append(dragItem)\n\n            taskList[elemBelow.id].tasks.push(targetTask)\n            \n            console.log(taskList[elemBelow.id].tasks);\n            // HATE THIS !\n            // dragItemToColumn(elemBelow.id, dragItem.firstChild.id)\n          }\n        }\n\n  \n          document.removeEventListener('mousemove', onMouseMove);\n          dragItem.onmouseup = null;\n  \n      };\n    }\n    \n    // function enterDroppable(elem) {\n    //   elem.style.background = '#afe892';\n    // }\n  \n    // function enterDroppableBack(elem) {\n    //   elem.style.background = 'pink';\n    // }\n    \n    // function leaveDroppable(elem) {\n    //   elem.style.background = '';\n    // }\n\n  }\n\n  \n  const style = {\n    span:{\n      display: 'block',\n      maxWidth:'250px',\n      width:'100%',\n    }\n  }\n  \n  return(\n  <span className='task-item'\n      style={style.span}\n      onMouseOver={dragNDrop}\n      id={task.id}\n      column={column}\n      >\n        {task.title}\n  </span>\n    )\n}\n\nconst mapStateToProps = ({ allTasks: { allTasks, taskList } }) => ({allTasks, taskList});\nconst mapDispatchToProps = { dragItemToColumn };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);"]},"metadata":{},"sourceType":"module"}