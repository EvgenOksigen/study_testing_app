{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\nimport { dragItemToColumn, swapToOtherColumn } from '../../../state/ducks/task/actions';\n\nconst TaskList = ({\n  taskItems,\n  title,\n  id,\n  dragItemToColumn,\n  swapToOtherColumn\n}) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false;\n  let shiftX;\n  let shiftY;\n  let oldParent;\n\n  const columnEnterHandler = e => {\n    console.log('you enter on column â„– ' + id);\n  };\n\n  const liEnterHandler = e => {\n    console.log(e.target.tagName);\n\n    if (e.target.tagName !== \"LI\") {\n      return;\n    } else {\n      e.target.className = 'taskItem active';\n    }\n  };\n\n  const liLeaveHandler = e => {\n    e.target.className = 'taskItem';\n    readyToDragFlag = false;\n    e.target.parentNode.style.className = '';\n  };\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true;\n    oldParent = e.target.parentNode;\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function () {\n      return false;\n    };\n  };\n\n  const liMouseMoveHandler = e => {\n    if (readyToDragFlag) {\n      moveAt(e.pageX, e.pageY);\n      e.target.className = 'taskItem ui droppable';\n      oldParent.className = 'placeholder'; // console.log(oldParent);\n\n      root.append(e.target);\n      e.target.hidden = true;\n      let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n      e.target.hidden = false;\n      let droppableBelow = elemBelow.closest('.task-list-wrapper');\n      if (!elemBelow) return;\n\n      if (parseInt(droppableBelow.id) !== parseInt(id)) {\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent);\n        oldParent.hidden = false; // changeTask(elemBelow.id, (e.target.children[0].id || e.target.id ))\n      } else {\n        oldParent.hidden = false;\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent);\n      }\n    }\n\n    function moveAt(pageX, pageY) {\n      e.target.style.left = pageX - shiftX + 'px';\n      e.target.style.top = pageY - shiftY + 'px';\n    }\n  };\n\n  const liMouseUpHandler = e => {\n    // debugger\n    readyToDragFlag = false; // e.target.parentNode.className=''\n    // oldParent.className=''\n    // oldParent.hidden=false\n    // oldParent.appendChild(e.target)\n    // oldParent.remove()\n\n    e.target.hidden = true;\n    let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n    e.target.hidden = false;\n    swapToOtherColumn(elemBelow.id, e.target.id, e.target.attributes['column'].value);\n    e.target.remove();\n    debugger;\n    root.removeChild(e.target); // e.target.remove()\n    // dragItemToColumn(elemBelow.id, (e.target.id ))\n    // debugger\n    // dragItemToColumn(droppableBelow.id, e.target.children[0].id)\n  };\n\n  return React.createElement(\"div\", {\n    className: \"task-list-wrapper\",\n    id: id,\n    onMouseEnter: columnEnterHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    id: id,\n    className: `${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, taskItems.map((task, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      index: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      index: index + 1,\n      className: \"taskItem\",\n      key: index,\n      onMouseEnter: liEnterHandler,\n      onMouseLeave: liLeaveHandler,\n      onMouseDown: liMouseDownHandler,\n      onMouseMove: liMouseMoveHandler,\n      onMouseUp: liMouseUpHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TaskItem, {\n      task: task,\n      key: task.id,\n      index: index,\n      column: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  })), React.createElement(AddTask, {\n    idColumn: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    taskList\n  }\n}) => ({\n  taskList\n});\n\nconst mapDispatchToProps = {\n  dragItemToColumn,\n  swapToOtherColumn\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","dragItemToColumn","swapToOtherColumn","TaskList","taskItems","title","id","root","document","getElementById","readyToDragFlag","shiftX","shiftY","oldParent","columnEnterHandler","e","console","log","liEnterHandler","target","tagName","className","liLeaveHandler","parentNode","style","liMouseDownHandler","clientX","getBoundingClientRect","left","clientY","top","ondragstart","liMouseMoveHandler","moveAt","pageX","pageY","append","hidden","elemBelow","elementFromPoint","closest","droppableBelow","parseInt","getElementsByTagName","liMouseUpHandler","attributes","value","remove","removeChild","toLowerCase","match","toLocaleString","replace","map","task","index","mapStateToProps","allTasks","taskList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\nimport { dragItemToColumn, swapToOtherColumn } from '../../../state/ducks/task/actions';\n\n\nconst TaskList = ( { taskItems, title, id, dragItemToColumn,swapToOtherColumn } ) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false\n  let shiftX\n  let shiftY\n  let oldParent\n\n  const columnEnterHandler = e => {\n    console.log( 'you enter on column â„– ' + id );\n  }\n\n  const liEnterHandler = e => {\n    console.log(e.target.tagName);\n    if(e.target.tagName !== \"LI\"){\n      return;\n    }else{\n      e.target.className='taskItem active' \n    }\n  }\n  const liLeaveHandler = e => {\n    e.target.className='taskItem'\n    readyToDragFlag = false\n    e.target.parentNode.style.className=''\n  }\n\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true\n\n    oldParent = e.target.parentNode;\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n    \n    \n    e.target.ondragstart = function() {\n      return false;\n    };\n  }\n\n  const liMouseMoveHandler = e => {\n    if(readyToDragFlag){\n      moveAt(e.pageX, e.pageY);\n      \n      e.target.className = 'taskItem ui droppable'\n      \n      oldParent.className='placeholder'\n\n      // console.log(oldParent);\n      \n      root.append(e.target);\n      \n      e.target.hidden = true;\n      let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n      e.target.hidden = false;\n\n      let droppableBelow = elemBelow.closest('.task-list-wrapper');\n\n      if (!elemBelow) return;\n\n      if(parseInt(droppableBelow.id) !== parseInt(id)){\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent)\n        oldParent.hidden=false\n        \n        \n        // changeTask(elemBelow.id, (e.target.children[0].id || e.target.id ))\n\n      }\n      else{\n        oldParent.hidden=false\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent)\n      }\n      \n    }\n    \n    function moveAt(pageX, pageY){\n      e.target.style.left = pageX - shiftX +'px'\n      e.target.style.top = pageY - shiftY +'px'\n    }\n\n  }\n\n  const liMouseUpHandler = e =>{\n    // debugger\n    readyToDragFlag = false\n\n    // e.target.parentNode.className=''\n    // oldParent.className=''\n    // oldParent.hidden=false\n    // oldParent.appendChild(e.target)\n    // oldParent.remove()\n    \n    e.target.hidden = true;\n    let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n    e.target.hidden = false;\n\n    swapToOtherColumn(elemBelow.id, e.target.id, (e.target.attributes['column'].value))\n    e.target.remove()\n    debugger\n    root.removeChild(e.target);\n\n    \n    // e.target.remove()\n    // dragItemToColumn(elemBelow.id, (e.target.id ))\n    \n    \n\n    // debugger\n    // dragItemToColumn(droppableBelow.id, e.target.children[0].id)\n\n  }\n  \n\n  \n  return (\n    <div className=\"task-list-wrapper\"\n          id={id}\n          onMouseEnter={columnEnterHandler}>\n      <div className=\"task-list\">\n        <>\n          <h4 className='p-l-8'>{title}</h4>\n        <div id={id}\n             className={`${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`}>\n          <ul>\n            {taskItems.map((task, index) => {\n              return (\n                <div key={index} \n                     index={index+1}\n                     >\n                  <li \n                      index={index+1} \n                      className='taskItem'\n                      key={index}\n                      onMouseEnter={liEnterHandler}\n                      onMouseLeave={liLeaveHandler}\n                      onMouseDown={liMouseDownHandler}\n                      onMouseMove={liMouseMoveHandler}\n                      onMouseUp={liMouseUpHandler}\n                      >\n                        <TaskItem task={task} \n                                  key={task.id} \n                                  index={index} \n                                  column={id}/>\n                  </li>\n                </div>\n              )\n            })\n            }\n          </ul>\n          <AddTask idColumn={id}/>\n        </div>\n        </>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ allTasks:{ taskList } })=> ({taskList});\n\nconst mapDispatchToProps = { dragItemToColumn, swapToOtherColumn };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);"]},"metadata":{},"sourceType":"module"}