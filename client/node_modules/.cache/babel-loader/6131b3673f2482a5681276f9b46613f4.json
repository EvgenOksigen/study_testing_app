{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/client/src/routes/hoc/GuestRoute.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst GuestRoute = ({\n  component: Component,\n  user,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    if (!user) {\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}));\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nexport default connect(mapStateToProps)(GuestRoute);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/client/src/routes/hoc/GuestRoute.js"],"names":["React","connect","Route","Redirect","GuestRoute","component","Component","user","rest","props","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAxB;AAA8B,KAAGC;AAAjC,CAAD,KACjB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IAAI;AACf,QAAI,CAACF,IAAL,EAAW;AAET,aAAO,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AACD,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAaA,MAAMC,eAAe,GAAG,CAAE;AAACH,EAAAA;AAAD,CAAF,MAAe;AAACA,EAAAA;AAAD,CAAf,CAAxB;;AAEA,eAAeN,OAAO,CAACS,eAAD,CAAP,CAAyBN,UAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst GuestRoute = ({ component: Component, user, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (!user) {\n        \n        return <Component {...props} />;\n      }\n      return <Redirect to=\"/\" />;\n    }}\n  />\n);\n\nconst mapStateToProps = ( {user} ) => ({user});\n\nexport default connect(mapStateToProps)(GuestRoute);\n"]},"metadata":{},"sourceType":"module"}