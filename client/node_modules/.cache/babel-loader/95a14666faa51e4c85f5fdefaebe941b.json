{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\n\nconst TaskList = ({\n  tasks,\n  index,\n  title,\n  columnStatus\n}) => {\n  return React.createElement(\"div\", {\n    className: \"not-finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, tasks.map((task, index) => {\n    if (!task.completed) {\n      return React.createElement(\"li\", {\n        className: \"taskItem\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(TaskItem, {\n        task: task,\n        key: task.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    }\n  })), React.createElement(AddTask, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n/* return(\n    <>\n    <div className='taskListHeader'>\n      <label>Unfinished tasks</label>\n      <label>Finished tasks</label>\n    </div>\n    \n    <div className=\"taskList\">\n      \n     \n      <div className='finished'>\n        <ul>\n          {allTasks.map((task, index) => {\n            if(task.completed){\n              return <li className='taskItem'\n                         key={index}>\n                <TaskItem task={task} key={task.id} index={index} />\n                </li>\n            }\n          })\n          }\n        </ul>\n        <AddTask/>\n      </div>\n  </div>\n  </>\n)\n} */\n\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks\n  }\n}) => ({\n  allTasks\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","TaskList","tasks","index","title","columnStatus","map","task","completed","id","mapStateToProps","allTasks"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAF,KAA2C;AAE1D,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOJ,KAAP,KAAiB;AAC1B,QAAG,CAACI,IAAI,CAACC,SAAT,EAAmB;AAClB,aAAO;AAAI,QAAA,SAAS,EAAC,UAAd;AACI,QAAA,GAAG,EAAEL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEI,IAAhB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACE,EAAhC;AAAoC,QAAA,KAAK,EAAEN,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFI,CAAP;AAIA;AACF,GAPA,CADH,CADA,EAYA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,CADF;AAgBD,CAlBD;AAsBE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BF,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAACA,IAAAA;AAAD;AAAZ,CAAD,MAA8B;AAACA,EAAAA;AAAD,CAA9B,CAAxB;;AAEA,eAAeZ,OAAO,CAACW,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,QAA/B,CAAf","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\n\nconst TaskList = ( {tasks, index, title, columnStatus} ) => {\n\n  return(\n    <div className='not-finished'>\n    <ul>\n      {tasks.map((task, index) => {\n        if(!task.completed){\n         return <li className='taskItem'\n                    key={index}>\n            <TaskItem task={task} key={task.id} index={index} />\n          </li>\n        }\n      })\n      }\n    </ul>\n    <AddTask/>\n    </div>\n  )\n}\n\n\n\n  /* return(\n      <>\n      <div className='taskListHeader'>\n        <label>Unfinished tasks</label>\n        <label>Finished tasks</label>\n      </div>\n      \n      <div className=\"taskList\">\n        \n       \n        <div className='finished'>\n          <ul>\n            {allTasks.map((task, index) => {\n              if(task.completed){\n                return <li className='taskItem'\n                           key={index}>\n                  <TaskItem task={task} key={task.id} index={index} />\n                  </li>\n              }\n            })\n            }\n          </ul>\n          <AddTask/>\n        </div>\n    </div>\n    </>\n  )\n} */\n\n\nconst mapStateToProps = ({ allTasks: {allTasks} })=> ({allTasks});\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}