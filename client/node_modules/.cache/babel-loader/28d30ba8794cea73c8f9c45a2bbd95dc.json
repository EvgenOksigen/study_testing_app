{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/AddTask.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\nfunction useInputValue(defaultValue = '') {\n  const _useState = useState(defaultValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value)\n    },\n    clear: () => setValue(''),\n    value: () => value\n  };\n}\n\nconst AddTask = ({\n  createTask,\n  idColumn\n}) => {\n  const input = useInputValue('');\n\n  const formSubmit = (e, idColumn = idColumn) => {\n    e.preventDefault();\n    createTask(input.value(), idColumn);\n    input.clear();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"card-composer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"composer-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Create a task: \"), React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input.bind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Add \")));\n};\n\nconst mapDispatchToProps = {\n  createTask\n};\nexport default connect(null, mapDispatchToProps)(AddTask);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/AddTask.js"],"names":["React","useState","connect","createTask","useInputValue","defaultValue","value","setValue","bind","onChange","event","target","clear","AddTask","idColumn","input","formSubmit","e","preventDefault","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEC,SAASC,aAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2C;AAAA,oBAChBJ,QAAQ,CAACI,YAAD,CADQ;AAAA;AAAA,QACnCC,KADmC;AAAA,QAC5BC,QAD4B;;AAG1C,SAAM;AACJC,IAAAA,IAAI,EAAC;AACHF,MAAAA,KADG;AAEHG,MAAAA,QAAQ,EAAEC,KAAK,IAAGH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd;AAFvB,KADD;AAKJM,IAAAA,KAAK,EAAE,MAAKL,QAAQ,CAAC,EAAD,CALhB;AAMJD,IAAAA,KAAK,EAAE,MAAKA;AANR,GAAN;AAQA;;AAED,MAAMO,OAAO,GAAG,CAAC;AAACV,EAAAA,UAAD;AAAaW,EAAAA;AAAb,CAAD,KAA6B;AAE3C,QAAMC,KAAK,GAAGX,aAAa,CAAC,EAAD,CAA3B;;AAEA,QAAMY,UAAU,GAAG,CAACC,CAAD,EAAIH,QAAQ,GAACA,QAAb,KAA0B;AAC5CG,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,UAAU,CAACY,KAAK,CAACT,KAAN,EAAD,EAAgBQ,QAAhB,CAAV;AACAC,IAAAA,KAAK,CAACH,KAAN;AACA,GAJD;;AAMD,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAIE;AAAM,IAAA,QAAQ,EAAEI,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,+CAAWD,KAAK,CAACP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAJF,CADF;AAcA,CAxBD;;AA0BD,MAAMW,kBAAkB,GAAG;AAAEhB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCN,OAAlC,CAAf","sourcesContent":["import React, {useState}  from 'react'\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\n function useInputValue (defaultValue = '') {\n  const [value, setValue] = useState(defaultValue);\n\n  return{\n    bind:{\n      value,\n      onChange: event=> setValue(event.target.value)\n    },\n    clear: ()=> setValue(''),\n    value: ()=> value\n  }\n }\n\n const AddTask = ({createTask, idColumn}) =>  {\n \n   const input = useInputValue('')\n\n   const formSubmit = (e, idColumn=idColumn) => {\n    e.preventDefault();\n    createTask(input.value(), idColumn);\n    input.clear();\n   }\n\n  return (\n    <div className=\"card-composer\">\n\n      <label className=\"composer-title\">Create a task: </label>\n\n      <form onSubmit={formSubmit}>\n      \n        <input {...input.bind}/>\n      \n        <button type=\"submit\"> Add </button>\n      \n      </form>\n    </div>\n    )\n }\n\nconst mapDispatchToProps = { createTask };\n\nexport default connect(null, mapDispatchToProps)(AddTask);"]},"metadata":{},"sourceType":"module"}