{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/client/src/views/pages/Trello/TaskItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { swapToOtherColumn } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({\n  task,\n  column,\n  swapToOtherColumn\n}) => {\n  const clickHandler = e => {\n    swapToOtherColumn(column, task.id);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"task\",\n    id: task.id,\n    column: column,\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, task.title);\n}; // const mapStateToProps = ({ allTasks: { allTasks, taskList } }) => ({allTasks, taskList});\n\n\nconst mapDispatchToProps = {\n  swapToOtherColumn\n};\nexport default connect(null, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/client/src/views/pages/Trello/TaskItem.js"],"names":["React","connect","swapToOtherColumn","TaskItem","task","column","clickHandler","e","id","title","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,mCAAlC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,MAAP;AAAeH,EAAAA;AAAf,CAAD,KAAsC;AAErD,QAAMI,YAAY,GAAGC,CAAC,IAAG;AACvBL,IAAAA,iBAAiB,CAACG,MAAD,EAASD,IAAI,CAACI,EAAd,CAAjB;AACD,GAFD;;AAIA,SACA;AAAK,IAAA,SAAS,EAAC,MAAf;AACM,IAAA,EAAE,EAAEJ,IAAI,CAACI,EADf;AAEM,IAAA,MAAM,EAAEH,MAFd;AAGM,IAAA,OAAO,EAAEC,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKOF,IAAI,CAACK,KALZ,CADA;AASD,CAfD,C,CAiBA;;;AACA,MAAMC,kBAAkB,GAAG;AAAER,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { swapToOtherColumn } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({task, column, swapToOtherColumn}) =>{\n\n  const clickHandler = e =>{\n    swapToOtherColumn(column, task.id)\n  }\n\n  return(\n  <div className='task'\n        id={task.id}\n        column={column}\n        onClick={clickHandler}\n        >\n        {task.title}\n  </div>\n    )\n}\n\n// const mapStateToProps = ({ allTasks: { allTasks, taskList } }) => ({allTasks, taskList});\nconst mapDispatchToProps = { swapToOtherColumn };\n\nexport default connect(null, mapDispatchToProps)(TaskItem);"]},"metadata":{},"sourceType":"module"}