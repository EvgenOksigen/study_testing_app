{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { taskComplete } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({\n  task,\n  index,\n  taskComplete\n}) => {\n  const style = {\n    span: {\n      width: '200px',\n      padding: 0,\n      listStyleType: 'none' // textAlign:'left'\n\n    }\n  };\n  return React.createElement(\"span\", {\n    style: style.span,\n    id: task.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, index + 1, \" \", task.title, \" \", task.completed.toLocaleString());\n};\n\nconst mapDispatchToProps = {\n  taskComplete\n};\nexport default connect(null, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js"],"names":["React","connect","taskComplete","TaskItem","task","index","style","span","width","padding","listStyleType","id","title","completed","toLocaleString","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,mCAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcH,EAAAA;AAAd,CAAD,KAAgC;AAE/C,QAAMI,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAC;AACHC,MAAAA,KAAK,EAAC,OADH;AAEHC,MAAAA,OAAO,EAAC,CAFL;AAGHC,MAAAA,aAAa,EAAC,MAHX,CAIH;;AAJG;AADO,GAAd;AASA,SACA;AAAM,IAAA,KAAK,EAAEJ,KAAK,CAACC,IAAnB;AACM,IAAA,EAAE,EAAEH,IAAI,CAACO,EADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEON,KAAK,GAAC,CAFb,OAEiBD,IAAI,CAACQ,KAFtB,OAE8BR,IAAI,CAACS,SAAL,CAAeC,cAAf,EAF9B,CADA;AAMD,CAjBD;;AAoBA,MAAMC,kBAAkB,GAAG;AAAEb,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCZ,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport {taskComplete} from '../../../state/ducks/task/actions'\n\nconst TaskItem = ({task, index, taskComplete}) =>{\n\n  const style = {\n    span:{\n      width:'200px',\n      padding:0 ,\n      listStyleType:'none',\n      // textAlign:'left'\n    }\n  }\n  \n  return(\n  <span style={style.span}\n        id={task.id}>\n        {index+1} {task.title} {task.completed.toLocaleString()}\n  </span>\n    )\n}\n\n\nconst mapDispatchToProps = { taskComplete};\n\nexport default connect(null, mapDispatchToProps)(TaskItem);"]},"metadata":{},"sourceType":"module"}