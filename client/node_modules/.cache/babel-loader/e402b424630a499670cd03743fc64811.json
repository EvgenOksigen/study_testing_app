{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js\";\nimport React, { useState, useEffect } from 'react';\nimport './trello.css';\nimport Loader from './Loader';\nimport { connect } from 'react-redux';\nimport { initTask } from '../../../state/ducks/task/actions';\nimport Dashboard from './Dashboard';\n\nconst Trello = ({\n  initTask\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      initTask();\n      setLoading(false);\n    }, 2700);\n    return () => clearTimeout(timer);\n  }, [initTask]);\n  let dragFlag;\n  let shiftX;\n  let shiftY;\n\n  const divEnterHadler = e => {};\n\n  const divMouseDownHandler = e => {\n    dragFlag = true;\n    let dragItem = e.target.cloneNode(true);\n    e.target.closest('.testdnd').append(dragItem);\n    debug;\n    dragItem.hiden = true;\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function () {\n      return false;\n    };\n  };\n\n  const divMouseMoveHandler = e => {\n    if (dragFlag && e.target.tagName === 'SPAN') {\n      document.body.append(e.target);\n      e.target.className = 'dragable';\n      moveAt(e.pageX, e.pageY);\n    }\n\n    function moveAt(pageX, pageY) {\n      e.target.style.left = pageX - shiftX + 'px';\n      e.target.style.top = pageY - shiftY + 'px';\n    }\n  };\n\n  const divMouseUp = e => {\n    e.target.className = '';\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"testdnd\",\n    id: 1,\n    onMouseEnter: divEnterHadler,\n    onMouseDown: divMouseDownHandler,\n    onMouseMove: divMouseMoveHandler,\n    onMouseUp: divMouseUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"a\")), React.createElement(\"div\", {\n    className: \"testdnd\",\n    id: 2,\n    onMouseEnter: divEnterHadler,\n    onMouseDown: divMouseDownHandler,\n    onMouseMove: divMouseMoveHandler,\n    onMouseUp: divMouseUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"b\")))));\n};\n\nconst mapDispatchToProps = {\n  initTask\n};\nexport default connect(null, mapDispatchToProps)(Trello);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js"],"names":["React","useState","useEffect","Loader","connect","initTask","Dashboard","Trello","loading","setLoading","timer","setTimeout","clearTimeout","dragFlag","shiftX","shiftY","divEnterHadler","e","divMouseDownHandler","dragItem","target","cloneNode","closest","append","debug","hiden","clientX","getBoundingClientRect","left","clientY","top","ondragstart","divMouseMoveHandler","tagName","document","body","className","moveAt","pageX","pageY","style","divMouseUp","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './trello.css'\nimport Loader from './Loader'\nimport { connect } from 'react-redux'\nimport { initTask } from '../../../state/ducks/task/actions'\nimport Dashboard from './Dashboard'\n\nconst Trello = ({initTask}) => {\n  \n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      initTask();\n      setLoading(false)\n    }\n    , 2700);\n    return () => clearTimeout(timer);\n  }, [initTask]);\n\n  let dragFlag\n  let shiftX\n  let shiftY\n  const divEnterHadler = (e) => {\n  }\n  const divMouseDownHandler = (e) => {\n    dragFlag = true\n    let dragItem = e.target.cloneNode(true);\n\n    e.target.closest('.testdnd').append(dragItem)\n    debug\n    dragItem.hiden=true\n\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function() {\n      return false;\n    };\n  }\n  const divMouseMoveHandler = (e) => {\n    if(dragFlag && e.target.tagName==='SPAN'){\n      document.body.append(e.target);\n      \n      e.target.className = 'dragable'\n\n      moveAt(e.pageX, e.pageY);\n    }\n  function moveAt(pageX, pageY){\n    e.target.style.left = pageX - shiftX +'px'\n    e.target.style.top = pageY - shiftY +'px'\n  }\n}\nconst divMouseUp =e =>{\n  e.target.className = ''\n}\n\n\n  return (\n    <div className=\"dashboard-container\">\n      {loading ?  <Loader/> : (\n        <>\n          <h1 className='p-l-8'>Dashboard</h1>\n          <div className=\"dashboard-content\">\n            <Dashboard />\n            <div className='testdnd' id={1}\n                  onMouseEnter={divEnterHadler}\n                  onMouseDown={divMouseDownHandler}\n                  onMouseMove={divMouseMoveHandler}\n                  onMouseUp={divMouseUp}>\n              <span>\n                a\n              </span>\n            </div>\n            <div className='testdnd' id={2}\n                  onMouseEnter={divEnterHadler}\n                  onMouseDown={divMouseDownHandler}\n                  onMouseMove={divMouseMoveHandler}\n                  onMouseUp={divMouseUp}>\n              <span>\n                b\n              </span>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\n\n\nconst mapDispatchToProps = { initTask };\n\nexport default connect(null, mapDispatchToProps)(Trello);"]},"metadata":{},"sourceType":"module"}