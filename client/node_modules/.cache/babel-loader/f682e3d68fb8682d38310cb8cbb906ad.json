{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport { sort, deleteContact, edit, saveEdit } from \"../../state/ducks/search/actions\";\nimport { useState } from \"react\";\n\nconst ContactList = ({\n  data,\n  deleteContact,\n  edit,\n  saveEdit\n}) => {\n  //\n  const EditContact = ({\n    contact\n  }) => {\n    //\n    const _useState = useState(\"\"),\n          _useState2 = _slicedToArray(_useState, 2),\n          name = _useState2[0],\n          setName = _useState2[1];\n\n    const _useState3 = useState(\"\"),\n          _useState4 = _slicedToArray(_useState3, 2),\n          phone = _useState4[0],\n          setPhone = _useState4[1];\n\n    const nameInputHandler = e => {\n      console.log(name);\n      setName(e.target.value); // saveEdit(e.target.value);\n    };\n\n    const phoneInputHandler = e => {\n      setPhone(e.target.value); // saveEdit(e.target.value);\n    };\n\n    return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n      name: \"contactName\",\n      placeholder: \"Contact\",\n      onChange: inputHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"name\",\n      placeholder: `${contact.name}`,\n      onChange: nameInputHandler,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"phone\",\n      placeholder: `${contact.phoneNumber}`,\n      onChange: phoneInputHandler,\n      value: phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"contactList-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" Contact List\"), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, data.map((contact, index) => React.createElement(\"div\", {\n    key: index,\n    className: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, !contact.edit && React.createElement(\"p\", {\n    key: contact.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, index + 1, \" \", contact.name, \" : \", contact.phoneNumber), contact.edit && React.createElement(EditContact, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"contact-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => {\n      contact.edit ? edit(contact.id) : edit(contact.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, contact.edit ? React.createElement(\"i\", {\n    className: \"fas fa-save\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => {\n      deleteContact(contact.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })))))));\n};\n\nconst mapStateToProps = ({\n  contacts: {\n    data\n  }\n}) => ({\n  data\n});\n\nconst mapDispatchToProps = {\n  sort,\n  deleteContact,\n  edit,\n  saveEdit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ContactList/ContactList.jsx"],"names":["React","connect","sort","deleteContact","edit","saveEdit","useState","ContactList","data","EditContact","contact","name","setName","phone","setPhone","nameInputHandler","e","console","log","target","value","phoneInputHandler","inputHandle","phoneNumber","map","index","id","mapStateToProps","contacts","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./contactList_style.css\";\nimport {\n  sort,\n  deleteContact,\n  edit,\n  saveEdit\n} from \"../../state/ducks/search/actions\";\nimport { useState } from \"react\";\n\nconst ContactList = ({ data, deleteContact, edit, saveEdit }) => {\n  //\n  const EditContact = ({ contact }) => {\n    //\n\n    \n\n    const [name, setName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n\n    const nameInputHandler = e => {\n      console.log(name);\n      setName(e.target.value);\n      // saveEdit(e.target.value);\n    };\n\n    const phoneInputHandler = e => {\n      setPhone(e.target.value);\n\n      // saveEdit(e.target.value);\n    };\n\n    return (\n      <>\n      <input\n          name=\"contactName\"\n          placeholder=\"Contact\"\n          onChange={inputHandle}\n        />\n        <input\n          name=\"name\"\n          placeholder={`${contact.name}`}\n          onChange={nameInputHandler}\n          value={name}\n        ></input>\n        <input\n          name=\"phone\"\n          placeholder={`${contact.phoneNumber}`}\n          onChange={phoneInputHandler}\n          value={phone}\n        ></input>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"contactList-container\">\n      <h3> Contact List</h3>\n      <div className=\"\">\n        {data.map((contact, index) => (\n          <div key={index} className=\"contact\">\n            {!contact.edit && (\n              <p key={contact.id}>\n                {index + 1} {contact.name} : {contact.phoneNumber}\n              </p>\n            )}\n\n            {contact.edit && <EditContact contact={contact} />}\n\n            <div className=\"contact-buttons\">\n              <button\n                onClick={() => {\n                  contact.edit ? edit(contact.id) : edit(contact.id);\n                }}\n              >\n                {contact.edit ? (\n                  <i className=\"fas fa-save\"></i>\n                ) : (\n                  <i className=\"fas fa-edit\"></i>\n                )}\n              </button>\n              <button\n                onClick={() => {\n                  deleteContact(contact.id);\n                }}\n              >\n                <i className=\"fas fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { data } }) => ({ data });\n\nconst mapDispatchToProps = { sort, deleteContact, edit, saveEdit };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n"]},"metadata":{},"sourceType":"module"}