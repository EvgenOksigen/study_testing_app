{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js\";\nimport React, { useState } from 'react';\nimport TaskList from './TaskList';\nimport './trello.css';\nimport AddTask from './AddTask';\nimport Loader from './Loader';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\nconst Trello = ({\n  allTasks,\n  createTask\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const sleep = ms => new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n\n  sleep(2800).then(() => {\n    setLoading(false);\n    createTask('asd');\n  });\n\n  function addTask(title) {\n    allTasks.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"tasks-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Hello in TrELLO! \"), React.createElement(\"p\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Create a task: \"), React.createElement(AddTask, {\n    onCreate: addTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(TaskList, {\n    allTasks: allTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks\n  }\n}) => ({\n  allTasks\n});\n\nconst mapDispatchToProps = {\n  createTask\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Trello);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js"],"names":["React","useState","TaskList","AddTask","Loader","connect","createTask","Trello","allTasks","loading","setLoading","sleep","ms","Promise","resolve","setTimeout","then","addTask","title","concat","id","Date","now","completed","mapStateToProps","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA;AAAX,CAAD,KAA2B;AAAA,oBAEVL,QAAQ,CAAC,IAAD,CAFE;AAAA;AAAA,QAEjCQ,OAFiC;AAAA,QAExBC,UAFwB;;AAIxC,QAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAE;AACvCC,IAAAA,UAAU,CAAC,MAAM;AAACD,MAAAA,OAAO;AAAG,KAAlB,EAAoBF,EAApB,CAAV;AACD,GAFmB,CAApB;;AAIAD,EAAAA,KAAK,CAAC,IAAD,CAAL,CAAYK,IAAZ,CAAiB,MAAI;AACnBN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAQA,WAASW,OAAT,CAAiBC,KAAjB,EAAuB;AACrBV,IAAAA,QAAQ,CAACW,MAAT,CAAgB,CAAC;AACfD,MAAAA,KADe;AAEfE,MAAAA,EAAE,EAAGC,IAAI,CAACC,GAAL,EAFU;AAGfC,MAAAA,SAAS,EAAE;AAHI,KAAD,CAAhB;AAKD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,OAAO,GAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GACN,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,IAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEQ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAIT,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFJ,CADF;AAYD,CApCD;;AAuCA,MAAMgB,eAAe,GAAG,CAAC;AAAEhB,EAAAA,QAAQ,EAAE;AAAEA,IAAAA;AAAF;AAAZ,CAAD,MAAiC;AAAEA,EAAAA;AAAF,CAAjC,CAAxB;;AAEA,MAAMiB,kBAAkB,GAAG;AAAEnB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ClB,MAA7C,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport TaskList from './TaskList'\nimport './trello.css'\nimport AddTask from './AddTask'\nimport Loader from './Loader'\nimport { connect } from 'react-redux'\nimport { createTask } from '../../../state/ducks/task/actions'\n\nconst Trello = ({allTasks, createTask}) =>{\n\n  const [loading, setLoading] = useState(true)\n\n  const sleep = ms => new Promise(resolve=>{\n    setTimeout(() => {resolve()}, ms);\n  })\n\n  sleep(2800).then(()=>{\n    setLoading(false)\n    createTask('asd');\n  }\n);\n\n  \n\n  function addTask(title){\n    allTasks.concat([{\n      title,\n      id : Date.now(),\n      completed: false\n    }])\n  }\n\n  return (\n    <div className=\"tasks-dashboard\">\n      {loading ?  <Loader/> : (\n        <>\n          <h3> Hello in TrELLO! </h3>\n          <p className=\"\">Create a task: </p>\n          <AddTask onCreate={addTask} />\n          <TaskList allTasks = {allTasks}/>\n        </>\n      )}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks: { allTasks } }) => ({ allTasks });\n\nconst mapDispatchToProps = { createTask };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trello);"]},"metadata":{},"sourceType":"module"}