{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\nimport { dragItemToColumn, swapToOtherColumn } from '../../../state/ducks/task/actions';\n\nconst TaskList = ({\n  taskItems,\n  title,\n  id,\n  dragItemToColumn,\n  swapToOtherColumn\n}) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false;\n  let shiftX;\n  let shiftY;\n  let oldParent;\n\n  const liEnterHandler = e => {\n    if (e.target.tagName !== \"LI\") {\n      return;\n    } else {\n      e.target.className = 'taskItem active';\n    }\n  };\n\n  const liLeaveHandler = e => {\n    e.target.className = 'taskItem';\n    readyToDragFlag = false;\n    e.target.parentNode.style.className = '';\n  };\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true;\n    oldParent = e.target.parentNode;\n    let oldestParent = oldParent.parentNode;\n    debugger;\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function () {\n      return false;\n    };\n  };\n\n  const liMouseMoveHandler = e => {\n    if (readyToDragFlag) {\n      moveAt(e.pageX, e.pageY);\n      e.target.className = 'taskItem ui droppable';\n      oldParent.className = 'placeholder';\n      root.append(e.target);\n      e.target.hidden = true;\n      let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n      e.target.hidden = false;\n      let droppableBelow = elemBelow.closest('.task-list-wrapper');\n      if (!elemBelow) return;\n\n      if (parseInt(droppableBelow.id) !== id) {\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent);\n        oldParent.hidden = false;\n      } else {\n        oldParent.hidden = false;\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent);\n      }\n    }\n\n    function moveAt(pageX, pageY) {\n      e.target.style.left = pageX - shiftX + 'px';\n      e.target.style.top = pageY - shiftY + 'px';\n    }\n  };\n\n  const liMouseUpHandler = e => {\n    readyToDragFlag = false;\n    e.target.hidden = true;\n    let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n    e.target.hidden = false;\n\n    if (parseInt(elemBelow.id) === id) {\n      elemBelow.getElementsByTagName('ul')[0].append(oldParent);\n      oldParent.append(e.target);\n    } else {\n      swapToOtherColumn(elemBelow.id, e.target.id, e.target.attributes['column'].value);\n      e.target.remove();\n      oldParent.remove();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"task-list-wrapper\",\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    id: id,\n    className: `${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, taskItems.map((task, index) => {\n    return React.createElement(\"div\", {\n      key: task.id,\n      index: index + 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: index,\n      index: index + 1,\n      className: \"taskItem\",\n      onMouseEnter: liEnterHandler,\n      onMouseLeave: liLeaveHandler,\n      onMouseDown: liMouseDownHandler,\n      onMouseMove: liMouseMoveHandler,\n      onMouseUp: liMouseUpHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(TaskItem, {\n      task: task,\n      key: task.id,\n      index: index,\n      column: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  })), React.createElement(AddTask, {\n    idColumn: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    taskList\n  }\n}) => ({\n  taskList\n});\n\nconst mapDispatchToProps = {\n  dragItemToColumn,\n  swapToOtherColumn\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","dragItemToColumn","swapToOtherColumn","TaskList","taskItems","title","id","root","document","getElementById","readyToDragFlag","shiftX","shiftY","oldParent","liEnterHandler","e","target","tagName","className","liLeaveHandler","parentNode","style","liMouseDownHandler","oldestParent","clientX","getBoundingClientRect","left","clientY","top","ondragstart","liMouseMoveHandler","moveAt","pageX","pageY","append","hidden","elemBelow","elementFromPoint","closest","droppableBelow","parseInt","getElementsByTagName","liMouseUpHandler","attributes","value","remove","toLowerCase","match","toLocaleString","replace","map","task","index","mapStateToProps","allTasks","taskList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\nimport { dragItemToColumn, swapToOtherColumn } from '../../../state/ducks/task/actions';\n\n\nconst TaskList = ( { taskItems, title, id, dragItemToColumn,swapToOtherColumn } ) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false\n  let shiftX\n  let shiftY\n  let oldParent\n\n  const liEnterHandler = e => {\n    if(e.target.tagName !== \"LI\"){\n      return;\n    }else{\n      e.target.className='taskItem active' \n    }\n  }\n\n  const liLeaveHandler = e => {\n    e.target.className='taskItem'\n    readyToDragFlag = false\n    e.target.parentNode.style.className=''\n  }\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true\n\n    oldParent = e.target.parentNode;\n    let oldestParent = oldParent.parentNode\n    debugger\n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function() {\n      return false;\n    };\n  }\n\n  const liMouseMoveHandler = e => {\n    if(readyToDragFlag){\n      moveAt(e.pageX, e.pageY);\n      \n      e.target.className = 'taskItem ui droppable'\n      \n      oldParent.className='placeholder'\n\n      root.append(e.target);\n      \n      e.target.hidden = true;\n      let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n      e.target.hidden = false;\n\n      let droppableBelow = elemBelow.closest('.task-list-wrapper');\n\n      if (!elemBelow) return;\n\n      if(parseInt(droppableBelow.id) !== id){\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent)\n        oldParent.hidden=false\n      }\n      else{\n        oldParent.hidden=false\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent)\n      }\n      \n    }\n    \n    function moveAt(pageX, pageY){\n      e.target.style.left = pageX - shiftX +'px'\n      e.target.style.top = pageY - shiftY +'px'\n    }\n\n  }\n\n  const liMouseUpHandler = e =>{\n    readyToDragFlag = false   \n    e.target.hidden = true;\n    let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n    e.target.hidden = false;\n\n    if(parseInt(elemBelow.id) === id){\n      elemBelow.getElementsByTagName('ul')[0].append(oldParent)\n      oldParent.append(e.target)\n      }else{\n      swapToOtherColumn(elemBelow.id, e.target.id, (e.target.attributes['column'].value))\n      e.target.remove()\n      oldParent.remove()\n    }\n\n  }\n  \n\n  \n  return (\n    <div className=\"task-list-wrapper\"\n          id={id}>\n      <div className=\"task-list\">\n        <>\n          <h4 className='p-l-8'>{title}</h4>\n        <div id={id}\n             className={`${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`}>\n          <ul>\n            {taskItems.map((task, index) => {\n              return (\n                <div key={task.id} \n                     index={index+1}>\n                  <li key={index}\n                      index={index+1} \n                      className='taskItem'\n                      onMouseEnter={liEnterHandler}\n                      onMouseLeave={liLeaveHandler}\n                      onMouseDown={liMouseDownHandler}\n                      onMouseMove={liMouseMoveHandler}\n                      onMouseUp={liMouseUpHandler}\n                      >\n                        <TaskItem task={task} \n                                  key={task.id} \n                                  index={index} \n                                  column={id}/>\n                  </li>\n                </div>\n              )\n            })\n            }\n          </ul>\n          <AddTask idColumn={id}/>\n        </div>\n        </>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ allTasks:{ taskList } })=> ({taskList});\n\nconst mapDispatchToProps = { dragItemToColumn, swapToOtherColumn };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);"]},"metadata":{},"sourceType":"module"}