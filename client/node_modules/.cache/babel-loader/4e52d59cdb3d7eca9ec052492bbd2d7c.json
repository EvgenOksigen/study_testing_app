{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/AddTask.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\nfunction useInputValue(defaultValue = '') {\n  const _useState = useState(defaultValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return {\n    bind: {\n      value,\n      onChange: event => setValue(event.target.value)\n    },\n    clear: () => setValue(''),\n    value: () => value\n  };\n}\n\nconst AddTask = () => {\n  const input = useInputValue('');\n\n  function formSubmit(e) {\n    e.preventDefault();\n    console.log(input.value());\n    console.log(createTask());\n\n    if (input.value().trim()) {\n      input.clear();\n    }\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: formSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", Object.assign({}, input.bind, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Add \"));\n}; // const mapStateToProps = ({ allTasks: { allTasks } }) => ({ allTasks });\n\n\nconst mapDispatchToProps = {\n  createTask\n};\nexport default connect(null, mapDispatchToProps)(AddTask);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/AddTask.js"],"names":["React","useState","connect","createTask","useInputValue","defaultValue","value","setValue","bind","onChange","event","target","clear","AddTask","input","formSubmit","e","preventDefault","console","log","trim","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEC,SAASC,aAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2C;AAAA,oBAChBJ,QAAQ,CAACI,YAAD,CADQ;AAAA;AAAA,QACnCC,KADmC;AAAA,QAC5BC,QAD4B;;AAG1C,SAAM;AACJC,IAAAA,IAAI,EAAC;AACHF,MAAAA,KADG;AAEHG,MAAAA,QAAQ,EAAEC,KAAK,IAAGH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd;AAFvB,KADD;AAKJM,IAAAA,KAAK,EAAE,MAAKL,QAAQ,CAAC,EAAD,CALhB;AAMJD,IAAAA,KAAK,EAAE,MAAKA;AANR,GAAN;AAQA;;AAED,MAAMO,OAAO,GAAG,MAAO;AAErB,QAAMC,KAAK,GAAGV,aAAa,CAAC,EAAD,CAA3B;;AAEA,WAASW,UAAT,CAAoBC,CAApB,EAAsB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACR,KAAN,EAAZ;AAGAY,IAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAU,EAAtB;;AACA,QAAGW,KAAK,CAACR,KAAN,GAAcc,IAAd,EAAH,EAAwB;AAEtBN,MAAAA,KAAK,CAACF,KAAN;AACD;AACF;;AAEF,SACE;AAAM,IAAA,QAAQ,EAAEG,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,+CAAWD,KAAK,CAACN,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAOA,CAvBD,C,CAyBD;;;AAEA,MAAMa,kBAAkB,GAAG;AAAElB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCR,OAAlC,CAAf","sourcesContent":["import React, {useState}  from 'react'\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\n function useInputValue (defaultValue = '') {\n  const [value, setValue] = useState(defaultValue);\n\n  return{\n    bind:{\n      value,\n      onChange: event=> setValue(event.target.value)\n    },\n    clear: ()=> setValue(''),\n    value: ()=> value\n  }\n }\n\n const AddTask = () =>  {\n\n   const input = useInputValue('')\n\n   function formSubmit(e){\n     e.preventDefault();\n     console.log(input.value());\n     \n\n     console.log(createTask());\n     if(input.value().trim()){\n\n       input.clear()\n     }\n   }\n\n  return (\n    <form onSubmit={formSubmit}>\n      <input {...input.bind}/>\n      <button type=\"submit\"> Add </button>\n      </form>\n\n    )\n }\n\n// const mapStateToProps = ({ allTasks: { allTasks } }) => ({ allTasks });\n \nconst mapDispatchToProps = { createTask };\n\nexport default connect(null, mapDispatchToProps)(AddTask);"]},"metadata":{},"sourceType":"module"}