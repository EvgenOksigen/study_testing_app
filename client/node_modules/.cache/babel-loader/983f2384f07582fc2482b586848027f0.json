{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask';\n\nconst TaskList = ({\n  title,\n  id,\n  allTasks\n}) => {\n  console.log(allTasks);\n  return React.createElement(\"div\", {\n    className: \"task-list-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"task-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    id: id,\n    className: `${title.toLowerCase()} task-list-container`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, allTasks.map((task, index) => {\n    if (task.status === id) {\n      return React.createElement(\"li\", {\n        className: \"taskItem\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(TaskItem, {\n        task: task,\n        key: task.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }\n  })), React.createElement(AddTask, {\n    idColumn: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    taskList,\n    allTasks\n  }\n}) => ({\n  taskList,\n  allTasks\n});\n\nexport default connect(mapStateToProps, null)(TaskList);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskList.js"],"names":["React","TaskItem","connect","AddTask","TaskList","title","id","allTasks","console","log","toLowerCase","map","task","index","status","mapStateToProps","taskList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAACC,EAAAA,KAAD;AAAQC,EAAAA,EAAR;AAAYC,EAAAA;AAAZ,CAAF,KAA8B;AAE7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADJ,EAEE;AAAK,IAAA,EAAE,EAAEC,EAAT;AACK,IAAA,SAAS,EAAG,GAAED,KAAK,CAACK,WAAN,EAAoB,sBADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,QAAGD,IAAI,CAACE,MAAL,KAAgBR,EAAnB,EAAsB;AACpB,aAAO;AAAI,QAAA,SAAS,EAAC,UAAd;AACP,QAAA,GAAG,EAAEO,KADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEL,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAED,IAAhB;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACN,EAAhC;AAAoC,QAAA,KAAK,EAAEO,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFK,CAAP;AAID;AACF,GAPA,CADH,CAFF,EAaE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEP,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAFF,CADF,CADF;AAsBD,CA1BD;;AA6BA,MAAMS,eAAe,GAAG,CAAC;AAAER,EAAAA,QAAQ,EAAE;AAACS,IAAAA,QAAD;AAAWT,IAAAA;AAAX;AAAZ,CAAD,MAAwC;AAACS,EAAAA,QAAD;AAAWT,EAAAA;AAAX,CAAxC,CAAxB;;AAEA,eAAeL,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BX,QAA/B,CAAf","sourcesContent":["import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\n\nconst TaskList = ( {title, id, allTasks } ) => {\n  \n  console.log(allTasks);\n\n  return (\n    <div className=\"task-list-wrapper\">\n      <div className=\"task-list\">\n          <h3>{title}</h3>\n        <div id={id}\n             className={`${title.toLowerCase()} task-list-container`}>\n          <ul>\n            {allTasks.map((task, index) => {\n              if(task.status === id){\n                return <li className='taskItem'\n                key={index}>\n                  <TaskItem task={task} key={task.id} index={index} />\n                </li>\n              }\n            })\n          }\n          </ul>\n          <AddTask idColumn={id}/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks: {taskList, allTasks} })=> ({taskList, allTasks});\n\nexport default connect(mapStateToProps, null)(TaskList);"]},"metadata":{},"sourceType":"module"}