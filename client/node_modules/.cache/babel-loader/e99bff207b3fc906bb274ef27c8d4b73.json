{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getWeather } from '../state/ducks/forms/actions';\n\nconst ReduxTest = (_ref) => {\n  let getWeather = _ref.getWeather,\n      data = _ref.data,\n      temp = _ref.temp,\n      props = _objectWithoutProperties(_ref, [\"getWeather\", \"data\", \"temp\"]);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        cityvalue = _useState2[0],\n        setCityValue = _useState2[1];\n\n  const inputHandle = e => {\n    setCityValue(e.target.value);\n  };\n\n  const t = temp;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" redux test in console\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"city\",\n    value: cityvalue,\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => getWeather(cityvalue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Get Weater\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Name : \", temp)));\n};\n\nconst mapStateToProps = ({\n  forms\n}) => ({\n  isShow: forms.isShowing,\n  city: forms.name,\n  data: forms.data,\n  temp: forms.temp\n});\n\nconst mapDispatchToProps = {\n  getWeather\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxTest);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/ReduxTest.js"],"names":["React","useState","connect","getWeather","ReduxTest","data","temp","props","cityvalue","setCityValue","inputHandle","e","target","value","t","mapStateToProps","forms","isShow","isShowing","city","name","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAGA,MAAMC,SAAS,GAAG,UAAyC;AAAA,MAAtCD,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BE,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAXC,KAAW;;AAAA,oBAEvBN,QAAQ,CAAC,EAAD,CAFe;AAAA;AAAA,QAElDO,SAFkD;AAAA,QAEvCC,YAFuC;;AAIzD,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,YAAY,CAAEE,CAAC,CAACC,MAAF,CAASC,KAAX,CAAZ;AACD,GAFD;;AAIA,QAAMC,CAAC,GAAER,IAAT;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACA,IAAA,KAAK,EAAEE,SADP;AAEO,IAAA,QAAQ,EAAEE,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAQ,IAAA,OAAO,EAAE,MAAIP,UAAU,CAACK,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWF,IAAX,CATF,CADK,CAAP;AAaD,CAvBD;;AAyBA,MAAMS,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAgB;AACtCC,EAAAA,MAAM,EAAED,KAAK,CAACE,SADwB;AAEtCC,EAAAA,IAAI,EAAEH,KAAK,CAACI,IAF0B;AAGtCf,EAAAA,IAAI,EAAEW,KAAK,CAACX,IAH0B;AAItCC,EAAAA,IAAI,EAAEU,KAAK,CAACV;AAJ0B,CAAhB,CAAxB;;AAOA,MAAMe,kBAAkB,GAAG;AAAElB,EAAAA;AAAF,CAA3B;AAIA,eAAeD,OAAO,CAACa,eAAD,EAAkBM,kBAAlB,CAAP,CAA8CjB,SAA9C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport {connect} from 'react-redux';\nimport { getWeather } from '../state/ducks/forms/actions';\n\n\nconst ReduxTest = ({ getWeather, data, temp, ...props })=> {\n\n  const [cityvalue, setCityValue] = useState(\"\");\n\n  const inputHandle = (e) => {\n    setCityValue( e.target.value );\n  }\n\n  const t= temp;\n\n  return <div> redux test in console\n    <div>\n      <input name='city' \n      value={cityvalue}\n             onChange={inputHandle}\n             >\n      </input>\n      <button onClick={()=>getWeather(cityvalue)}>\n        Get Weater\n      </button>\n      <p>Name : {temp}</p>\n    </div>\n  </div>\n}\n\nconst mapStateToProps = ({ forms }) => ({\n  isShow: forms.isShowing,\n  city: forms.name,\n  data: forms.data,\n  temp: forms.temp\n})\n\nconst mapDispatchToProps = { getWeather };\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps )(ReduxTest);"]},"metadata":{},"sourceType":"module"}