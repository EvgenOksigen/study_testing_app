{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js\";\nimport React, { useState } from 'react';\nimport TaskList from './TaskList';\nimport './trello.css';\nimport AddTask from './AddTask';\nimport Loader from './Loader';\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\nconst Trello = () => {\n  console.log(allTasks);\n\n  const _useState = useState([{\n    id: 0,\n    title: 'Create 1',\n    completed: false\n  }, {\n    id: 1,\n    title: 'Move 2',\n    completed: false\n  }, {\n    id: 2,\n    title: 'Done! 3',\n    completed: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allTasks = _useState2[0],\n        setAllTasks = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const sleep = ms => new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n\n  sleep(2800).then(() => setLoading(false));\n\n  function addTask(title) {\n    setAllTasks(allTasks.concat([{\n      title,\n      id: Date.now(),\n      completed: false\n    }]));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"tasks-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" Hello in TrELLO! \"), React.createElement(\"p\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Create a task: \"), React.createElement(AddTask, {\n    onCreate: addTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(TaskList, {\n    allTasks: allTasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks\n  }\n}) => ({});\n\nconst mapDispatchToProps = {\n  createTask\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Trello);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js"],"names":["React","useState","TaskList","AddTask","Loader","connect","createTask","Trello","console","log","allTasks","id","title","completed","setAllTasks","loading","setLoading","sleep","ms","Promise","resolve","setTimeout","then","addTask","concat","Date","now","mapStateToProps","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,MAAM,GAAG,MAAK;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AADkB,oBAGcT,QAAQ,CAAC,CACvC;AAACU,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,UAAf;AAA2BC,IAAAA,SAAS,EAAE;AAAtC,GADuC,EAEvC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,QAAf;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAFuC,EAGvC;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,KAAK,EAAE,SAAf;AAA0BC,IAAAA,SAAS,EAAE;AAArC,GAHuC,CAAD,CAHtB;AAAA;AAAA,QAGXH,QAHW;AAAA,QAGDI,WAHC;;AAAA,qBASYb,QAAQ,CAAC,IAAD,CATpB;AAAA;AAAA,QASXc,OATW;AAAA,QASFC,UATE;;AAWlB,QAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAE;AACvCC,IAAAA,UAAU,CAAC,MAAM;AAACD,MAAAA,OAAO;AAAG,KAAlB,EAAoBF,EAApB,CAAV;AACD,GAFmB,CAApB;;AAIAD,EAAAA,KAAK,CAAC,IAAD,CAAL,CAAYK,IAAZ,CAAiB,MAAIN,UAAU,CAAC,KAAD,CAA/B;;AAGA,WAASO,OAAT,CAAiBX,KAAjB,EAAuB;AACrBE,IAAAA,WAAW,CAACJ,QAAQ,CAACc,MAAT,CAAgB,CAAC;AAC3BZ,MAAAA,KAD2B;AAE3BD,MAAAA,EAAE,EAAGc,IAAI,CAACC,GAAL,EAFsB;AAG3Bb,MAAAA,SAAS,EAAE;AAHgB,KAAD,CAAhB,CAAD,CAAX;AAKD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,GAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GACN,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,IAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEQ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAIb,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFJ,CADF;AAYD,CAtCD;;AAyCA,MAAMiB,eAAe,GAAG,CAAC;AAAEjB,EAAAA,QAAQ,EAAE;AAAEA,IAAAA;AAAF;AAAZ,CAAD,MAAiC,EAAjC,CAAxB;;AAEA,MAAMkB,kBAAkB,GAAG;AAAEtB,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,MAA7C,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport TaskList from './TaskList'\nimport './trello.css'\nimport AddTask from './AddTask'\nimport Loader from './Loader'\nimport { connect } from 'react-redux'\nimport { createTask } from '../../../state/ducks/task/actions'\n\nconst Trello = () =>{\n  console.log(allTasks);\n  \n  const [allTasks, setAllTasks] = useState([\n    {id: 0, title: 'Create 1', completed: false },\n    {id: 1, title: 'Move 2', completed: false },\n    {id: 2, title: 'Done! 3', completed: false }\n  ])\n\n  const [loading, setLoading] = useState(true)\n\n  const sleep = ms => new Promise(resolve=>{\n    setTimeout(() => {resolve()}, ms);\n  })\n\n  sleep(2800).then(()=>setLoading(false));\n\n\n  function addTask(title){\n    setAllTasks(allTasks.concat([{\n      title,\n      id : Date.now(),\n      completed: false\n    }]))\n  }\n\n  return (\n    <div className=\"tasks-dashboard\">\n      {loading ?  <Loader/> : (\n        <>\n          <h3> Hello in TrELLO! </h3>\n          <p className=\"\">Create a task: </p>\n          <AddTask onCreate={addTask} />\n          <TaskList allTasks = {allTasks}/>\n        </>\n      )}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({ allTasks: { allTasks } }) => ({  });\n\nconst mapDispatchToProps = { createTask };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trello);"]},"metadata":{},"sourceType":"module"}