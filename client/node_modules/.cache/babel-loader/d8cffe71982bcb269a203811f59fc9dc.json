{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/Search/Search.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Info from \"../Info/Info\";\nimport \"./search_style.css\";\n\nconst Search = ({\n  contacts\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        contactName = _useState2[0],\n        setcontactName = _useState2[1];\n\n  const inputHandle = e => {\n    setcontactName(e.target.value);\n    console.log(contacts.find(item => {\n      let findItems = [];\n      findItems = item.name.includes(`${e.target.value}`);\n      return findItems;\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"contactName\",\n    placeholder: \"Contact\",\n    value: contactName,\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = ({\n  search: {\n    contacts\n  }\n}) => ({\n  contacts\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/Search/Search.jsx"],"names":["React","useState","connect","Info","Search","contacts","contactName","setcontactName","inputHandle","e","target","value","console","log","find","item","findItems","name","includes","mapStateToProps","search","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACOJ,QAAQ,CAAC,EAAD,CADf;AAAA;AAAA,QACxBK,WADwB;AAAA,QACXC,cADW;;AAG/B,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvBF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CACER,QAAQ,CAACS,IAAT,CAAcC,IAAI,IAAI;AACpB,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,QAAV,CAAoB,GAAET,CAAC,CAACC,MAAF,CAASC,KAAM,EAArC,CAAZ;AACA,aAAOK,SAAP;AACD,KAJD,CADF;AAOD,GATD;;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAEV,WAHT;AAIE,IAAA,QAAQ,EAAEE,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAaD,CA3BD;;AA6BA,MAAMW,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEf,IAAAA;AAAF;AAAV,CAAD,MAA+B;AAAEA,EAAAA;AAAF,CAA/B,CAAxB;;AAEA,MAAMgB,kBAAkB,GAAG,EAA3B;AAEA,eAAenB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,MAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Info from \"../Info/Info\";\nimport \"./search_style.css\";\n\nconst Search = ({ contacts }) => {\n  const [contactName, setcontactName] = useState(\"\");\n\n  const inputHandle = e => {\n    setcontactName(e.target.value);\n    console.log(\n      contacts.find(item => {\n        let findItems = [];\n        findItems = item.name.includes(`${e.target.value}`);\n        return findItems;\n      })\n    );\n  };\n\n  return (\n    <div className=\"search-container\">\n      <Info />\n      <div className=\"search\">\n        <input\n          name=\"contactName\"\n          placeholder=\"Contact\"\n          value={contactName}\n          onChange={inputHandle}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ search: { contacts } }) => ({ contacts });\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}