{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst TaskItem = ({\n  task,\n  column,\n  allTasks,\n  taskList\n}) => {\n  const dragNDrop = e => {\n    const dragItem = e.target.parentNode;\n\n    dragItem.ondragstart = function () {\n      return false;\n    };\n\n    dragItem.onmousedown = e => {\n      const currentDroppableId = dragItem.firstChild.attributes['column'].value;\n      console.log(currentDroppableId);\n      console.log(e.target.id);\n      dragItem.style.position = 'absolute';\n      dragItem.style.zIndex = 1000;\n      let shiftX = e.clientX - dragItem.getBoundingClientRect().left;\n      let shiftY = e.clientY - dragItem.getBoundingClientRect().top;\n      document.body.append(dragItem);\n      moveAt(e.pageX, e.pageY);\n\n      function moveAt(pageX, pageY) {\n        dragItem.style.left = pageX - shiftX + 'px';\n        dragItem.style.top = pageY - shiftY + 'px';\n      }\n\n      function onMouseMove(e) {\n        moveAt(e.pageX, e.pageY);\n        dragItem.style.transform = 'rotate(3deg)';\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        if (!elemBelow) return;\n      }\n\n      document.addEventListener('mousemove', onMouseMove);\n\n      dragItem.onmouseup = e => {\n        //\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false; // let droppableBelow = elemBelow.closest(`.${dragItem.id}`);\n\n        if (elemBelow.id === currentDroppableId) {\n          if (elemBelow.className === 'task-list-wrapper') {\n            dragItem.style.position = '';\n            dragItem.style.left = '';\n            dragItem.style.top = '';\n            dragItem.style.zIndex = '';\n            dragItem.style.transform = '';\n            elemBelow.children[0].children[1].children[0].append(dragItem);\n          }\n        } else {\n          if (elemBelow.id !== currentDroppableId) {\n            console.log([...allTasks][dragItem.firstChild.id]);\n            taskList[elemBelow.id].tasks.push([...allTasks][dragItem.firstChild.id]);\n            console.log(taskList[1]);\n          }\n        }\n\n        document.removeEventListener('mousemove', onMouseMove);\n        dragItem.onmouseup = null;\n      };\n    }; // function enterDroppable(elem) {\n    //   elem.style.background = '#afe892';\n    // }\n    // function enterDroppableBack(elem) {\n    //   elem.style.background = 'pink';\n    // }\n    // function leaveDroppable(elem) {\n    //   elem.style.background = '';\n    // }\n\n  };\n\n  const style = {\n    span: {\n      display: 'block',\n      maxWidth: '250px',\n      width: '100%'\n    }\n  };\n  return React.createElement(\"span\", {\n    className: \"task-item\",\n    style: style.span,\n    onMouseOver: dragNDrop,\n    id: task.id,\n    column: column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, task.title);\n};\n\nconst mapStateToProps = ({\n  allTasks: {\n    allTasks,\n    taskList\n  }\n}) => ({\n  allTasks,\n  taskList\n}); // const mapDispatchToProps = { };\n\n\nexport default connect(mapStateToProps, null)(TaskItem);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/TaskItem.js"],"names":["React","connect","TaskItem","task","column","allTasks","taskList","dragNDrop","e","dragItem","target","parentNode","ondragstart","onmousedown","currentDroppableId","firstChild","attributes","value","console","log","id","style","position","zIndex","shiftX","clientX","getBoundingClientRect","left","shiftY","clientY","top","document","body","append","moveAt","pageX","pageY","onMouseMove","transform","hidden","elemBelow","elementFromPoint","addEventListener","onmouseup","className","children","tasks","push","removeEventListener","span","display","maxWidth","width","title","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\n\nconst TaskItem = ({task, column, allTasks, taskList}) =>{\n  const dragNDrop = (e) => {\n    const dragItem = e.target.parentNode;\n    \n    dragItem.ondragstart = function() {\n      return false;\n    };\n    \n    dragItem.onmousedown = e => {\n      const currentDroppableId = dragItem.firstChild.attributes['column'].value;\n      console.log(currentDroppableId);\n      console.log(e.target.id);\n      \n      dragItem.style.position = 'absolute'\n      dragItem.style.zIndex = 1000;\n      \n      let shiftX = e.clientX - dragItem.getBoundingClientRect().left;\n      let shiftY = e.clientY - dragItem.getBoundingClientRect().top;\n      \n      document.body.append(dragItem);\n\n      moveAt(e.pageX, e.pageY);\n      \n      function moveAt(pageX, pageY){\n        dragItem.style.left = pageX - shiftX +'px'\n        dragItem.style.top = pageY - shiftY +'px'\n      }\n  \n      function onMouseMove(e) {\n        moveAt(e.pageX, e.pageY);\n        dragItem.style.transform = 'rotate(3deg)'\n\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n  \n        if (!elemBelow) return;\n        \n      }\n  \n      document.addEventListener('mousemove', onMouseMove);\n  \n      dragItem.onmouseup = (e) => {\n        //\n        dragItem.hidden = true;\n        let elemBelow = document.elementFromPoint(e.clientX, e.clientY);\n        dragItem.hidden = false;\n        \n        // let droppableBelow = elemBelow.closest(`.${dragItem.id}`);\n\n        if (elemBelow.id === currentDroppableId) {\n          if(elemBelow.className === 'task-list-wrapper') {\n            dragItem.style.position = ''\n            dragItem.style.left = ''\n            dragItem.style.top = ''\n            dragItem.style.zIndex = '';\n            dragItem.style.transform = ''\n            elemBelow.children[0].children[1].children[0].append(dragItem)\n          }\n        } else { \n          if(elemBelow.id !== currentDroppableId){\n            console.log([...allTasks][dragItem.firstChild.id]);\n            taskList[elemBelow.id].tasks\n              .push([...allTasks][dragItem.firstChild.id])\n            console.log(taskList[1]);\n            \n          }\n        }\n\n  \n          document.removeEventListener('mousemove', onMouseMove);\n          dragItem.onmouseup = null;\n  \n      };\n    }\n    \n    // function enterDroppable(elem) {\n    //   elem.style.background = '#afe892';\n    // }\n  \n    // function enterDroppableBack(elem) {\n    //   elem.style.background = 'pink';\n    // }\n    \n    // function leaveDroppable(elem) {\n    //   elem.style.background = '';\n    // }\n\n  }\n\n  \n  const style = {\n    span:{\n      display: 'block',\n      maxWidth:'250px',\n      width:'100%',\n    }\n  }\n  \n  return(\n  <span className='task-item'\n      style={style.span}\n      onMouseOver={dragNDrop}\n      id={task.id}\n      column={column}\n      >\n        {task.title}\n  </span>\n    )\n}\n\nconst mapStateToProps = ({ allTasks: { allTasks, taskList } }) => ({allTasks, taskList});\n// const mapDispatchToProps = { };\n\nexport default connect(mapStateToProps, null)(TaskItem);"]},"metadata":{},"sourceType":"module"}