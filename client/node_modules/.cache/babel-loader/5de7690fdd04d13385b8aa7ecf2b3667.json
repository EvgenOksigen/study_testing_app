{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js\";\nimport React, { useState, useEffect } from 'react';\nimport './trello.css';\nimport Loader from './Loader';\nimport { connect } from 'react-redux';\nimport { initTask } from '../../../state/ducks/task/actions';\nimport Dashboard from './Dashboard';\n\nconst Trello = ({\n  initTask\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      initTask();\n      setLoading(false);\n    }, 2700);\n    return () => clearTimeout(timer);\n  }, [initTask]);\n  return React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"p-l-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"a\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"b\"))));\n};\n\nconst mapDispatchToProps = {\n  initTask\n};\nexport default connect(null, mapDispatchToProps)(Trello);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js"],"names":["React","useState","useEffect","Loader","connect","initTask","Dashboard","Trello","loading","setLoading","timer","setTimeout","clearTimeout","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAgB;AAAA,oBAECJ,QAAQ,CAAC,IAAD,CAFT;AAAA;AAAA,QAEtBO,OAFsB;AAAA,QAEbC,UAFa;;AAI7BP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BN,MAAAA,QAAQ;AACRI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHuB,EAItB,IAJsB,CAAxB;AAKA,WAAO,MAAMG,YAAY,CAACF,KAAD,CAAzB;AACD,GAPQ,EAON,CAACL,QAAD,CAPM,CAAT;AASA,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,GAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GACN,0CACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CAFF,CAFJ,CADF;AAeD,CA5BD;;AAgCA,MAAMK,kBAAkB,GAAG;AAAER,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCN,MAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './trello.css'\nimport Loader from './Loader'\nimport { connect } from 'react-redux'\nimport { initTask } from '../../../state/ducks/task/actions'\nimport Dashboard from './Dashboard'\n\nconst Trello = ({initTask}) => {\n  \n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      initTask();\n      setLoading(false)\n    }\n    , 2700);\n    return () => clearTimeout(timer);\n  }, [initTask]);\n\n  return (\n    <div className=\"dashboard-container\">\n      {loading ?  <Loader/> : (\n        <>\n          <h1 className='p-l-8'>Dashboard</h1>\n          <div className=\"dashboard-content\">\n            <Dashboard />\n\n            <div>a</div>\n            <div>b</div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\n\n\nconst mapDispatchToProps = { initTask };\n\nexport default connect(null, mapDispatchToProps)(Trello);"]},"metadata":{},"sourceType":"module"}