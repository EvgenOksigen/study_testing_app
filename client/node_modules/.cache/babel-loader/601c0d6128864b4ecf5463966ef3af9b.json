{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/client/src/views/forms/LogIn/Log.jsx\";\nimport React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { signIn } from \"../../../state/ducks/user/actions\";\nimport Input from \"../../components/FormsComponent/SignInput/SignInput\";\nimport Axios from \"axios\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      const _this$props = this.props,\n            handleSubmit = _this$props.handleSubmit,\n            signIn = _this$props.signIn;\n      handleSubmit(values => {\n        signIn(values); // (async () => {\n        //   const rawResponse = await fetch(\"http://localhost:3010/users\", {\n        //     method: \"POST\",\n        //     headers: {\n        //       Accept: \"application/json\",\n        //       \"Content-Type\": \"application/json\"\n        //     },\n        //     body: JSON.stringify({ values })\n        //   });\n        //   const content = await rawResponse.json(res => console.log(res));\n        //   console.log(content);\n        // })();\n\n        Axios.post(\"http://localhost:3010/api/auth/login\", values).then(res => console.log(res)).catch(err => console.log(err));\n      })();\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      autoComplete: \"off\",\n      className: \"login-form paper\",\n      onSubmit: this.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Email / name\",\n      name: \"nameOrMail\",\n      component: Input,\n      type: \"text\",\n      placeholder: \"Email or username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"auth-form-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Password\",\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Button, {\n      name: \"log-in-bnt\",\n      className: \"log-in-btn\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-sign-in-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  user\n});\n\nconst mapDispatchToProps = {\n  signIn\n};\nconst enhance = compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: \"login\"\n}));\nexport default enhance(LoginForm);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/client/src/views/forms/LogIn/Log.jsx"],"names":["React","Component","reduxForm","Field","Button","Form","connect","compose","signIn","Input","Axios","LoginForm","formSubmit","e","preventDefault","props","handleSubmit","values","post","then","res","console","log","catch","err","render","mapStateToProps","user","mapDispatchToProps","enhance","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { signIn } from \"../../../state/ducks/user/actions\";\nimport Input from \"../../components/FormsComponent/SignInput/SignInput\";\nimport Axios from \"axios\";\n\nclass LoginForm extends Component {\n  //\n\n  formSubmit = e => {\n    e.preventDefault();\n\n    const { handleSubmit, signIn } = this.props;\n\n    handleSubmit(values => {\n      signIn(values);\n      // (async () => {\n      //   const rawResponse = await fetch(\"http://localhost:3010/users\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       Accept: \"application/json\",\n      //       \"Content-Type\": \"application/json\"\n      //     },\n      //     body: JSON.stringify({ values })\n      //   });\n      //   const content = await rawResponse.json(res => console.log(res));\n\n      //   console.log(content);\n      // })();\n\n      Axios.post(\"http://localhost:3010/api/auth/login\", values)\n        .then(res => console.log(res))\n        .catch(err => console.log(err));\n    })();\n  };\n\n  render() {\n    return (\n      <Form\n        autoComplete=\"off\"\n        className=\"login-form paper\"\n        onSubmit={this.formSubmit}\n      >\n        <h1>Log in</h1>\n        <div className=\"auth-form-field\">\n          <Field\n            label=\"Email / name\"\n            name=\"nameOrMail\"\n            component={Input}\n            type=\"text\"\n            placeholder=\"Email or username\"\n          />\n        </div>\n\n        <div className=\"auth-form-field\">\n          <Field\n            label=\"Password\"\n            name=\"password\"\n            component={Input}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <Button name=\"log-in-bnt\" className=\"log-in-btn\" htmlType=\"submit\">\n          <i className=\"fas fa-sign-in-alt\"></i>\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst mapDispatchToProps = { signIn };\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  reduxForm({ form: \"login\" })\n);\n\nexport default enhance(LoginForm);\n"]},"metadata":{},"sourceType":"module"}