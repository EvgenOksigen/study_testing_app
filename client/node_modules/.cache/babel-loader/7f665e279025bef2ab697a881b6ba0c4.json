{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js\";\nimport React, { useState } from 'react';\n\nconst Trello = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allTasks = _useState2[0],\n        setAll = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        task = _useState4[0],\n        setTask = _useState4[1];\n\n  const inputHandler = e => {\n    setTask(e.target.value);\n  };\n\n  const CreateTask = () => {\n    // setAll(allTasks.push(task))\n    window.alert(task);\n    allTasks.push(task);\n    window.alert(allTasks);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"tasks-dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" Hello in TrELLO! \"), React.createElement(\"p\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Create a task: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: CreateTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Create\")), allTasks && allTasks.map((task, index) => React.createElement(\"p\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" \", task)));\n};\n\nexport default Trello;","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/Trello.js"],"names":["React","useState","Trello","allTasks","setAll","task","setTask","inputHandler","e","target","value","CreateTask","window","alert","push","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,MAAM,GAAG,MAAI;AAAA,oBACUD,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACVE,QADU;AAAA,QACAC,MADA;;AAAA,qBAEOH,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,QAEVI,IAFU;AAAA,QAEJC,OAFI;;AAIjB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAO;AACxB;AACAC,IAAAA,MAAM,CAACC,KAAP,CAAaR,IAAb;AACAF,IAAAA,QAAQ,CAACW,IAAT,CAAcT,IAAd;AACAO,IAAAA,MAAM,CAACC,KAAP,CAAaV,QAAb;AACD,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,IAAA,SAAS,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEI,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAHF,EAOGR,QAAQ,IAAIA,QAAQ,CAACY,GAAT,CAAa,CAACV,IAAD,EAAOW,KAAP,KAAkB;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiBX,IAAjB,CAA/B,CAPf,CADF;AAWD,CA1BD;;AA6BA,eAAeH,MAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Trello = ()=>{\n  const [allTasks, setAll] = useState([])\n  const [task, setTask] = useState('')\n  \n  const inputHandler = e => {\n    setTask(e.target.value);\n  }\n  \n  const CreateTask = () =>  {\n    // setAll(allTasks.push(task))\n    window.alert(task)\n    allTasks.push(task)\n    window.alert(allTasks)\n  }\n\n  return (\n    <div className=\"tasks-dashboard\">\n      <h3> Hello in TrELLO! </h3>\n      <p className=\"\">Create a task: </p>\n      <span>\n        <input type=\"text\" onChange={inputHandler}></input>\n        <button onClick={CreateTask}>Create</button>\n      </span>\n      {allTasks && allTasks.map((task, index ) => <p key={index}> {task}</p>)}\n    </div>\n  )\n}\n\n\nexport default Trello;"]},"metadata":{},"sourceType":"module"}