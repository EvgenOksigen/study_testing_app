{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/components/Search/Search.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Info from \"../Info/Info\";\nimport \"./search_style.css\";\nimport { find, sort, resetContacts } from \"../../state/ducks/search/actions\";\n\nconst Search = ({\n  findItems,\n  data,\n  find,\n  resetContacts\n}) => {\n  const initialValues = JSON.parse(localStorage.getItem(\"contacts\")) || [];\n  onInit(initialValues);\n\n  const inputHandle = e => {\n    find(e.target.value);\n    sort(findItems);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Info, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"contactName\",\n    placeholder: \"Contact\",\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), findItems && findItems.map((el, index) => React.createElement(\"p\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, el)), findItems && React.createElement(\"button\", {\n    onClick: () => {\n      resetContacts();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"reset\"));\n};\n\nconst mapStateToProps = ({\n  contacts: {\n    data,\n    findItems\n  }\n}) => ({\n  data,\n  findItems\n});\n\nconst mapDispatchToProps = {\n  find,\n  sort,\n  resetContacts\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/components/Search/Search.jsx"],"names":["React","connect","Info","find","sort","resetContacts","Search","findItems","data","initialValues","JSON","parse","localStorage","getItem","onInit","inputHandle","e","target","value","map","el","index","mapStateToProps","contacts","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,oBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,aAArB,QAA0C,kCAA1C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBL,EAAAA,IAAnB;AAAyBE,EAAAA;AAAzB,CAAD,KAA8C;AAC3D,QAAMI,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,KAAgD,EAAtE;AACAC,EAAAA,MAAM,CAACL,aAAD,CAAN;;AAEA,QAAMM,WAAW,GAAGC,CAAC,IAAI;AACvBb,IAAAA,IAAI,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAJ;AACAd,IAAAA,IAAI,CAACG,SAAD,CAAJ;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,QAAQ,EAAEQ,WAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGR,SAAS,IAAIA,SAAS,CAACY,GAAV,CAAc,CAACC,EAAD,EAAKC,KAAL,KAAe;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,EAAhB,CAA7B,CAVhB,EAWGb,SAAS,IACR;AACE,IAAA,OAAO,EAAE,MAAM;AACbF,MAAAA,aAAa;AACd,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZJ,CADF;AAuBD,CAhCD;;AAkCA,MAAMiB,eAAe,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAAEf,IAAAA,IAAF;AAAQD,IAAAA;AAAR;AAAZ,CAAD,MAAwC;AAC9DC,EAAAA,IAD8D;AAE9DD,EAAAA;AAF8D,CAAxC,CAAxB;;AAKA,MAAMiB,kBAAkB,GAAG;AAAErB,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAA3B;AAEA,eAAeJ,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,MAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Info from \"../Info/Info\";\nimport \"./search_style.css\";\nimport { find, sort, resetContacts } from \"../../state/ducks/search/actions\";\n\nconst Search = ({ findItems, data, find, resetContacts }) => {\n  const initialValues = JSON.parse(localStorage.getItem(\"contacts\")) || [];\n  onInit(initialValues);\n\n  const inputHandle = e => {\n    find(e.target.value);\n    sort(findItems);\n  };\n\n  return (\n    <div className=\"search-container\">\n      <Info />\n      <div className=\"search\">\n        <input\n          name=\"contactName\"\n          placeholder=\"Contact\"\n          onChange={inputHandle}\n        />\n      </div>\n      <hr />\n      {findItems && findItems.map((el, index) => <p key={index}>{el}</p>)}\n      {findItems && (\n        <button\n          onClick={() => {\n            resetContacts();\n          }}\n        >\n          reset\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ contacts: { data, findItems } }) => ({\n  data,\n  findItems\n});\n\nconst mapDispatchToProps = { find, sort, resetContacts };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n"]},"metadata":{},"sourceType":"module"}