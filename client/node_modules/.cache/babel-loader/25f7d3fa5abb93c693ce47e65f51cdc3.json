{"ast":null,"code":"var _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/Log.jsx\";\nimport React from \"react\";\nimport { reduxForm, Field, getFormValues } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nlet LoginForm = ({\n  handleSubmit,\n  submitting\n}) => {\n  //\n  const showResults = values => {\n    window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    console.log(\"hi\");\n    handleSubmit(showResults());\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    autoComplete: \"off\",\n    className: \"login-form paper\" // onSubmit={handleSubmit(showResults)}\n    ,\n    onSubmit: handleSubmit(formSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"div\", {\n    className: \"auth-form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" User name \"), React.createElement(Field, {\n    name: \"username\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"auth-form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Password \"), React.createElement(Field, {\n    name: \"password\",\n    component: \"input\",\n    type: \"password\",\n    placeholder: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"auth-form-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Email \"), React.createElement(Field, {\n    name: \"email\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Button, {\n    disabled: submitting,\n    htmlType: \"submit\",\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Sign in\")));\n};\n\nLoginForm = reduxForm({\n  form: \"login\",\n  destroyOnUnmount: false\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  initialValues: state.formInitialValues,\n  formValues: getFormValues(\"login\")(state)\n});\n\nconst mapDispatchToProps = {}; //signIn\n\nconst enhance = compose(connect(mapStateToProps, mapDispatchToProps), reduxForm({\n  form: \"login\"\n}));\nexport default enhance(LoginForm);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/forms/LogIn/Log.jsx"],"names":["React","reduxForm","Field","getFormValues","Button","Form","connect","compose","LoginForm","handleSubmit","submitting","showResults","values","window","alert","JSON","stringify","formSubmit","e","preventDefault","console","log","form","destroyOnUnmount","mapStateToProps","state","initialValues","formInitialValues","formValues","mapDispatchToProps","enhance"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { reduxForm, Field, getFormValues } from \"redux-form\";\n\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nlet LoginForm = ({ handleSubmit, submitting }) => {\n  //\n\n  const showResults = values => {\n    window.alert(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    console.log(\"hi\");\n    handleSubmit(showResults());\n  };\n\n  return (\n    <>\n      <Form\n        autoComplete=\"off\"\n        className=\"login-form paper\"\n        // onSubmit={handleSubmit(showResults)}\n        onSubmit={handleSubmit(formSubmit)}\n      >\n        {/* <form className=\"login-form paper\" onSubmit={handleSubmit(showResults)}> */}\n        <h1>Log in</h1>\n\n        <div className=\"auth-form-field\">\n          <label> User name </label>\n          <Field\n            name=\"username\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"First Name\"\n          />\n        </div>\n        <div className=\"auth-form-field\">\n          <label> Password </label>\n          <Field\n            name=\"password\"\n            component=\"input\"\n            type=\"password\"\n            placeholder=\"Last Name\"\n          />\n        </div>\n        <div className=\"auth-form-field\">\n          <label> Email </label>\n          <Field\n            name=\"email\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Email\"\n          />\n        </div>\n        <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n          Sign in\n        </Button>\n        {/* </form> */}\n      </Form>\n    </>\n  );\n};\n\nLoginForm = reduxForm({\n  form: \"login\",\n  destroyOnUnmount: false\n})(LoginForm);\n\nconst mapStateToProps = state => ({\n  initialValues: state.formInitialValues,\n  formValues: getFormValues(\"login\")(state)\n});\n\nconst mapDispatchToProps = {}; //signIn\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  reduxForm({ form: \"login\" })\n);\n\nexport default enhance(LoginForm);\n"]},"metadata":{},"sourceType":"module"}