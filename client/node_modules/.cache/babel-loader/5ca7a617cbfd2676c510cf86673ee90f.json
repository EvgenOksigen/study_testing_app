{"ast":null,"code":"import _objectSpread from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./types\"; // import api from \"../../../api\";\n\nimport api from '../../../api'; // like api\n\nconst apiUser = ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});\n\nasync function sin(data, ms) {\n  await apiUser(ms).then(() => data);\n}\n\nexport const userSignIn = user => {\n  //let take users by timeout\n  if (user) {\n    //plase for JWT \n    // localStorage.setItem(\"user\", JSON.stringify(user));\n    return {\n      type: types.SIGN_IN,\n      user\n    };\n  }\n};\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: _objectSpread({}, user)\n});\nexport const me = () => dispatch => {\n  console.log('from action \"ME\"');\n  api.user.me().then(data => {\n    dispatch(setMe(data));\n  });\n};\nexport const signIn = data => dispatch => {\n  return sin(api.users, 1500).then(() => api.users.forEach(user => {\n    if (user.password === data.password && (user.nameOrMail === data.username || user.nameOrMail === data.email)) {\n      dispatch(userSignIn(user));\n    }\n  }));\n  /* \n  export const signIn = credentials => dispatch =>\n  api.user\n    .signin(credentials)\n    .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n  */\n};\nexport const signOut = () => {\n  localStorage.removeItem(\"user\");\n  return {\n    type: types.SIGN_OUT\n  };\n};","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/state/ducks/user/actions.js"],"names":["types","api","apiUser","ms","Promise","resolve","setTimeout","sin","data","then","userSignIn","user","type","SIGN_IN","setMe","SET_ME","me","dispatch","console","log","signIn","users","forEach","password","nameOrMail","username","email","signOut","localStorage","removeItem","SIGN_OUT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAAgC;;AAGhC,MAAMC,OAAO,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,OAAO,IAAG;AAACC,EAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AAAyB,CAAhD,CAAtB;;AAEE,eAAeI,GAAf,CAAmBC,IAAnB,EAAyBL,EAAzB,EAA6B;AAC3B,QAAMD,OAAO,CAACC,EAAD,CAAP,CAAYM,IAAZ,CAAiB,MAAKD,IAAtB,CAAN;AACD;;AAGH,OAAO,MAAME,UAAU,GAAKC,IAAF,IAAY;AAAE;AAEtC,MAAIA,IAAJ,EAAU;AACR;AAEA;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAEZ,KAAK,CAACa,OADP;AAELF,MAAAA;AAFK,KAAP;AAID;AACF,CAZM;AAcP,OAAO,MAAMG,KAAK,GAAGH,IAAI,KAAK;AAC5BC,EAAAA,IAAI,EAAEZ,KAAK,CAACe,MADgB;AAE5BJ,EAAAA,IAAI,oBACCA,IADD;AAFwB,CAAL,CAAlB;AAQP,OAAO,MAAMK,EAAE,GAAG,MAAMC,QAAQ,IAAI;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEAlB,EAAAA,GAAG,CAACU,IAAJ,CAASK,EAAT,GAAcP,IAAd,CAAmBD,IAAI,IAAI;AACzBS,IAAAA,QAAQ,CAACH,KAAK,CAACN,IAAD,CAAN,CAAR;AACD,GAFD;AAGD,CANM;AAQP,OAAO,MAAMY,MAAM,GAAIZ,IAAD,IAAUS,QAAQ,IAAI;AAG3C,SACEV,GAAG,CAACN,GAAG,CAACoB,KAAL,EAAY,IAAZ,CAAH,CAAqBZ,IAArB,CAA0B,MAC1BR,GAAG,CAACoB,KAAJ,CAAUC,OAAV,CAAmBX,IAAD,IAAQ;AACxB,QAAGA,IAAI,CAACY,QAAL,KAAkBf,IAAI,CAACe,QAAvB,KACDZ,IAAI,CAACa,UAAL,KAAoBhB,IAAI,CAACiB,QAAzB,IAAsCd,IAAI,CAACa,UAAL,KAAoBhB,IAAI,CAACkB,KAD9D,CAAH,EACyE;AACtET,MAAAA,QAAQ,CAACP,UAAU,CAACC,IAAD,CAAX,CAAR;AACG;AACF,GALN,CADA,CADF;AAWC;;;;;;AAMD,CApBM;AAsBP,OAAO,MAAMgB,OAAO,GAAG,MAAM;AAC3BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AAEA,SAAO;AACLjB,IAAAA,IAAI,EAAEZ,KAAK,CAAC8B;AADP,GAAP;AAGD,CANM","sourcesContent":["import * as types from \"./types\";\n// import api from \"../../../api\";\nimport api from '../../../api'; // like api\n\n\nconst apiUser = ms => new Promise(resolve=> {setTimeout(resolve, ms);});\n\n  async function sin(data, ms) {\n    await apiUser(ms).then(()=> data)\n  }\n\n  \nexport const userSignIn = ( user ) => { //let take users by timeout\n  \n  if (user) {\n    //plase for JWT \n     \n    // localStorage.setItem(\"user\", JSON.stringify(user));\n\n    return {\n      type: types.SIGN_IN,\n      user\n    };\n  }\n};\n\nexport const setMe = user => ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    // permissions: user.allPermissions\n  }\n});\n\nexport const me = () => dispatch => {\n  console.log('from action \"ME\"');\n  \n  api.user.me().then(data => {\n    dispatch(setMe(data));\n  });\n}\n\nexport const signIn = (data) => dispatch => {\n\n  \n return (\n   sin(api.users, 1500).then(()=>\n   api.users.forEach((user)=>{\n     if(user.password === data.password &&\n      (user.nameOrMail === data.username  || user.nameOrMail === data.email)) {\n        dispatch(userSignIn(user))\n          }\n        }\n      )\n    )\n  )\n  /* \n  export const signIn = credentials => dispatch =>\n  api.user\n    .signin(credentials)\n    .then(data => (data && !data.errors ? dispatch(userSignIn(data)) : data));\n */\n}\n\nexport const signOut = () => {\n  localStorage.removeItem(\"user\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n"]},"metadata":{},"sourceType":"module"}