{"ast":null,"code":"import _slicedToArray from \"/home/evgeny/Public/reduxtraine/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/AddTaskListForm.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst AddTaskListForm = ({\n  setTaskList,\n  taskList\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const inputHandler = e => {\n    setValue(e.target.value);\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n    createNewCollum(value);\n    setTaskList(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: \"add-form-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Input name\"), React.createElement(\"div\", {\n    className: \"add-task-list-form task-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"column-title\",\n    onChange: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"add-column-btn\",\n    type: \"submit\",\n    onClick: formSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"button\", {\n    className: \"close\",\n    type: \"button\",\n    onClick: () => {\n      setTaskList(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\xD7\")))));\n};\n\nconst mapStateToProps = ({\n  allTasks: taskList\n}) => ({\n  taskList\n});\n\nexport default connect(mapStateToProps, null)(AddTaskListForm);","map":{"version":3,"sources":["/home/evgeny/Public/reduxtraine/my-app/src/views/pages/Trello/AddTaskListForm.js"],"names":["React","useState","connect","AddTaskListForm","setTaskList","taskList","value","setValue","inputHandler","e","target","formSubmit","preventDefault","createNewCollum","mapStateToProps","allTasks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAD,KAA6B;AAAA,oBAEzBJ,QAAQ,CAAC,EAAD,CAFiB;AAAA;AAAA,QAE5CK,KAF4C;AAAA,QAErCC,QAFqC;;AAInD,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAGF,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACG,cAAF;AACAC,IAAAA,eAAe,CAACP,KAAD,CAAf;AAEAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GALD;;AAOA,SACE,0CACE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,QAAQ,EAAEI,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,OAAO,EAAEG,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAME;AAAQ,IAAA,SAAS,EAAC,OAAlB;AACQ,IAAA,IAAI,EAAC,QADb;AAEQ,IAAA,OAAO,EAAE,MAAI;AAACP,MAAAA,WAAW,CAAC,KAAD,CAAX;AAAmB,KAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CAJF,CADF,CAFF,CADF;AAyBD,CAxCD;;AA0CA,MAAMU,eAAe,GAAG,CAAC;AAACC,EAAAA,QAAQ,EAACV;AAAV,CAAD,MAA0B;AAACA,EAAAA;AAAD,CAA1B,CAAxB;;AAEA,eAAeH,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BX,eAA/B,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux';\n\nconst AddTaskListForm = ({setTaskList, taskList}) => {\n\n  const [value, setValue] = useState('')\n  \n  const inputHandler = e => {\n    setValue(e.target.value)\n  }\n\n  const formSubmit = e =>{\n    e.preventDefault();\n    createNewCollum(value);\n\n    setTaskList(false)\n  }\n\n  return(\n    <>\n      <span className=\"add-form-title\">Input name</span>\n      <div className=\"add-task-list-form task-list-container\">\n        <form>\n\n          <input className=\"column-title\" onChange={inputHandler} />\n\n          <div className=\"form-footer\">\n\n            <button className=\"add-column-btn\" \n                    type=\"submit\" \n                    onClick={formSubmit}>Add</button>\n\n            <button className=\"close\" \n                    type=\"button\" \n                    onClick={()=>{setTaskList(false)}}>\n              &times;\n            </button>\n\n          </div>\n        </form>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = ({allTasks:taskList}) => ({taskList})\n\nexport default connect(mapStateToProps, null)(AddTaskListForm);"]},"metadata":{},"sourceType":"module"}