{"version":3,"sources":["views/components/FormsComponent/SignInput/SignInput.jsx","views/forms/LogIn/Log.jsx","views/pages/Auth/Auth.js","routes/default.js","routes/hoc/GuestRoute.js","views/pages/Trello/Loader.js","views/pages/Trello/TaskItem.js","views/pages/Trello/AddTask.js","views/pages/Trello/TaskList.js","views/pages/Trello/AddTaskListForm.js","views/pages/Trello/AddTaskList.js","views/pages/Trello/Dashboard.js","views/components/UserLogo/UserLogo.jsx","views/layout/Header/Header.jsx","views/pages/Trello/Trello.js","routes/hoc/PrivateRoute.js","views/pages/AdminHome/AdminHome.jsx","views/pages/Home/Home.jsx","routes/index.js"],"names":["Input","input","meta","type","touched","error","label","required","placeholder","notification","className","onChange","e","LoginForm","formSubmit","preventDefault","props","handleSubmit","signIn","values","autoComplete","onSubmit","this","Field","name","component","htmlType","Component","mapDispatchToProps","enhance","compose","connect","user","reduxForm","form","Auth","Log","path","to","rest","render","swapToOtherColumn","task","column","id","onClick","title","createTask","idColumn","defaultValue","useState","value","setValue","bind","event","target","clear","useInputValue","dragItemToColumn","taskList","allTasks","shiftX","shiftY","oldParent","oldestParent","taskItems","root","document","getElementById","readyToDragFlag","liEnterHandler","tagName","liLeaveHandler","parentNode","style","liMouseDownHandler","clientX","getBoundingClientRect","left","clientY","top","ondragstart","liMouseMoveHandler","pageX","pageY","append","hidden","elemBelow","elementFromPoint","closest","droppableBelow","parseInt","getElementsByTagName","liMouseUpHandler","attributes","remove","toLowerCase","match","toLocaleString","replace","map","index","key","onMouseEnter","onMouseLeave","onMouseDown","onMouseMove","onMouseUp","createNewCollum","setTaskList","AddTaskList","taskListForm","useEffect","localStorage","setItem","JSON","stringify","tasks","signOut","login","mail","withRouter","resources","location","initTask","loading","setLoading","timer","setTimeout","clearTimeout","Loader","AdminHome","exact","App","state","getMe","a","async","me","getItem","catch","removeItem","setState","nextProps","isLogged","DefaultRoute","Home","React","setMe"],"mappings":"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","file":"static/js/4.5c13761c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = ({\n  input,\n  meta: { touched, error },\n  type,\n  label,\n  required,\n  placeholder,\n  notification\n}) => {\n  return (\n    <>\n      {label === \"empty\" ? (\n        <label>&nbsp;</label>\n      ) : (\n        <label className={required && \"required\"}>\n          {label}:{\" \"}\n          {notification && (\n            <span className=\"notification\">( {notification} )</span>\n          )}\n        </label>\n      )}\n\n      <input\n        className=\"login-input\"\n        {...input}\n        placeholder={placeholder}\n        onChange={e => {\n          input.onChange(e);\n        }}\n        type={type}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport \"./LogIn.css\";\nimport { Button, Form } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { signIn } from \"../../../state/ducks/user/actions\";\nimport Input from \"../../components/FormsComponent/SignInput/SignInput\";\n\nclass LoginForm extends Component {\n  //\n\n  formSubmit = e => {\n    e.preventDefault();\n\n    const { handleSubmit, signIn } = this.props;\n\n    handleSubmit(values => {\n      signIn(values);\n    })();\n  };\n\n  render() {\n    return (\n      <Form\n        autoComplete=\"off\"\n        className=\"login-form paper\"\n        onSubmit={this.formSubmit}\n      >\n        <h1>Log in</h1>\n        <div className=\"auth-form-field\">\n          <Field\n            label=\"Email/login\"\n            name=\"login\"\n            component={Input}\n            type=\"text\"\n            placeholder=\"Email or username\"\n          />\n        </div>\n\n        <div className=\"auth-form-field\">\n          <Field\n            label=\"Password\"\n            name=\"pass\"\n            component={Input}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <Button name=\"log-in-bnt\" className=\"log-in-btn\" htmlType=\"submit\">\n          <i className=\"fas fa-sign-in-alt\"></i>\n        </Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst mapDispatchToProps = { signIn };\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  reduxForm({ form: \"login\" })\n);\n\nexport default enhance(LoginForm);\n","import React from \"react\";\n\nimport './Auth'\nimport LoginForm from \"../../forms/LogIn/Log\";\n\nconst Auth = () => (\n  <div className=\"background\">\n    <div className=\"wrap-login-form\">\n      <LoginForm/>\n    </div>\n  </div>\n);\n\nexport default Auth;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst DefaultRoute = ({user}) => {\n  let path;\n  \n  if (user) {\n    path = \"home\";\n  } else {\n    path = \"login\";\n  }\n\n  return <Redirect to={path} />;\n};\n\nconst mapStateToProps = ( {user} ) => {\n  return({user})\n}\n\nexport default connect(mapStateToProps)(DefaultRoute);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst GuestRoute = ({ component: Component, user, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (!user) {\n        \n        return <Component {...props} />;\n      }\n      return <Redirect to=\"/\" />;\n    }}\n  />\n);\n\nconst mapStateToProps = ( {user} ) => ({user});\n\nexport default connect(mapStateToProps)(GuestRoute);\n","import React from 'react'\n\nexport default () => <div>\n  <div className=\"lds-circle\"><div></div></div>\n</div> ","import React from 'react'\nimport { connect } from 'react-redux';\nimport { swapToOtherColumn } from '../../../state/ducks/task/actions';\n\nconst TaskItem = ({task, column, swapToOtherColumn}) =>{\n\n  const clickHandler = e =>{\n    swapToOtherColumn(column, task.id)\n  }\n\n  return(\n  <div className='task'\n        id={task.id}\n        column={column}\n        onClick={clickHandler}\n        >\n        {task.title}\n  </div>\n    )\n}\n\n// const mapStateToProps = ({ allTasks: { allTasks, taskList } }) => ({allTasks, taskList});\nconst mapDispatchToProps = { swapToOtherColumn };\n\nexport default connect(null, mapDispatchToProps)(TaskItem);","import React, {useState}  from 'react'\nimport { connect } from 'react-redux';\nimport { createTask } from '../../../state/ducks/task/actions';\n\n function useInputValue (defaultValue = '') {\n  const [value, setValue] = useState(defaultValue);\n\n  return{\n    bind:{\n      value,\n      onChange: event=> setValue(event.target.value)\n    },\n    clear: ()=> setValue(''),\n    value: ()=> value\n  }\n }\n\n const AddTask = ({createTask, idColumn}) =>  {\n \n   const input = useInputValue('')\n\n   const formSubmit = (e, id=idColumn) => {\n    e.preventDefault();\n    createTask(input.value(), id);\n    input.clear();\n   }\n\n  return (\n    <div className=\"card-composer\">\n\n      <label className=\"composer-title\">Create a task: </label>\n\n      <form onSubmit={formSubmit}>\n      \n        <input {...input.bind}/>\n      \n        <button type=\"submit\"> Add </button>\n      \n      </form>\n    </div>\n    )\n }\n\nconst mapDispatchToProps = { createTask };\n\nexport default connect(null, mapDispatchToProps)(AddTask);","import React from 'react'\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport AddTask from './AddTask'\nimport { dragItemToColumn, swapToOtherColumn } from '../../../state/ducks/task/actions';\n\n\nconst TaskList = ( { taskItems, title, id, dragItemToColumn,swapToOtherColumn } ) => {\n  //\n  const root = document.getElementById('root');\n  let readyToDragFlag = false\n  let shiftX\n  let shiftY\n  let oldParent\n  let oldestParent\n\n  const liEnterHandler = e => {\n    if(e.target.tagName !== \"LI\"){\n      // debugger\n      return;\n    }else{\n      e.target.className='taskItem active' \n    }\n  }\n\n  const liLeaveHandler = e => {\n    e.target.className='taskItem'\n    readyToDragFlag = false\n    e.target.parentNode.style.className=''\n  }\n\n  const liMouseDownHandler = e => {\n    readyToDragFlag = true\n\n    oldParent = e.target.parentNode;\n    oldestParent = e.target.parentNode.parentNode; \n    \n    shiftX = e.clientX - e.target.getBoundingClientRect().left;\n    shiftY = e.clientY - e.target.getBoundingClientRect().top;\n\n    e.target.ondragstart = function() {\n      return false;\n    };\n  }\n\n  const liMouseMoveHandler = e => {\n    if(readyToDragFlag){\n      moveAt(e.pageX, e.pageY);\n      \n      e.target.className = 'taskItem ui droppable'\n      \n      oldParent.className='placeholder'\n\n      root.append(e.target);\n      \n      e.target.hidden = true;\n      let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n      e.target.hidden = false;\n\n      let droppableBelow = elemBelow.closest('.task-list-wrapper');\n\n      if (!elemBelow) return;\n\n      if(parseInt(droppableBelow.id) !== id){\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent)\n        oldParent.hidden=false\n      }\n      else{\n        oldParent.hidden=false\n        droppableBelow.getElementsByTagName('ul')[0].append(oldParent)\n      }\n      \n    }\n    \n    function moveAt(pageX, pageY){\n      e.target.style.left = pageX - shiftX +'px'\n      e.target.style.top = pageY - shiftY +'px'\n    }\n\n  }\n\n  const liMouseUpHandler = e =>{\n    readyToDragFlag = false   \n    e.target.hidden = true;\n    let elemBelow = document.elementFromPoint(e.clientX, e.clientY).closest('.task-list-wrapper');\n    e.target.hidden = false;\n\n    if(parseInt(elemBelow.id) === id){\n      oldParent.className='taskItem'\n      elemBelow.getElementsByTagName('ul')[0].append(oldestParent)\n      oldestParent.append(oldParent)\n      oldParent.append(e.target)\n      e.target.className = 'task'\n      e.target.style.top = ''\n      e.target.style.left = ''\n      }else{\n      swapToOtherColumn(elemBelow.id, e.target.id, (e.target.attributes['column'].value))\n      e.target.remove()\n      oldParent.remove()\n    }\n\n  }\n  \n\n  \n  return (\n    <div className=\"task-list-wrapper\"\n          id={id}>\n      <div className=\"task-list\">\n        <>\n          <h4 className='p-l-8'>{title}</h4>\n        <div id={id}\n             className={`${title.toLowerCase().match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '-')} task-list-container`}>\n          <ul>\n            {taskItems.map((task, index) => {\n              return (\n                <div key={task.id}>\n                  <li key={index}\n                      index={index+1} \n                      className='taskItem'\n                      onMouseEnter={liEnterHandler}\n                      onMouseLeave={liLeaveHandler}\n                      onMouseDown={liMouseDownHandler}\n                      onMouseMove={liMouseMoveHandler}\n                      onMouseUp={liMouseUpHandler}\n                      >\n                        <TaskItem task={task} \n                                  key={task.id} \n                                  index={index} \n                                  column={id}/>\n                  </li>\n                </div>\n              )\n            })\n            }\n          </ul>\n          <AddTask idColumn={id}/>\n        </div>\n        </>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ allTasks:{ taskList } })=> ({taskList});\n\nconst mapDispatchToProps = { dragItemToColumn, swapToOtherColumn };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { createNewCollum } from '../../../state/ducks/task/actions';\n\nconst AddTaskListForm = ({setTaskList, createNewCollum }) => {\n\n  const [value, setValue] = useState('')\n  \n  const inputHandler = e => {\n    setValue(e.target.value)\n  }\n\n  function formSubmit(e) {\n    e.preventDefault();\n    setTaskList(false)\n    \n    createNewCollum(value);\n  }\n\n  return(\n    <>\n      <span className=\"add-form-title\">Input name</span>\n      <div className=\"add-task-list-form task-list-container\">\n\n        <form onSubmit={formSubmit}>\n\n          <input className=\"column-title\" onChange={inputHandler} />\n\n          <div className=\"form-footer\">\n\n            <button className=\"add-column-btn\" \n                    type=\"submit\" \n                    >Add\n          </button>\n\n            <button className=\"close\" \n                    type=\"button\" \n                    onClick={()=>{setTaskList(false)}}>\n              &times;\n            </button>\n\n          </div>\n        </form>\n      </div>\n    </>\n  )\n}\n\n// const mapStateToProps = ({allTasks:{taskList}}) => ({taskList});\n\nconst mapDispatchToProps = {createNewCollum};\n\nexport default connect(null, mapDispatchToProps)(AddTaskListForm);","import React, { useState } from 'react';\nimport AddTaskListForm from './AddTaskListForm';\n\nconst AddTaskList = () => {\n  const [taskListForm, setTaskList] = useState(false);\n    \n  const showAddTaskListFormHandler = () => {\n    setTaskList(!taskListForm);\n  }\n  return ( \n    <div className={taskListForm ? 'task-list' : null}>\n      {taskListForm ?\n      <AddTaskListForm taskListForm={taskListForm} \n                       setTaskList={setTaskList} />\n      : (!taskListForm && <button onClick={showAddTaskListFormHandler} \n        className=\"add-list btn\">\n          {<i className=\"fas fa-plus\"></i> || <i>&#215;</i>}\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default AddTaskList","import React, { useEffect }  from 'react';\nimport TaskList from './TaskList';\nimport { connect } from 'react-redux';\nimport AddTaskList from './AddTaskList';\n\nconst Dashboard = ({allTasks}) => {\n  useEffect(()=>{\n    localStorage.setItem('tasks-list', JSON.stringify(allTasks.taskList));\n    localStorage.setItem('tasks', JSON.stringify(allTasks.allTasks))\n  }, [allTasks]);\n\n  return(\n    <>\n    <div className=\"board\">\n      {allTasks.taskList.map((column)=> {\n        return <TaskList title={column.title}\n                         id={column.id}\n                         key={column.id}\n                         taskItems={column.tasks}/>\n      })}\n    </div>\n    <AddTaskList />\n  </>\n  )\n}\n\n\n\nconst mapStateToProps = ({ allTasks })=> ({allTasks });\n\nexport default connect(mapStateToProps, null)(Dashboard);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../../state/ducks/user/actions\";\nimport \"./UserLogo.css\";\n\nconst UserLogo = ({ user, signOut }) => {\n  return (\n    <div className=\"user-logo-container\">\n      <button\n        className=\"log-out btn\"\n        onClick={() => {\n          signOut();\n        }}\n      >\n        LogOut\n      </button>\n      <label className=\"user-info\">{`${user.login}:${user.mail}`}</label>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst mapDispatchToProps = { signOut };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserLogo);\n","import React from \"react\";\nimport \"./header.css\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport UserLogo from \"../../components/UserLogo/UserLogo\";\nimport { compose } from \"redux\";\n\nconst Header = ({ user, resources, location }) => {\n  return (\n    <div className=\"header-container\">\n      <UserLogo />\n      <nav>\n        <div className=\"nav-link-container\">\n          {user && user.login === \"admin\" && (\n            <>\n              <NavLink className=\"nav-link\" to=\"#\">\n                Study Programm\n              </NavLink>\n              <NavLink className=\"nav-link\" to=\"#\">\n                Add User\n              </NavLink>\n              <NavLink className=\"nav-link\" to=\"#\">\n                Journal\n              </NavLink>\n            </>\n          )}\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user }) => ({ user });\n\n// const mapDispatchToProps = {};\n\nconst enhance = compose(connect(mapStateToProps, null), withRouter);\n\nexport default enhance(Header);\n","import React, { useState, useEffect } from 'react'\nimport './trello.css'\nimport Loader from './Loader'\nimport { connect } from 'react-redux'\nimport { initTask } from '../../../state/ducks/task/actions'\nimport Dashboard from './Dashboard'\nimport Header from '../../layout/Header/Header'\n\nconst Trello = ({initTask}) => {\n  \n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      initTask();\n      setLoading(false)\n    }\n    , 0); //2700\n    return () => clearTimeout(timer);\n  }, [initTask]);\n\n  return (\n    <div className=\"dashboard-container\">\n      {loading ?  <Loader/> : (\n        <>\n          <Header />\n          <div>\n            <h1 className='p-l-8'>Simple dashboard</h1>\n            <div className=\"dashboard-content\">\n              <Dashboard />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\n\n\nconst mapDispatchToProps = { initTask };\n\nexport default connect(null, mapDispatchToProps)(Trello);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, user, resources, ...rest }) => {\n\n  return  (  \n  <Route\n    {...rest}\n    render={props => {\n      if (user) {\n        return <Component {...props} resources={resources} />;\n      }\n\n      return <Redirect to=\"/\" />;\n    }}\n  />\n);\n  }\n\nconst mapStateToProps = ({user}) => ({user});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\n\nconst AdminHome = () => <div>Admin Home Page</div>;\nexport default AdminHome;\n","import React from \"react\";\nimport { withRouter, Route } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Header from \"../../layout/Header/Header\";\nimport AdminHome from \"../AdminHome/AdminHome\";\n\nconst Home = ({ location, user }) => (\n  <>\n    <Header></Header>\n    {user && user.login === \"admin\" ? (\n      <>\n        <Route path=\"/home\" exact render={() => <AdminHome />} />\n      </>\n    ) : null}\n  </>\n);\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst enhance = compose(withRouter, connect(mapStateToProps, null));\n\nexport default enhance(Home);\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Auth from \"../views/pages/Auth/Auth\";\nimport DefaultRoute from './default'\nimport GuestRoute from './hoc/GuestRoute';\nimport Trello from '../views/pages/Trello/Trello'\n\nimport { me, setMe } from \"../state/ducks/user/actions\";\nimport PrivateRoute from './hoc/PrivateRoute';\nimport Home from '../views/pages/Home/Home';\n// import * as resources from '../views/resources'\n\nclass App extends React.Component {\n\n  state = {\n    loading: true,\n    resources: []\n  };\n\n  componentDidMount() {\n    this.getMe();\n  }\n\n  getMe = async () => {\n    const { me } = this.props;\n\n    const token = localStorage.getItem(\"token\");\n\n     if (token) {\n      await me().catch(() => {\n        localStorage.removeItem(\"token\");\n      });\n     }\n     this.setState({ loading: false });\n\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { user } = nextProps;\n\n    if (user && user.isLogged && !user.login) {\n      this.setState({ loading: true });\n\n      this.getMe();\n    }\n  }\n\n  render () { \n    const {loading}= this.state;\n    return(\n      <>\n        {!loading && (\n          <Switch>\n            <Route path=\"/\" exact component={DefaultRoute} />\n\n            <GuestRoute path=\"/login\" exact component={Auth} />\n\n            <PrivateRoute path=\"/home\" exact  component={Home}/>\n          </Switch>\n          )\n        \n        }\n      </>\n     ) \n  }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nconst mapDispatchToProps = { me, setMe };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"],"sourceRoot":""}