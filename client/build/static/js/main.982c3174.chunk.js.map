{"version":3,"sources":["state/ducks/user/types.js","routes/history.js","serviceWorker.js","routes/loadable.js","index.js","api/contacts.js","api/tasks.js","utils/createReducer.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/search/types.js","state/ducks/user/reducers.js","state/ducks/user/index.js","api/taskList.js","state/ducks/task/reducers.js","state/ducks/task/index.js","state/ducks/sider/index.js","state/ducks/sider/reducers.js","state/ducks/sider/types.js","state/store.js","state/ducks/task/actions.js","api/users.js","api/index.js","state/ducks/user/actions.js","state/ducks/task/types.js"],"names":["SIGN_IN","SET_ME","SIGN_OUT","createHistory","Boolean","window","location","hostname","match","App","Loadable","loader","loading","ReactDOM","render","store","history","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","contacts","id","name","phoneNumber","edit","initialTasks","title","status","initialState","reducerMap","state","action","reducer","type","createReducer","data","findItems","map","el","sort","a","b","payload","regExp","RegExp","forEach","contact","push","indexOfDelete","contactListAfterDelete","index","splice","localStorage","setItem","JSON","stringify","item","initialContacts","contactListToEdit","value","field","onlyNumber","contactListAfterEdit","v","toLocaleString","replace","signInReducer","types","user","isLogged","initialTaskList","tasks","taskReducer","taskList","allTasks","storeTaskList","parse","getItem","storeTask","initialTaskLists","task","undefined","length","taskListUpdate","taskTitle","targetTask","columnId","parseInt","filter","console","log","targetTaskList","taskId","filterList","oldTargetTaskList","columnID","oldColumn","isShowing","composeEnhancer","compose","createStore","combineReducers","reducers","form","formReducer","applyMiddleware","thunkMiddleware","initTask","createTask","createNewCollum","dragItemToColumn","swapToOtherColumn","USER_API","signin","credentials","axios","post","res","me","config","method","baseURL","headers","setHeader","CancelToken","getState","Accept","Authorization","token","users","setMe","signIn","dispatch","api","d","userSignIn","signOut","removeItem","ADD_TASK","INIT_TASKS","CREATE_NEW_COLLUM","DRAG_ITEM_TO_COLUMN","CHANGE_TASK","SWAP"],"mappings":"uGAAA,sGAAO,IAAMA,EAAU,UACVC,EAAS,SACTC,EAAW,Y,4HCATC,gB,sBCUKC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YChBOC,E,MAAMC,GAAS,CAC1BC,OAAQ,kBAAM,qDACdC,QAAS,kBAAM,QCcjBC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,KACf,kBAAC,IAAD,CAAQC,QAASA,GACf,kBAACP,EAAD,QAIFQ,SAASC,eAAe,SF0GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCGxFJC,IA7CE,CACf,CACEC,GAAI,EACJC,KAAK,OACLC,YAAa,aACbC,MAAK,GAEP,CACEH,GAAI,EACJC,KAAK,QACLC,YAAa,YACbC,MAAK,GAEP,CACEH,GAAI,EACJC,KAAK,OACLC,YAAa,YACbC,MAAK,GAEP,CACEH,GAAI,EACJC,KAAK,OACLC,YAAa,YACbC,MAAK,GAEP,CACEH,GAAG,GACHC,KAAM,SACNC,YAAa,YACbC,MAAK,GAEP,CACEH,GAAI,EACJC,KAAK,QACLC,YAAa,aACbC,MAAK,GAEP,CACEH,GAAI,EACJC,KAAK,QACLC,YAAa,aACbC,MAAK,K,gCClCMC,IAPM,CACnB,CAACJ,GAAI,EAAGK,MAAO,SAAUC,OAAO,GAChC,CAACN,GAAI,EAAGK,MAAO,UAAWC,OAAO,GACjC,CAACN,GAAI,EAAGK,MAAO,QAASC,OAAO,GAC/B,CAACN,GAAI,EAAGK,MAAO,SAAUC,OAAO,K,8PCJnB,WAAAC,GAAY,OAAI,SAAAC,GAAU,OAAI,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACvEC,EAAUH,EAAWE,EAAOE,MAClC,OAAOD,EAAUA,EAAQF,EAAOC,GAAUD,K,QCI7BE,ECGME,EALA,CACnBC,KAAM,GACNC,UAAW,IAGQF,EAAA,mBCHQ,iBDKL,SAACJ,EAAD,GAAoB,IAAXK,EAAU,EAAVA,KAC/B,sBACKL,EADL,CAEEK,OACAC,UAAWD,EAAKE,KAAI,SAAAC,GAAE,OAAEA,EAAGhB,QAAMiB,YANhB,cCRD,QDkBJ,SAACT,GAEb,IAAIK,EAAOL,EAAMK,KAAKI,MAAK,SAACC,EAAGC,GAAJ,OACvBD,EAAElB,OAASmB,EAAEnB,KAAQkB,EAAElB,KAAOmB,EAAEnB,MAAQ,EAAI,EAAK,KACrD,sBACKQ,EADL,CAEEK,YAhBe,cCTD,QD6BJ,SAACL,EAAD,GAAuB,IAAdY,EAAa,EAAbA,QACfN,EAAY,GAEZO,EAAS,IAAIC,OAAJ,UAAcF,GAAW,MAQxC,OANEZ,EAAMK,KAAKU,SAAQ,SAAAC,GACfA,EAAQxB,KAAKnB,MAAMwC,IACrBP,EAAUW,KAAKD,EAAQxB,SAI3B,eACKQ,EADL,CAEEM,iBAjCe,cCNS,kBD2CJ,SAACN,EAAD,GAAkB,IAIpCkB,EAJ2B3B,EAAQ,EAARA,GAEzB4B,EAAsB,YAAOnB,EAAMK,MAazC,OATAc,EAAuBJ,SAAQ,SAACC,EAASI,GACpCJ,EAAQzB,KAAOA,IAChB2B,EAAgBE,MAIpBD,EAAuBE,OAAOH,EAAc,GAC5CI,aAAaC,QAAQ,WAAYC,KAAKC,UAAUN,IAEhD,eACKnB,EADL,CAEEM,UAAWa,EAAuBZ,KAAI,SAAAmB,GAAI,OAAEA,EAAKlC,QACjDa,KAAMc,OAvDS,cCJD,SD+DF,SAACnB,GAKf,OAHAsB,aAAaC,QAAQ,WAAYC,KAAKC,UAAUE,IAAgBlB,MAAK,SAACC,EAAGC,GAAJ,OACrED,EAAElB,OAASmB,EAAEnB,KAAQkB,EAAElB,KAAOmB,EAAEnB,MAAQ,EAAI,EAAK,OAEjD,eACKQ,EADL,CAEEM,UAAUqB,IAAgBpB,KAAI,SAAAmB,GAAI,OAAEA,EAAKlC,QAAMiB,OAC/CJ,KAAMsB,SAnES,cCPD,QD8EH,SAAC3B,EAAD,GAAkB,IAATT,EAAQ,EAARA,GAClBqC,EAAiB,YAAO5B,EAAMK,MAYlC,OAVAuB,EAAkBb,SAAQ,SAAAC,GACrBA,EAAQzB,KAAOA,IAChByB,EAAQtB,MAAQsB,EAAQtB,SAI3BkC,EAAkBnB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElB,OAASmB,EAAEnB,KAAQkB,EAAElB,KAAOmB,EAAEnB,MAAQ,EAAI,EAAK,KAElF8B,aAAaC,QAAQ,WAAYC,KAAKC,UAAUG,IAEjD,eACK5B,EADL,CAEEK,KAAOuB,EACPtB,UAAYsB,EAAkBrB,KAAI,SAAAC,GAAE,OAAEA,EAAGhB,QAAMiB,YAvFhC,cCFM,gBD6FF,SAACT,EAAD,GAAgC,IAIjDK,EAJ0Bd,EAAsB,EAAtBA,GAAIsC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAErCC,EAAa,IAAIjB,OAAO,cAAe,KAIrCkB,EAAoB,YAAOhC,EAAMK,MAsBvC,MApBc,MAAVyB,EACFE,EAAqBjB,SAAQ,SAAAC,GACxBA,EAAQzB,KAAOA,IAChByB,EAAQxB,KAAOqC,MAED,MAAVC,GACRE,EAAqBjB,SAAQ,SAAAC,GAC3B,GAAGA,EAAQzB,KAAOA,EAAG,CACnB,GAAIsC,EAAMxD,MAAM0D,GAAY,CAC1B,IAAIE,EAAIJ,EAAMxD,MAAM0D,IAAe,EACnCf,EAAQvB,YAAcwC,EAAEC,iBAAiBC,QAAQ,WAAY,IAG/D,OAAOnB,EAAQvB,gBAGrBY,EAAO2B,EAERV,aAAaC,QAAQ,WAAYC,KAAKC,UAAUpB,IAE/C,eACKL,MAxHY,I,QEiBNoC,EArBOhC,EAFD,KAECA,EAAA,mBAGnBiC,KAAgB,SAACrC,EAAD,GAAsB,IAAZsC,EAAW,EAAXA,KACzB,sBACKA,EADL,CAEEC,UAAU,OANM,cAUnBF,KAAe,SAACrC,EAAD,GAAsB,IAAZsC,EAAW,EAAXA,KACxB,OAAO,eACJtC,EADH,GAEGsC,EAFH,CAGAC,UAAU,OAdQ,cAkBnBF,KAAiB,kBAAM,QAlBJ,ICCPnC,G,MAAAA,G,eCYAsC,EAlBS,CACtB,CACEjD,GAAI,EACJK,MAAO,aACP6C,MAAM,IAER,CACElD,GAAI,EACJK,MAAO,aACP6C,MAAM,IAER,CACElD,GAAI,EACJK,MAAO,WACP6C,MAAM,KCkNKC,EAtNKtC,EALC,CACnBuC,SAAS,GACTC,SAAU,IAGQxC,EAAA,mBAEjBiC,KAAmB,SAACrC,GAEnB,IAAI6C,EAAgBrB,KAAKsB,MAAMxB,aAAayB,QAAQ,eAChDC,EAAYxB,KAAKsB,MAAMxB,aAAayB,QAAQ,UAEhD,OAAIC,GAAcH,EAmBhB,eACK7C,EADL,CAEE2C,SAAUE,EACVD,SAAUI,KApBZC,EAAiB1C,KAAI,SAAAmB,GAOnB,OANA/B,IAAaY,KAAI,SAAA2C,GAIf,OAHGA,EAAKrD,SAAW6B,EAAKnC,IACtBmC,EAAKe,MAAMxB,KAAKiC,GAEXvD,OAEFsD,KAGT,eACKjD,EADL,CAEE2C,SAASM,EACTL,SAASjD,UAtBG,cAmCjB0C,KAAiB,SAACrC,EAAD,GAA2B,IAAjBJ,EAAgB,EAAhBA,MAAOL,EAAS,EAATA,GAE3BqD,EAAQ,YAAO5C,EAAM4C,UACrBD,EAAQ,YAAO3C,EAAM2C,UAsB3B,YArBaQ,IAATvD,GAA+B,KAATA,IAExBgD,EAAS3B,KAAK,CACZ1B,GAAKS,EAAM4C,SAASQ,OACpBxD,MAAOA,EACPC,OAAQN,IAGVoD,EAASpC,KAAI,SAAAmB,GACX,OAAGA,EAAKnC,KAAOA,GACbmC,EAAKe,MAAMxB,KAAK,CACd1B,GAAKS,EAAM4C,SAASQ,OACpBxD,MAAOA,EACPC,OAAQN,IAELmC,GAEFiB,MAIT,eACK3C,EADL,CAEE2C,SAAWA,EACXC,SAAWA,OA/DG,cAmEjBP,KAA2B,SAACrC,EAAD,GAAqB,IAAZJ,EAAW,EAAXA,MAE7ByD,EAAc,YAAOrD,EAAM2C,UAC7BpD,EAAKS,EAAM2C,SAASS,OACpBE,EAAY1D,EAOhB,OALAyD,EAAepC,KAAK,CAChB1B,GAAGA,EACHK,MAAM0D,EACNb,MAAM,KAEV,eACKzC,EADL,CAEE2C,SAAUU,OAhFI,cAoFjBhB,KAAqB,SAACrC,EAAD,GAA4B,IAI5CuD,EAJ0BC,EAAiB,EAAjBA,SAAUjE,EAAO,EAAPA,GAClCqD,EAAQ,YAAO5C,EAAM4C,UACrBD,EAAQ,YAAO3C,EAAM2C,UAyB3B,OArBAC,EAASrC,KAAI,SAAA2C,GACRA,EAAK3D,KAAOkE,SAASlE,KACtBgE,EAAaL,EACbA,EAAKrD,OAAS4D,SAASD,OAM3Bb,EAASpC,KAAI,SAAAmB,GACPA,EAAKnC,KAAOkE,SAASD,IACvB9B,EAAKe,MAAMxB,KAAKsC,MAGpBZ,EAASpC,KAAI,SAAAmB,GACPA,EAAKnC,KAAOkE,SAASD,KACvB9B,EAAKe,MAAQf,EAAKe,MAAMiB,QAAO,SAAAR,GAAI,OAAKA,EAAK3D,KAAOgE,EAAWhE,UAInEoE,QAAQC,IAAIjB,GACZ,eACK3C,EADL,CAEE4C,SAASA,EACTD,SAASA,OAlHK,cAsHjBN,KAA6B,SAACrC,EAAD,GAAgC,IAIxD6D,EACAN,EALiCC,EAAsB,EAAtBA,SAAUM,EAAY,EAAZA,OAE3ClB,EAAQ,YAAO5C,EAAM4C,UACrBD,EAAQ,YAAO3C,EAAM2C,UAIzBgB,QAAQC,IAAI,SAAUhB,GAEtBA,EAASrC,KAAI,SAAA2C,GACX,GAAGA,EAAK3D,KAAOkE,SAASK,GAEtB,OADAZ,EAAKrD,OAAS4D,SAASD,GAChBD,EAAaL,KAGxBS,QAAQC,IAAI,aAAcL,GAE1BZ,EAASpC,KAAI,SAAAmB,GACX,GAAGA,EAAKnC,KAAOkE,SAASD,GACtB,OAAOK,EAAiBnC,EAAKe,SAGjCkB,QAAQC,IAAI,iBAAkBC,GAE9B,IAAIE,EAAaF,EAAeH,QAAO,SAAAR,GAAI,OAAIA,EAAK3D,KAAOkE,SAASK,MAqBpE,OAnBAnB,EAASpC,KAAI,SAAAmB,GACX,GAAGA,EAAKnC,KAAOkE,SAASD,GACtB,OAAO9B,EAAKe,MAAQsB,EAEpBrC,EAAKe,MAAQ,GACbG,EAASrC,KAAI,SAAA2C,GACRA,EAAKrD,SAAW6B,EAAKnC,IACtBmC,EAAKe,MAAMxB,KAAKiC,SAKxBS,QAAQC,IAAI,eAAejB,GAG3BgB,QAAQC,IAAI,QAAQhB,GACpBe,QAAQC,IAAI,SAAUG,GAGtB,eACK/D,EADL,CAEE4C,gBArKc,cAyKjBP,KAAc,SAACrC,EAAD,GAA0C,IAInDgE,EAEAD,EANkBE,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,OAAQI,EAAc,EAAdA,UAEpCtB,EAAQ,YAAO5C,EAAM4C,UACrBD,EAAQ,YAAO3C,EAAM2C,UAkCzB,OA7BAC,EAASrC,KAAI,SAAA2C,GACRA,EAAK3D,KAAOkE,SAASK,KACtBZ,EAAKrD,OAAS4D,SAASQ,OAK3BtB,EAASpC,KAAI,SAAAmB,GAIX,OAHGA,EAAKnC,KAAOkE,SAASS,KACtBF,EAAoBtC,EAAKe,OAEpBuB,KAGTD,EAAaC,EAAkBN,QAAO,SAAAR,GAAI,OAAIA,EAAK3D,KAAOkE,SAASK,MAEnEnB,EAASpC,KAAI,SAAAmB,GACX,GAAGA,EAAKnC,KAAOkE,SAASS,GACtB,OAAOxC,EAAKe,MAAQsB,EAEpBrC,EAAKe,MAAQ,GACbG,EAASrC,KAAI,SAAA2C,GACRA,EAAKrD,SAAW6B,EAAKnC,IACtBmC,EAAKe,MAAMxB,KAAKiC,SAMxB,eACKlD,EADL,CAEE4C,WACAD,gBAjNc,ICJLzC,G,MAAAA,GCAAA,ECCOE,EAJD,CACnB+D,WAAW,GAGS/D,EAAA,mBCPI,cDQJ,iBAAO,CACzB+D,WAAW,MAFO,cCNI,cDWJ,iBAAO,CACzBA,WAAW,MANO,I,SEAhBC,EAGAC,IAESC,iBACb,SAACtE,EAAOC,GAAR,OACEsE,YAAgB,eAAKC,EAAN,CAAgBC,KAAMC,MAArCH,CAAoDvE,EAAOC,KAC7DmE,EAAgBO,YAAgBC,Q,gCCflC,qLAGaC,EAAW,WACtB,MAAM,CACJ1E,KAAKkC,MAKIyC,EAAa,SAAClF,EAAOL,GAChC,MAAM,CACJY,KAAMkC,IACNzC,QACAL,OAWSwF,EAAkB,SAACnF,GAC9B,MAAM,CACJO,KAAMkC,IACNzC,UAISoF,EAAmB,SAACxB,EAAUM,GACzC,MAAM,CACJ3D,KAAMkC,IACNmB,WACAM,WAISmB,EAAoB,SAAChB,EAAUH,EAAQI,GAElD,MAAM,CACJ/D,KAAMkC,IACN4B,WACAH,SACAI,e,4ECxCSgB,EAAQ,UAHI,wBAGJ,aAEN,GACbC,OAAQ,SAAAC,GAAW,OACjBC,IAAMC,KAAN,UAAcJ,EAAd,WAAiCE,GAAajG,MAAK,SAAAoG,GAAG,OAAIA,GAAOA,EAAIlF,SAErEmF,GAAI,WACJ,IAAIC,EAAS,CACXC,OAAQ,MACRC,QAAQ,GAAD,OAAKT,EAAL,OACPU,QAASC,KAEX,OAAOR,IAAMI,GAAQtG,MAAK,SAAAoG,GAAG,OAAIA,GAAOA,EAAIlF,U,gBCRnCwF,GAFcR,IAAMS,YAER,WACvB,IAAM9F,EAAQpB,IAAMmH,WAIpB,MAAO,CACLC,OAAQ,mBACRC,cAJCjG,EAAMsC,MAAQtC,EAAMsC,KAAK4D,OAAU5E,aAAayB,QAAQ,YAQ9C,GACbzD,IACA6G,GACA1D,I,wICpBK,IAaM2D,EAAQ,SAAA9D,GAErB,MAAQ,CACNnC,KAAMkC,IACNC,KAAK,eACAA,KAMM+D,EAAS,SAACjB,GAAD,OAAiB,SAAAkB,GAAQ,OAC7CC,EAAUpB,OAAOC,GAAajG,MAAK,SAAAqH,GAAC,OAAKA,EAAIF,EAzBrB,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MAE3B,GAAIA,EAIF,OAFA5E,aAAaC,QAAQ,QAAS2E,GAEvB,CACL/F,KAAMkC,IACN6D,SAiBkDO,CAAWD,EAAEnG,OAAOmG,OAG/DhB,EAAK,kBAAM,SAAAc,GAAQ,OAChCC,EAAUf,KAAKrG,MAAK,SAAAkB,GAAI,OAAIiG,EAASF,EAAM/F,SAE9BqG,EAAU,WAGrB,OAFApF,aAAaqF,WAAW,SAEjB,CACLxG,KAAMkC,O,+BCvCV,4MAAO,IAAMuE,EAAW,WACXC,EAAa,aACbC,EAAoB,oBACpBC,EAAsB,sBACtBC,EAAc,cACdC,EAAO,Q","file":"static/js/main.982c3174.chunk.js","sourcesContent":["export const SIGN_IN = \"SIGN_IN\";\nexport const SET_ME = \"SET_ME\";\nexport const SIGN_OUT = \"SIGN_OUT\";\n","import { createBrowserHistory as createHistory } from \"history\";\n\nexport default createHistory();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Loadable from \"react-loadable\";\n\nexport const App = Loadable({\n  loader: () => import(\"./index\"),\n  loading: () => null\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  {Provider} from 'react-redux';\nimport { Router } from \"react-router-dom\";\nimport history from \"./routes/history\";\n\n\nimport store from './state/store'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\nimport {App} from './routes/loadable';\n// import Trello from './views/pages/Trello/Trello';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App/>\n      {/* <Trello/> */}\n    </Router>\n  </Provider>\n  , document.getElementById('root'));\n\nserviceWorker.unregister();\n","const contacts = [\n  {\n    id: 1,\n    name:'Adam',\n    phoneNumber: 380501111111,\n    edit:false\n  },\n  {\n    id: 2,\n    name:'Luise',\n    phoneNumber: 38050999999,\n    edit:false\n  },\n  {\n    id: 3,\n    name:'Paul',\n    phoneNumber: 38044999999,\n    edit:false\n  },\n  {\n    id: 4,\n    name:'Roza',\n    phoneNumber: 38044999999,\n    edit:false\n  },\n  {\n    id:43,\n    name: 'Helena',\n    phoneNumber: 38044999999,\n    edit:false\n  },\n  {\n    id: 5,\n    name:'Willy',\n    phoneNumber: 380681196024,\n    edit:false\n  },\n  {\n    id: 6,\n    name:'Helga',\n    phoneNumber: 380501084193,\n    edit:false\n  }\n]\n\nexport default contacts;","const initialTasks = [\n  {id: 0, title: 'Think ', status:0 },\n  {id: 3, title: 'Create ', status:0 },\n  {id: 1, title: 'Move ', status:1 },\n  {id: 2, title: 'Done! ', status:2 },\n]\n\nexport default initialTasks;","export default initialState => reducerMap => (state = initialState, action) => {\n  const reducer = reducerMap[action.type];\n  return reducer ? reducer(state, action) : state;\n};","import reducer from \"./reducers\";\n\nimport * as actions from \"./actions\";\n\nexport { actions };\n\nexport default reducer;\n","import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\nimport initialContacts from \"../../../api/contacts\";\n\nconst initialState = {\n  data: [], \n  findItems: [] \n}\n\nconst startReducer = createReducer(initialState)({\n //\n [types.INIT_CONTACTS]: (state, {data}) => {\n  return{\n    ...state,\n    data,\n    findItems: data.map(el=>el.name).sort()\n  }\n},\n\n  [types.SORT]: (state) => {   \n\n    let data = state.data.sort((a, b) =>\n        a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0)\n    return{\n      ...state,\n      data\n    }\n  },\n\n  [types.FIND]: (state, {payload}) => {\n      let findItems = []\n\n      let regExp = new RegExp(`${payload}`, 'gi')\n\n      state.data.forEach(contact => {\n      if (contact.name.match(regExp)) {\n        findItems.push(contact.name);\n      }\n    });\n\n    return{\n      ...state,\n      findItems\n    }\n  },\n\n  [types.DELETE_CONTACT]: (state, {id}) => {\n\n    const contactListAfterDelete = [...state.data];\n\n    let indexOfDelete;\n\n    contactListAfterDelete.forEach((contact, index) => {\n      if(contact.id === id ){\n        indexOfDelete = index;\n      }\n    })\n\n    contactListAfterDelete.splice(indexOfDelete,1);\n    localStorage.setItem(\"contacts\", JSON.stringify(contactListAfterDelete))\n    \n    return{\n      ...state,\n      findItems: contactListAfterDelete.map(item=>item.name),\n      data: contactListAfterDelete\n    }\n  },\n\n  [types.RESET] : (state) => {\n\n    localStorage.setItem('contacts', JSON.stringify(initialContacts.sort((a, b) =>\n    a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0)));\n    \n    return{\n      ...state,\n      findItems:initialContacts.map(item=>item.name).sort(),\n      data: initialContacts\n    }\n  }, \n\n  [types.EDIT] : (state, {id}) => {\n    let contactListToEdit = [...state.data];\n\n    contactListToEdit.forEach(contact => {\n      if(contact.id === id){\n        contact.edit = !contact.edit\n      }\n     });\n\n     contactListToEdit.sort((a, b) => a.name !== b.name ? (a.name < b.name ? -1 : 1) : 0);\n\n     localStorage.setItem(\"contacts\", JSON.stringify(contactListToEdit))\n\n    return{\n      ...state,\n      data : contactListToEdit,\n      findItems : contactListToEdit.map(el=>el.name).sort()\n    }\n  },\n\n  [types.EDIT_CONTACT] : (state, {id, value, field}) => {\n\n    let onlyNumber = new RegExp('(\\\\d){8,11}', 'g')\n\n    let data = [];\n    \n    const contactListAfterEdit = [...state.data];\n\n    if (field === 'n'){\n      contactListAfterEdit.forEach(contact => {\n        if(contact.id === id){  \n          contact.name = value\n        }});\n    }else if (field === 'p'){\n      contactListAfterEdit.forEach(contact => {\n        if(contact.id === id){\n          if (value.match(onlyNumber)){\n            let v = value.match(onlyNumber) || 0\n            contact.phoneNumber = v.toLocaleString().replace(/[\\s.,%]/g, ''); \n          }\n          debugger\n          return contact.phoneNumber\n        }});\n    }\n    data = contactListAfterEdit;\n    \n   localStorage.setItem(\"contacts\", JSON.stringify(data));\n\n    return{\n      ...state,\n      // data : contactListAfterEdit\n    }\n  }\n\n\n});\n\nexport default startReducer;","export const FIND = \"FIND\";\nexport const SORT = \"SORT\";\nexport const EDIT = \"EDIT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const CREATE = \"CREATE\";\nexport const RESET ='RESET';\nexport const INIT_CONTACTS = 'INIT_CONTACTS';\nexport const EDIT_CONTACT ='EDIT_CONTACT';","import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\n\nconst initialState = null;\n\nconst signInReducer = createReducer(initialState)({\n  //\n\n  [types.SIGN_IN]: (state, { user }) => {\n    return{\n      ...user,\n      isLogged: true,\n  }\n},\n\n  [types.SET_ME]: (state, { user }) => {\n    return ({\n    ...state,\n    ...user,\n    isLogged: true\n  })\n}, \n\n  [types.SIGN_OUT]: () => null\n});\n\nexport default signInReducer;\n","import reducer from \"./reducers\";\n\nimport * as userActions from \"./actions\";\n\nexport { userActions };\n\nexport default reducer;\n","const initialTaskList = [\n  {\n    id: 0,\n    title: 'Unfinished',\n    tasks:[]\n  },\n  {\n    id: 1,\n    title: 'In process',\n    tasks:[]\n  },\n  {\n    id: 2,\n    title: 'Finished',\n    tasks:[]\n  }\n]\n\nexport default initialTaskList\n\n// art.match(/\\w+/g).toLocaleString().replace(/[\\s.,%]/g, '')","import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\"\nimport initialTasks from '../../../api/tasks'\nimport initialTaskLists from \"../../../api/taskList\";\n\nconst initialState = {\n  taskList:[],\n  allTasks: []\n}\n\nconst taskReducer = createReducer(initialState)({\n  //\n  [types.INIT_TASKS]: (state) => {\n\n    let storeTaskList = JSON.parse(localStorage.getItem(\"tasks-list\"));\n    let storeTask = JSON.parse(localStorage.getItem(\"tasks\"));\n    \n    if(!storeTask || !storeTaskList){\n      \n      initialTaskLists.map(item => {\n        initialTasks.map(task => {\n          if(task.status === item.id){\n            item.tasks.push(task);\n          }\n          return initialTasks\n        })\n        return initialTaskLists\n      }) \n\n      return{\n        ...state,\n        taskList:initialTaskLists ,\n        allTasks:initialTasks\n      }\n    }\n    else{\n      return{\n        ...state,\n        taskList: storeTaskList,\n        allTasks: storeTask\n      }\n      \n    }\n  },\n  \n  [types.ADD_TASK]: (state, { title, id }) => {\n    \n    const allTasks = [...state.allTasks];\n    const taskList = [...state.taskList];\n    if (title!== undefined && title !=='')\n    {\n      allTasks.push({\n        id : state.allTasks.length,\n        title: title,\n        status: id\n      })\n  \n      taskList.map(item => {\n        if(item.id === id){\n          item.tasks.push({\n            id : state.allTasks.length,\n            title: title,\n            status: id\n          })\n        return item\n      }\n      return taskList\n    })\n  }\n\n    return{\n      ...state,\n      taskList : taskList,\n      allTasks : allTasks\n    }\n  },\n\n  [types.CREATE_NEW_COLLUM] : (state, {title}) => {\n    \n    const taskListUpdate = [...state.taskList]\n    let id = state.taskList.length\n    let taskTitle = title\n\n    taskListUpdate.push({\n        id:id,\n        title:taskTitle,\n        tasks:[]\n      })\n    return{\n      ...state,\n      taskList: taskListUpdate,\n    }\n  },\n\n  [types.CHANGE_TASK] : (state , {columnId, id}) =>{\n    const allTasks = [...state.allTasks];\n    const taskList = [...state.taskList];\n    \n    let targetTask\n\n    allTasks.map(task => { \n      if(task.id === parseInt(id)){\n        targetTask = task\n        task.status = parseInt(columnId)        \n      }\n    });\n    \n\n\n    taskList.map(item => {\n      if (item.id === parseInt(columnId)){\n        item.tasks.push(targetTask)\n      }\n    })\n    taskList.map(item => {\n      if (item.id !== parseInt(columnId)){\n        item.tasks = item.tasks.filter(task  => task.id !== targetTask.id)\n      }\n    })\n    \n    console.log(taskList);\n    return{\n      ...state,\n      allTasks:allTasks,\n      taskList:taskList\n    }\n  },\n\n  [types.DRAG_ITEM_TO_COLUMN] : (state, {columnId, taskId}) => {\n  \n    let allTasks = [...state.allTasks]\n    let taskList = [...state.taskList]\n    let targetTaskList\n    let targetTask\n\n    console.log('before', allTasks);\n\n    allTasks.map(task => {\n      if(task.id === parseInt(taskId)){\n        task.status = parseInt(columnId)\n        return targetTask = task\n      }\n    })\n    console.log('targetTask', targetTask);\n    \n    taskList.map(item=>{\n      if(item.id === parseInt(columnId)){\n        return targetTaskList = item.tasks\n      }\n    })\n    console.log('targetTaskList', targetTaskList);\n    \n    let filterList = targetTaskList.filter(task => task.id !== parseInt(taskId))\n    \n    taskList.map(item=>{\n      if(item.id === parseInt(columnId)){\n        return item.tasks = filterList\n      }else{\n        item.tasks = []\n        allTasks.map(task=>{\n          if(task.status === item.id){\n            item.tasks.push(task)\n          }\n        })\n      }\n    })\n    console.log('taskList UPD',taskList);\n    \n\n    console.log('after',allTasks);\n    console.log('filter', filterList);\n    \n    \n    return{\n      ...state,\n      allTasks\n    }\n  },\n\n  [types.SWAP] : (state, {columnID, taskId, oldColumn}) =>{\n  \n    let allTasks = [...state.allTasks]\n    let taskList = [...state.taskList]\n    let oldTargetTaskList\n    // let targetTask\n    let filterList\n\n    allTasks.map(task => {\n      if(task.id === parseInt(taskId)){\n        task.status = parseInt(columnID)\n        // targetTask = task\n      }\n    })\n    \n    taskList.map(item=>{\n      if(item.id === parseInt(oldColumn)){\n        oldTargetTaskList = item.tasks\n      }\n      return oldTargetTaskList\n    })\n\n    filterList = oldTargetTaskList.filter(task => task.id !== parseInt(taskId))\n    \n    taskList.map(item=>{\n      if(item.id === parseInt(oldColumn)){\n        return item.tasks = filterList\n      }else{\n        item.tasks = []\n        allTasks.map(task=>{\n          if(task.status === item.id){\n            item.tasks.push(task)\n          }\n        })\n      }\n    })\n    \n    return{\n      ...state,\n      allTasks,\n      taskList\n    }\n  }\n});\n\nexport default taskReducer;","import reducer from \"./reducers\";\n\nimport * as taskActions from \"./actions\";\n\nexport { taskActions };\n\nexport default reducer;\n","import reducer from \"./reducers\";\n\nimport * as actions from \"./actions\";\n\nexport { actions };\n\nexport default reducer;\n","import * as types from \"./types\";\nimport createReducer from \"../../../utils/createReducer\";\n\nconst initialState = {\n  isShowing: false\n};\n\nconst loaderReducer = createReducer(initialState)({\n  [types.SHOW_SIDER]: () => ({\n    isShowing: true\n  }),\n\n  [types.HIDE_SIDER]: () => ({\n    isShowing: false\n  })\n});\n\nexport default loaderReducer;\n","export const SHOW_SIDER = \"SHOW_SIDER\";\nexport const HIDE_SIDER = \"HIDE_SIDER\";\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport * as reducers from \"./ducks\";\nimport { reducer as formReducer } from \"redux-form\";\n\n\n\nconst composeEnhancer =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose;\n\nexport default createStore(\n  (state, action) =>\n    combineReducers({ ...reducers, form: formReducer })(state, action),\n  composeEnhancer(applyMiddleware(thunkMiddleware))\n);\n","import * as types from \"./types\";\n\n\nexport const initTask = ( )=>{\n  return{\n    type:types.INIT_TASKS,\n    \n  }\n}\n\nexport const createTask = (title, id) =>{\n  return{\n    type: types.ADD_TASK,\n    title,\n    id\n  }\n}\nexport const changeTask = (columnId, id) => {\n  return{\n    type: types.CHANGE_TASK,\n    columnId,\n    id\n  }\n}\n\nexport const createNewCollum = (title) =>{\n  return{\n    type: types.CREATE_NEW_COLLUM,\n    title\n  }\n}\n\nexport const dragItemToColumn = (columnId, taskId) => {\n  return{\n    type: types.DRAG_ITEM_TO_COLUMN,\n    columnId, \n    taskId\n  }\n}\n\nexport const swapToOtherColumn = (columnID, taskId ,oldColumn) => {\n  \n  return{\n    type: types.SWAP,\n    columnID,\n    taskId,\n    oldColumn\n  }\n}","import axios from \"axios\";\nimport { setHeader } from \"./index\";\n\nexport const USER_HOST = 'http://localhost:3010'\n\n\nexport const USER_API = `${USER_HOST}/api/auth`;\n\nexport default {\n  signin: credentials =>\n    axios.post(`${USER_API}/signin`, credentials).then(res => res && res.data),\n\n    me: () => {\n    let config = {\n      method: \"GET\",\n      baseURL: `${USER_API}/me`,\n      headers: setHeader()\n    };\n    return axios(config).then(res => res && res.data)\n  }\n  \n};\n","import axios from 'axios'\n\nimport contacts from './contacts'\nimport users from './users'\nimport tasks from './tasks';\n\nimport store from '../state/store'\n\nexport const CanselToken = axios.CancelToken;\n\nexport const setHeader = () => {\n  const state = store.getState();\n  const token =\n    (state.user && state.user.token) || localStorage.getItem(\"token\");\n\n  return {\n    Accept: \"application/json\",\n    Authorization: token,\n  };\n};\n\nexport default {\n  contacts,\n  users,\n  tasks\n};","import * as types from \"./types\";\nimport api from '../../../api'; // like api\n\n\nexport const userSignIn = ( {token} ) => { \n  \n  if (token) {\n    \n    localStorage.setItem(\"token\", token);\n     \n    return {\n      type: types.SIGN_IN,\n      token\n    };\n  }\n};\n\nexport const setMe = user =>{\n\nreturn ({\n  type: types.SET_ME,\n  user: {\n    ...user,\n    // permissions: user.allPermissions\n  }\n})\n}\n\nexport const signIn = (credentials) => dispatch =>\n  api.users.signin(credentials).then(d => (d ? dispatch(userSignIn(d.data)):d))\n\n \nexport const me = () => dispatch => \napi.users.me().then(data => dispatch(setMe(data)));\n\nexport const signOut = () => {\n  localStorage.removeItem(\"token\");\n\n  return {\n    type: types.SIGN_OUT\n  };\n};\n","export const ADD_TASK = \"ADD_TASK\";\nexport const INIT_TASKS = \"INIT_TASKS\";\nexport const CREATE_NEW_COLLUM = 'CREATE_NEW_COLLUM'\nexport const DRAG_ITEM_TO_COLUMN = 'DRAG_ITEM_TO_COLUMN'\nexport const CHANGE_TASK = 'CHANGE_TASK'\nexport const SWAP = 'SWAP'"],"sourceRoot":""}